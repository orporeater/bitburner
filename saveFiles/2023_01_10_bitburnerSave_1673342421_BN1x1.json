{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"max\":24,\"current\":24},\"skills\":{\"hacking\":2844,\"strength\":115,\"defense\":140,\"dexterity\":80,\"agility\":69,\"charisma\":103,\"intelligence\":0},\"exp\":{\"hacking\":1053824096182.2347,\"strength\":2931.6723631562795,\"defense\":2931.6723631562795,\"dexterity\":2931.6723631562795,\"agility\":2931.6723631562795,\"charisma\":4343.565219845608,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.5779180456652127,\"hacking_speed\":1.5436322807136635,\"hacking_money\":5.119185560511979,\"hacking_grow\":2.3924452746952016,\"hacking\":4.147689237700031,\"strength\":1.892651152807104,\"defense\":2.304097055591257,\"dexterity\":1.3206297916317513,\"agility\":1.1483737318536968,\"charisma\":1.4436698343303618,\"hacking_exp\":4.368708231938868,\"strength_exp\":1.3835169245665968,\"defense_exp\":1.3835169245665968,\"dexterity_exp\":1.3835169245665968,\"agility_exp\":1.3835169245665968,\"charisma_exp\":1.3835169245665968,\"company_rep\":1.826242340427908,\"faction_rep\":1.3835169245665968,\"crime_money\":1.0936892684320922,\"crime_success\":1.0936892684320922,\"hacknet_node_money\":2.758386868354653,\"hacknet_node_purchase_cost\":0.6994674100594405,\"hacknet_node_ram_cost\":0.9143364837378306,\"hacknet_node_core_cost\":0.9143364837378306,\"hacknet_node_level_cost\":0.7771860111771559,\"work_money\":1.2030581952753017,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":9,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Combat Rib II\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"NutriGen Implant\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"INFRARET Enhancement\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V3 Upgrade\"},{\"level\":10,\"name\":\"NeuroFlux Governor\"},{\"level\":11,\"name\":\"NeuroFlux Governor\"},{\"level\":12,\"name\":\"NeuroFlux Governor\"},{\"level\":13,\"name\":\"NeuroFlux Governor\"},{\"level\":14,\"name\":\"NeuroFlux Governor\"},{\"level\":15,\"name\":\"NeuroFlux Governor\"},{\"level\":16,\"name\":\"NeuroFlux Governor\"},{\"level\":17,\"name\":\"NeuroFlux Governor\"},{\"level\":18,\"name\":\"NeuroFlux Governor\"},{\"level\":19,\"name\":\"NeuroFlux Governor\"},{\"level\":20,\"name\":\"NeuroFlux Governor\"},{\"level\":21,\"name\":\"NeuroFlux Governor\"},{\"level\":22,\"name\":\"NeuroFlux Governor\"},{\"level\":23,\"name\":\"NeuroFlux Governor\"},{\"level\":24,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"The Red Pill\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Daedalus\",\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"Chongqing\",\"Ishima\",\"New Tokyo\",\"Netburners\",\"Tian Di Hui\",\"CyberSec\"],\"factionInvitations\":[],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3681882210.432377,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3680584183.085696,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3679146596.8198223,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3678516338.930418,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3677415006.883029,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3674960900.243514,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3672306270.750104,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3669799414.7312565,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3668125175.40479,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3666001056.5729666,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145729.6000000602,\"ram\":64,\"totalMoneyGenerated\":3665207808.3875284,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145609.60000005976,\"ram\":64,\"totalMoneyGenerated\":3664561715.1125097,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145609.60000005976,\"ram\":64,\"totalMoneyGenerated\":3664315539.5061836,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145609.60000005976,\"ram\":64,\"totalMoneyGenerated\":3663949422.3946705,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145549.60000005952,\"ram\":64,\"totalMoneyGenerated\":3662685867.900326,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145549.60000005952,\"ram\":64,\"totalMoneyGenerated\":3661553323.1258383,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145549.60000005952,\"ram\":64,\"totalMoneyGenerated\":3661502575.5160675,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145549.60000005952,\"ram\":64,\"totalMoneyGenerated\":3661492893.5781593,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145549.60000005952,\"ram\":64,\"totalMoneyGenerated\":3661419620.5048933,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":145549.60000005952,\"ram\":64,\"totalMoneyGenerated\":3661189288.066167,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":142819.4000000496,\"ram\":64,\"totalMoneyGenerated\":3612911293.2313356,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":142818.80000004958,\"ram\":64,\"totalMoneyGenerated\":3612911290.748788,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":142818.4000000496,\"ram\":64,\"totalMoneyGenerated\":3612911289.0937557,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":142818.0000000496,\"ram\":64,\"totalMoneyGenerated\":3612911287.4387236,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-27\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-28\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-29\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-30\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-31\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-32\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-33\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-34\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-35\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-36\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-37\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-38\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":25298.018897856848,\"onlineTimeSeconds\":133120.99999984924,\"ram\":64,\"totalMoneyGenerated\":3366179940.8323812,\"name\":\"hacknet-node-39\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{\"OmniTek Incorporated\":\"Software Engineering Intern\"},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"OmniTek Incorporated\",\"money\":134113266784383.19,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":490272441515587.25,\"hacknet\":141687139414.302,\"hacknet_expenses\":-40029317830468.64,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":134113265784383.19,\"work\":2025759.3161196648,\"servers\":-173811498402444.8,\"other\":-5308600000,\"augmentations\":-142423540067049.56}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-8,\"class\":-34904760,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":497544995462417.9,\"hacknet\":404799251189.5483,\"hacknet_expenses\":-40782091274750.94,\"hospitalization\":-800000,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":134599360645853.06,\"work\":3196124.1161196083,\"servers\":-174967707846722.12,\"other\":-11872199224.392487,\"augmentations\":-147557530242379.4}},\"playtimeSinceLastAug\":146332400,\"playtimeSinceLastBitnode\":2205654800,\"purchasedServers\":[\"moneyServer-0\",\"moneyServer-1\",\"farmServer-0\",\"farmServer-1\",\"farmServer-2\",\"farmServer-3\",\"moneyServer-2\",\"farmServer-4\",\"farmServer-5\",\"farmServer-6\",\"farmServer-7\",\"moneyServer-3\",\"moneyServer-4\",\"moneyServer-5\",\"moneyServer-6\",\"moneyServer-7\",\"moneyServer-8\"],\"scriptProdSinceLastAug\":157665833581006.72,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":[],\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1671137853951},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1671138393965},{\"ID\":\"WORKOUT\",\"unlockedOn\":1671146193966},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1671173871600},{\"ID\":\"TOR\",\"unlockedOn\":1671174291602},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1671174471602},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1671174531592},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1671233460823},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1672421371960},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1672422211962},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1672422391965},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1672423711959},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1672423891961},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1672583693989},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1672583753987},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1672584534004},{\"ID\":\"NITESEC\",\"unlockedOn\":1672584534007},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1672584833999},{\"ID\":\"TRAVEL\",\"unlockedOn\":1672584834002},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1672692811006},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1672764989930},{\"ID\":\"DONATION\",\"unlockedOn\":1672764989951},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1672951832056},{\"ID\":\"FROZE\",\"unlockedOn\":1673104787388},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1673208303290},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1673212577733},{\"ID\":\"4S\",\"unlockedOn\":1673252912192}],\"terminalCommandHistory\":[\"buy DeepscanV2.exe\",\"buy AutoLink.exe\",\"buy -l\",\"home\",\"run scripts/informationFunctions/listServerHackable.js 1\",\"nano scripts/test1.js\",\"run scripts/test1.js\",\"run scripts/informationFunctions/listServerHackable.js 1\",\"run fl1ght.exe\",\"run scripts/informationFunctions/costServer.js\",\"run scripts/purchaseServer.js\",\"scan-analyze 10\",\"scan\",\"backdoor\",\"scan\",\"ls\",\"home\",\"scan-analyze 10\",\"backdoor\",\"scan\",\"connect I.I.I.I\",\"backdoor\",\"home\",\"run scripts/informationFunctions/listServerHackable.js\",\"scan-analyze 10\",\"backdoor\",\"home\",\"run fl1ght.exe\",\"run scripts/informationFunctions/listServerHackable.js 1\",\"run scripts/purchaseServer.js\",\"nano scripts/enums/enums.js\",\"nano scripts/executingScripts/hackNodes.js\",\"run main.js\",\"connect darkweb\",\"buy -all\",\"buy -a\",\"home\",\"run scripts/informationFunctions/findRoute.js .\",\"run scripts/informationFunctions/findRoute.js the-cave\",\"run scripts/informationFunctions/listServerHackable.js\",\"run scripts/informationFunctions/findRoute.js The-Cave\",\"run scripts/informationFunctions/findRoute.js powerhouse-fitness\",\"scan-analyze 10\",\"backdoor\",\"home\",\"run scripts/executingScripts/runHomeServer.js\",\"run scripts/purchaseServer.js\",\"nano scripts/executingScripts/hackNodes.js\",\"nano scripts/enums/enums.js\",\"run scripts/purchaseServer.js\"],\"lastUpdate\":1673342421104,\"lastSave\":1673340262566,\"totalPlaytime\":2205654800,\"currentWork\":{\"ctor\":\"CompanyWork\",\"data\":{\"type\":\"COMPANY\",\"singularity\":false,\"cyclesWorked\":15068,\"companyName\":\"OmniTek Incorporated\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"a7ab312ea0b53\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"77.3.4.2\",\"isConnectedTo\":true,\"maxRam\":1048576,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"AutoLink.exe\",\"Formulas.exe\"],\"ramUsed\":1048434.3499999989,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"main.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.10699999999,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16117.61000001367,\"pid\":1,\"ramUsage\":7.45,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///8cf47093-5371-4dc3-81cc-55691bdcf376\",\"moduleSequenceNumber\":1589},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///25b8ba3e-4948-4742-81f5-bdcfa536f924\",\"moduleSequenceNumber\":1586},{\"filename\":\"main.js\",\"url\":\"blob:file:///20efb290-498c-4a33-95c0-3073c4bcbb71\",\"moduleSequenceNumber\":1603}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.11099999999,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16117.61000001367,\"pid\":2,\"ramUsage\":6.1,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///febd3b8e-b741-4c73-966f-7a7a689e9c5d\",\"moduleSequenceNumber\":15152},{\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"url\":\"blob:file:///f1272456-3549-415e-8f31-afd80bd9f6c5\",\"moduleSequenceNumber\":15253}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[6963046,27736,20802,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":699759.5885341008,\"onlineMoneyMade\":6963046,\"onlineRunningTime\":8.610000000000003,\"pid\":683,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[43792988,6934,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":727022.9491263387,\"onlineMoneyMade\":43792988,\"onlineRunningTime\":8.610000000000003,\"pid\":684,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[107871976,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":727022.9491263387,\"onlineMoneyMade\":107871976,\"onlineRunningTime\":8.610000000000003,\"pid\":685,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[54925258,6934,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":681584.0148059425,\"onlineMoneyMade\":54925258,\"onlineRunningTime\":8.610000000000003,\"pid\":686,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[60621974,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":545267.2118447539,\"onlineMoneyMade\":60621974,\"onlineRunningTime\":8.610000000000003,\"pid\":687,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[65974434,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":454389.3432039617,\"onlineMoneyMade\":65974434,\"onlineRunningTime\":8.610000000000003,\"pid\":688,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[88008664,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":454389.3432039617,\"onlineMoneyMade\":88008664,\"onlineRunningTime\":8.610000000000003,\"pid\":689,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[93661160,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":636145.0804855463,\"onlineMoneyMade\":93661160,\"onlineRunningTime\":8.610000000000003,\"pid\":690,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[140912199,6934,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":318072.54024277313,\"onlineMoneyMade\":140912199,\"onlineRunningTime\":8.610000000000003,\"pid\":691,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[185973154,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":454389.3432039617,\"onlineMoneyMade\":185973154,\"onlineRunningTime\":8.610000000000003,\"pid\":692,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[379563476,6934,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":363511.47456316935,\"onlineMoneyMade\":379563476,\"onlineRunningTime\":8.610000000000003,\"pid\":693,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[450658704,6934,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":272633.60592237697,\"onlineMoneyMade\":450658704,\"onlineRunningTime\":8.610000000000003,\"pid\":694,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[592907452,6934,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":363511.47456316935,\"onlineMoneyMade\":592907452,\"onlineRunningTime\":8.610000000000003,\"pid\":695,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1306172091,6934,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":363511.47456316935,\"onlineMoneyMade\":1306172091,\"onlineRunningTime\":8.610000000000003,\"pid\":696,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":697,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":698,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":699,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":700,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":701,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":702,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":703,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":704,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":705,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":706,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":707,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":708,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":709,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":710,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":711,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":712,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":713,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":714,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":715,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":716,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":717,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":718,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":719,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":720,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":721,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":722,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":723,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":724,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":725,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":726,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":727,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":728,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":729,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":730,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":731,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":732,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":733,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":734,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":735,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":736,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":737,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":738,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":739,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":740,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":741,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":742,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":743,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":744,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":745,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst files = ns.ls(\\\"home\\\", \\\".js\\\")\\n\\tfor (const file of files) {\\n\\t\\tif (file !== ns.getScriptName()) {\\n\\t\\t\\tns.tprintf(file)\\n\\t\\t\\tns.rm(file)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"deleteFiles.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"deleteFiles.js\",\"url\":\"blob:file:///63d12755-f638-477d-b056-867adc9d9d54\",\"moduleSequenceNumber\":1066}],\"dependents\":[],\"ramUsage\":2.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":74,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export class ServersList {\\n    servers;\\n    ns;\\n    constructor(ns) {\\n        this.ns = ns;\\n        this.servers = this.getAllServers();\\n    }\\n    get value() {\\n        return this.servers;\\n    }\\n    get hackable() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hackableWithRoot() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking &&\\n                serverStats.hasAdminRights) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hackableWithRootAndMoney() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking &&\\n                serverStats.hasAdminRights &&\\n                serverStats.moneyMax > 0) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hackableWithRootAndMoneyAndRam() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking &&\\n                serverStats.hasAdminRights &&\\n                serverStats.moneyMax > 0 &&\\n                serverStats.maxRam > 0) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get documentsLit() {\\n        const serverDocuments = { '': [] };\\n        for (const server of this.servers) {\\n            const files = this.ns.ls(server, 'lit');\\n            if (files.length && server !== 'home') {\\n                serverDocuments[server] = files;\\n            }\\n        }\\n        return serverDocuments;\\n    }\\n    get documentsCct() {\\n        const serverDocuments = { '': [] };\\n        for (const server of this.servers) {\\n            const files = this.ns.ls(server, 'cct');\\n            if (files.length && server !== 'home') {\\n                serverDocuments[server] = files;\\n            }\\n        }\\n        return serverDocuments;\\n    }\\n    get allFiles() {\\n        const serverDocuments = { '': [] };\\n        for (const server of this.servers) {\\n            const files = this.ns.ls(server);\\n            if (files.length && server !== 'home') {\\n                serverDocuments[server] = files;\\n            }\\n        }\\n        return serverDocuments;\\n    }\\n    get hasNoBackdoor() {\\n        const serverList = [];\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (!serverStats.backdoorInstalled) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hasBackdoor() {\\n        const serverList = [];\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.backdoorInstalled) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    getAllServers(rootHost = 'home') {\\n        this.ns.disableLog('ALL');\\n        let pendingScan = [rootHost];\\n        const list = new Set(pendingScan);\\n        while (pendingScan.length) {\\n            const hostname = pendingScan.shift();\\n            list.add(hostname);\\n            pendingScan.push(...this.ns.scan(hostname));\\n            pendingScan = pendingScan.filter((host) => !list.has(host));\\n        }\\n        const finalList = [...list].sort((a, b) => this.ns.getServerRequiredHackingLevel(a) -\\n            this.ns.getServerRequiredHackingLevel(b));\\n        return [...finalList];\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyc2xpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9jbGFzc2VzL3NlcnZlcnNsaXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxXQUFXO0lBQ2YsT0FBTyxDQUFXO0lBQ2xCLEVBQUUsQ0FBQztJQUVYLFlBQW1CLEVBQU07UUFDeEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsSUFBVyxLQUFLO1FBQ2YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDbEIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDM0MsS0FBSyxNQUFNLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2xDLE1BQU0sV0FBVyxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3RELElBQUksV0FBVyxDQUFDLG9CQUFvQixJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFO2dCQUM5RCxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxnQkFBZ0I7UUFDMUIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7UUFFM0MsS0FBSyxNQUFNLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2xDLE1BQU0sV0FBVyxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRXRELElBQ0MsV0FBVyxDQUFDLG9CQUFvQixJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTztnQkFDekQsV0FBVyxDQUFDLGNBQWMsRUFDekI7Z0JBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUN4QjtTQUNEO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQVcsd0JBQXdCO1FBQ2xDLE1BQU0sVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUNoQyxNQUFNLE1BQU0sR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQzNDLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxNQUFNLFdBQVcsR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUNDLFdBQVcsQ0FBQyxvQkFBb0IsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU87Z0JBQ3pELFdBQVcsQ0FBQyxjQUFjO2dCQUMxQixXQUFXLENBQUMsUUFBUSxHQUFHLENBQUMsRUFDdkI7Z0JBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUN4QjtTQUNEO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQVcsOEJBQThCO1FBQ3hDLE1BQU0sVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUNoQyxNQUFNLE1BQU0sR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRTNDLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxNQUFNLFdBQVcsR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUNDLFdBQVcsQ0FBQyxvQkFBb0IsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU87Z0JBQ3pELFdBQVcsQ0FBQyxjQUFjO2dCQUMxQixXQUFXLENBQUMsUUFBUSxHQUFHLENBQUM7Z0JBQ3hCLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUNyQjtnQkFDRCxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3RCLE1BQU0sZUFBZSxHQUE2QixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUU3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQWEsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRWxELElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUN0QyxlQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ2hDO1NBQ0Q7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3RCLE1BQU0sZUFBZSxHQUE2QixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUU3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRXhDLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUN0QyxlQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ2hDO1NBQ0Q7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2xCLE1BQU0sZUFBZSxHQUE2QixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUU3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFakMsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLE1BQU0sS0FBSyxNQUFNLEVBQUU7Z0JBQ3RDLGVBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7YUFDaEM7U0FDRDtRQUNELE9BQU8sZUFBZSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxJQUFXLGFBQWE7UUFDdkIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxNQUFNLFdBQVcsR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixFQUFFO2dCQUNuQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxXQUFXO1FBQ3JCLE1BQU0sVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUNoQyxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxXQUFXLEdBQVcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdEQsSUFBSSxXQUFXLENBQUMsaUJBQWlCLEVBQUU7Z0JBQ2xDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDeEI7U0FDRDtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFFTyxhQUFhLENBQUMsUUFBUSxHQUFHLE1BQU07UUFDdEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUIsSUFBSSxXQUFXLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QixNQUFNLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNsQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUU7WUFDMUIsTUFBTSxRQUFRLEdBQVcsV0FBVyxDQUFDLEtBQUssRUFBRyxDQUFDO1lBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFbkIsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDNUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzVEO1FBQ0QsTUFBTSxTQUFTLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLElBQUksQ0FDL0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDUixJQUFJLENBQUMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQyxDQUN6QyxDQUFDO1FBQ0YsT0FBTyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDdkIsQ0FBQztDQUNEIn0=\",\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":75,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":76,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { HacknetNode } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    while (true) {\\n        let whileCounter = 0;\\n        const numberNodes = ns.hacknet.numNodes();\\n        const moneyAvailable = ns.getPlayer().money;\\n        while (numberNodes < HacknetNode.MAX_NUMBER &&\\n            whileCounter < HacknetNode.MAX_NUMBER) {\\n            const nodeCost = ns.hacknet.getPurchaseNodeCost();\\n            if (numberNodes < HacknetNode.MAX_NUMBER) {\\n                if (nodeCost < moneyAvailable) {\\n                    ns.hacknet.purchaseNode();\\n                }\\n            }\\n            whileCounter++;\\n        }\\n        for (let node = 0; node < numberNodes; node++) {\\n            const nodeStats = ns.hacknet.getNodeStats(node);\\n            for (let lvl = 0; lvl < HacknetNode.MAX_LVL - nodeStats.level; lvl++) {\\n                const lvlCost = ns.hacknet.getLevelUpgradeCost(node, 1);\\n                if (lvlCost < moneyAvailable) {\\n                    ns.hacknet.upgradeLevel(node, 1);\\n                }\\n                else {\\n                    break;\\n                }\\n            }\\n            for (let ram = 0; ram < HacknetNode.MAX_RAM - nodeStats.ram; ram++) {\\n                const ramCost = ns.hacknet.getRamUpgradeCost(node, 1);\\n                if (ramCost < moneyAvailable) {\\n                    ns.hacknet.upgradeRam(node, 1);\\n                }\\n                else {\\n                    break;\\n                }\\n            }\\n            for (let cores = 0; cores < HacknetNode.MAX_CORES - nodeStats.cores; cores++) {\\n                const coresCost = ns.hacknet.getCoreUpgradeCost(node, 1);\\n                if (coresCost < moneyAvailable) {\\n                    ns.hacknet.upgradeCore(node, 1);\\n                }\\n                else {\\n                    break;\\n                }\\n            }\\n        }\\n        await ns.sleep(60000);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFja05vZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9oYWNrTm9kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXRELE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsT0FBTyxJQUFJLEVBQUU7UUFDWixJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7UUFFckIsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMxQyxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDO1FBRTVDLE9BQ0MsV0FBVyxHQUFHLFdBQVcsQ0FBQyxVQUFVO1lBQ3BDLFlBQVksR0FBRyxXQUFXLENBQUMsVUFBVSxFQUNwQztZQUNELE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztZQUNsRCxJQUFJLFdBQVcsR0FBRyxXQUFXLENBQUMsVUFBVSxFQUFFO2dCQUN6QyxJQUFJLFFBQVEsR0FBRyxjQUFjLEVBQUU7b0JBQzlCLEVBQUUsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7aUJBQzFCO2FBQ0Q7WUFFRCxZQUFZLEVBQUUsQ0FBQztTQUNmO1FBQ0QsS0FBSyxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLFdBQVcsRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUM5QyxNQUFNLFNBQVMsR0FBYyxFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUUzRCxLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsV0FBVyxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFO2dCQUNyRSxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDeEQsSUFBSSxPQUFPLEdBQUcsY0FBYyxFQUFFO29CQUM3QixFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ2pDO3FCQUFNO29CQUNOLE1BQU07aUJBQ047YUFDRDtZQUVELEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxXQUFXLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7Z0JBQ25FLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN0RCxJQUFJLE9BQU8sR0FBRyxjQUFjLEVBQUU7b0JBQzdCLEVBQUUsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztpQkFDL0I7cUJBQU07b0JBQ04sTUFBTTtpQkFDTjthQUNEO1lBQ0QsS0FDQyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQ2IsS0FBSyxHQUFHLFdBQVcsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssRUFDL0MsS0FBSyxFQUFFLEVBQ047Z0JBQ0QsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pELElBQUksU0FBUyxHQUFHLGNBQWMsRUFBRTtvQkFDL0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUNoQztxQkFBTTtvQkFDTixNQUFNO2lCQUNOO2FBQ0Q7U0FDRDtRQUNELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN0QjtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///6cceb283-a6b8-42b6-81b0-eb39878b9f0d\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"url\":\"blob:file:///d1fe42aa-31cd-481a-8662-072dfddcd713\",\"moduleSequenceNumber\":148}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":148,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export var OwnServerList;\\n(function (OwnServerList) {\\n    OwnServerList[\\\"HOME\\\"] = \\\"home\\\";\\n    OwnServerList[\\\"FARM_SERVER\\\"] = \\\"farmServer\\\";\\n    OwnServerList[\\\"MONEY_SERVER\\\"] = \\\"moneyServer\\\";\\n    OwnServerList[\\\"TARGET_EXP_FARM_SERVERS\\\"] = \\\"joesguns\\\";\\n})(OwnServerList || (OwnServerList = {}));\\nexport var HacknetNode;\\n(function (HacknetNode) {\\n    HacknetNode[HacknetNode[\\\"MAX_NUMBER\\\"] = 16] = \\\"MAX_NUMBER\\\";\\n    HacknetNode[HacknetNode[\\\"MAX_RAM\\\"] = 64] = \\\"MAX_RAM\\\";\\n    HacknetNode[HacknetNode[\\\"MAX_LVL\\\"] = 200] = \\\"MAX_LVL\\\";\\n    HacknetNode[HacknetNode[\\\"MAX_CORES\\\"] = 16] = \\\"MAX_CORES\\\";\\n})(HacknetNode || (HacknetNode = {}));\\nexport var ScriptPath;\\n(function (ScriptPath) {\\n    ScriptPath[\\\"EXP_FARM\\\"] = \\\"/scripts/executingScripts/expFarm.js\\\";\\n    ScriptPath[\\\"HACK_NODES\\\"] = \\\"/scripts/executingScripts/hackNodes.js\\\";\\n    ScriptPath[\\\"MONEY_FARM\\\"] = \\\"/scripts/executingScripts/moneyFarm.js\\\";\\n    ScriptPath[\\\"RUN_EXP_SERVERS\\\"] = \\\"/scripts/executingScripts/runExpFarmServers.js\\\";\\n    ScriptPath[\\\"RUN_HOME_SERVER\\\"] = \\\"/scripts/executingScripts/runHomeServer.js\\\";\\n    ScriptPath[\\\"RUN_MONEY_SERVERS\\\"] = \\\"/scripts/executingScripts/runMoneyServers.js\\\";\\n    ScriptPath[\\\"RUN_REMOTE_ON_TARGET\\\"] = \\\"/scripts/executingScripts/runRemoteOnTarget.js\\\";\\n})(ScriptPath || (ScriptPath = {}));\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9lbnVtcy9lbnVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQU4sSUFBWSxhQUtYO0FBTEQsV0FBWSxhQUFhO0lBQ3hCLDhCQUFhLENBQUE7SUFDYiwyQ0FBMEIsQ0FBQTtJQUMxQiw2Q0FBNEIsQ0FBQTtJQUM1QixxREFBb0MsQ0FBQTtBQUNyQyxDQUFDLEVBTFcsYUFBYSxLQUFiLGFBQWEsUUFLeEI7QUFFRCxNQUFNLENBQU4sSUFBWSxXQUtYO0FBTEQsV0FBWSxXQUFXO0lBQ3RCLDBEQUFlLENBQUE7SUFDZixvREFBWSxDQUFBO0lBQ1oscURBQWEsQ0FBQTtJQUNiLHdEQUFjLENBQUE7QUFDZixDQUFDLEVBTFcsV0FBVyxLQUFYLFdBQVcsUUFLdEI7QUFFRCxNQUFNLENBQU4sSUFBWSxVQVFYO0FBUkQsV0FBWSxVQUFVO0lBQ3JCLCtEQUFpRCxDQUFBO0lBQ2pELG1FQUFxRCxDQUFBO0lBQ3JELG1FQUFxRCxDQUFBO0lBQ3JELGdGQUFrRSxDQUFBO0lBQ2xFLDRFQUE4RCxDQUFBO0lBQzlELGdGQUFrRSxDQUFBO0lBQ2xFLHFGQUF1RSxDQUFBO0FBQ3hFLENBQUMsRUFSVyxVQUFVLEtBQVYsVUFBVSxRQVFyQiJ9\",\"filename\":\"/scripts/enums/enums.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":78,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const farmServers = [];\\n    let serverNumber = 0;\\n    while (ns.serverExists(OwnServerList.FARM_SERVER + '-' + serverNumber.toString())) {\\n        farmServers.push(OwnServerList.FARM_SERVER + '-' + serverNumber.toString());\\n        serverNumber++;\\n    }\\n    const scriptName = ScriptPath.EXP_FARM;\\n    for (const farmServer of farmServers) {\\n        if (farmServer) {\\n            const threadsMax = Math.floor(ns.getServerMaxRam(farmServer) / ns.getScriptRam(scriptName));\\n            ns.scp(scriptName, farmServer);\\n            if (ns.scriptRunning(scriptName, farmServer)) {\\n                ns.scriptKill(scriptName, farmServer);\\n            }\\n            ns.exec(scriptName, farmServer, threadsMax, target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRXhwRmFybVNlcnZlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9leGVjdXRpbmdTY3JpcHRzL3J1bkV4cEZhcm1TZXJ2ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFcEUsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sV0FBVyxHQUFhLEVBQUUsQ0FBQztJQUNqQyxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7SUFFckIsT0FDQyxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUN6RTtRQUNELFdBQVcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDNUUsWUFBWSxFQUFFLENBQUM7S0FDZjtJQUNELE1BQU0sVUFBVSxHQUFXLFVBQVUsQ0FBQyxRQUFRLENBQUM7SUFFL0MsS0FBSyxNQUFNLFVBQVUsSUFBSSxXQUFXLEVBQUU7UUFDckMsSUFBSSxVQUFVLEVBQUU7WUFDZixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUM1QixFQUFFLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQzVELENBQUM7WUFFRixFQUFFLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUUvQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxFQUFFO2dCQUM3QyxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQzthQUN0QztZQUNELEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDcEQ7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/runExpFarmServers.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///4683a012-716a-4333-bf71-c7c29f7c0302\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/executingScripts/runExpFarmServers.js\",\"url\":\"blob:file:///7f508d96-b7ab-43bb-8169-cd84d25cee70\",\"moduleSequenceNumber\":280}],\"dependents\":[],\"ramUsage\":5.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":280,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d12ef810-1e67-4e70-bcd2-6e6af305e737\",\"moduleSequenceNumber\":149}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":149,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const serversHackable = servers.hackableWithRootAndMoney;\\n    const scriptRam = ns.getScriptRam(ScriptPath.MONEY_FARM);\\n    const serverMaxRam = ns.getServerMaxRam(OwnServerList.HOME) - 128;\\n    const threadsPerTarget = serversHackable.length !== 0\\n        ? Math.floor(serverMaxRam / serversHackable.length / scriptRam)\\n        : 0;\\n    if (threadsPerTarget !== 0) {\\n        if (ns.scriptRunning(ScriptPath.MONEY_FARM, OwnServerList.HOME)) {\\n            ns.scriptKill(ScriptPath.MONEY_FARM, OwnServerList.HOME);\\n        }\\n        for (const target of serversHackable) {\\n            ns.exec(ScriptPath.MONEY_FARM, OwnServerList.HOME, threadsPerTarget, target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuSG9tZVNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvcnVuSG9tZVNlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUVwRSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sT0FBTyxHQUFnQixJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqRCxNQUFNLGVBQWUsR0FBYSxPQUFPLENBQUMsd0JBQXdCLENBQUM7SUFDbkUsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDekQsTUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ2xFLE1BQU0sZ0JBQWdCLEdBQ3JCLGVBQWUsQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUMzQixDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsZUFBZSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7UUFDL0QsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVOLElBQUksZ0JBQWdCLEtBQUssQ0FBQyxFQUFFO1FBQzNCLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNoRSxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3pEO1FBQ0QsS0FBSyxNQUFNLE1BQU0sSUFBSSxlQUFlLEVBQUU7WUFDckMsRUFBRSxDQUFDLElBQUksQ0FDTixVQUFVLENBQUMsVUFBVSxFQUNyQixhQUFhLENBQUMsSUFBSSxFQUNsQixnQkFBZ0IsRUFDaEIsTUFBTSxDQUNOLENBQUM7U0FDRjtLQUNEO0FBQ0YsQ0FBQyJ9\",\"filename\":\"/scripts/executingScripts/runHomeServer.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///87fad459-4322-4b45-a179-91efc74326d6\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///714f7cd8-dd70-4675-a54a-5deaad1d58c9\",\"moduleSequenceNumber\":75},{\"filename\":\"/scripts/executingScripts/runHomeServer.js\",\"url\":\"blob:file:///6b18f2b1-ef15-42ab-8f06-13aaa544a755\",\"moduleSequenceNumber\":278}],\"dependents\":[],\"ramUsage\":8.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":278,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const serversHackable = servers.hackableWithRootAndMoney;\\n    const moneyServers = [];\\n    const scriptRam = ns.getScriptRam(ScriptPath.MONEY_FARM);\\n    let serverNumber = 0;\\n    while (ns.serverExists(OwnServerList.MONEY_SERVER + '-' + serverNumber.toString())) {\\n        moneyServers.push(OwnServerList.MONEY_SERVER + '-' + serverNumber.toString());\\n        serverNumber++;\\n    }\\n    for (const moneyServer of moneyServers) {\\n        if (moneyServer) {\\n            const serverMaxRam = ns.getServerMaxRam(moneyServer);\\n            const threadsPerTarget = serversHackable.length !== 0\\n                ? Math.floor(serverMaxRam / serversHackable.length / scriptRam)\\n                : 0;\\n            ns.scp(ScriptPath.MONEY_FARM, moneyServer);\\n            if (threadsPerTarget !== 0) {\\n                if (ns.scriptRunning(ScriptPath.MONEY_FARM, moneyServer)) {\\n                    ns.scriptKill(ScriptPath.MONEY_FARM, moneyServer);\\n                }\\n                for (const target of serversHackable) {\\n                    ns.exec(ScriptPath.MONEY_FARM, moneyServer, threadsPerTarget, target);\\n                }\\n            }\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuTW9uZXlTZXJ2ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9ydW5Nb25leVNlcnZlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFcEUsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE9BQU8sR0FBZ0IsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakQsTUFBTSxlQUFlLEdBQWEsT0FBTyxDQUFDLHdCQUF3QixDQUFDO0lBQ25FLE1BQU0sWUFBWSxHQUFhLEVBQUUsQ0FBQztJQUNsQyxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN6RCxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7SUFFckIsT0FDQyxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUMxRTtRQUNELFlBQVksQ0FBQyxJQUFJLENBQ2hCLGFBQWEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FDMUQsQ0FBQztRQUNGLFlBQVksRUFBRSxDQUFDO0tBQ2Y7SUFFRCxLQUFLLE1BQU0sV0FBVyxJQUFJLFlBQVksRUFBRTtRQUN2QyxJQUFJLFdBQVcsRUFBRTtZQUNoQixNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3JELE1BQU0sZ0JBQWdCLEdBQ3JCLGVBQWUsQ0FBQyxNQUFNLEtBQUssQ0FBQztnQkFDM0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLGVBQWUsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO2dCQUMvRCxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRU4sRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQzNDLElBQUksZ0JBQWdCLEtBQUssQ0FBQyxFQUFFO2dCQUMzQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsRUFBRTtvQkFDekQsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO2lCQUNsRDtnQkFDRCxLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtvQkFDckMsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLENBQUMsQ0FBQztpQkFDdEU7YUFDRDtTQUNEO0tBQ0Q7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/runMoneyServers.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///0ddcfa2a-dc7a-45a1-939e-f464ea18630e\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///e8b2c05b-8ea2-4186-9fdd-03499f0e38ba\",\"moduleSequenceNumber\":75},{\"filename\":\"/scripts/executingScripts/runMoneyServers.js\",\"url\":\"blob:file:///d09f5c34-7576-4b28-8474-f4fa32769fa4\",\"moduleSequenceNumber\":279}],\"dependents\":[],\"ramUsage\":8.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":279,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const DATATYPE = {\\n    GB: Intl.NumberFormat('de-de', {\\n        style: 'unit',\\n        unit: 'gigabyte',\\n    }),\\n};\\nexport const MONEY = Intl.NumberFormat('en-us', {\\n    style: 'currency',\\n    currency: 'USD',\\n    maximumFractionDigits: 4,\\n    notation: 'compact',\\n});\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2Zvcm1hdHMvZm9ybWF0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUc7SUFDdkIsRUFBRSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO1FBQzlCLEtBQUssRUFBRSxNQUFNO1FBQ2IsSUFBSSxFQUFFLFVBQVU7S0FDaEIsQ0FBQztDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUU7SUFDL0MsS0FBSyxFQUFFLFVBQVU7SUFDakIsUUFBUSxFQUFFLEtBQUs7SUFDZixxQkFBcUIsRUFBRSxDQUFDO0lBQ3hCLFFBQVEsRUFBRSxTQUFTO0NBQ25CLENBQUMsQ0FBQyJ9\",\"filename\":\"/scripts/formats/formats.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":83,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const hackableServers = servers.hackableWithRootAndMoneyAndRam;\\n    const scriptName = ScriptPath.MONEY_FARM;\\n    const ramScriptNeeded = ns.getScriptRam(scriptName);\\n    for (const server of hackableServers) {\\n        const serverStats = ns.getServer(server);\\n        ns.scp(scriptName, server);\\n        if (ns.fileExists(scriptName, server)) {\\n            if (!ns.scriptRunning(scriptName, server)) {\\n                const maxNumberOfScripts = Math.floor(serverStats.maxRam / ramScriptNeeded);\\n                if (maxNumberOfScripts > 0) {\\n                    ns.exec(scriptName, server, maxNumberOfScripts, server);\\n                }\\n            }\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuUmVtb3RlT25UYXJnZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9leGVjdXRpbmdTY3JpcHRzL3J1blJlbW90ZU9uVGFyZ2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFckQsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE9BQU8sR0FBZ0IsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakQsTUFBTSxlQUFlLEdBQWEsT0FBTyxDQUFDLDhCQUE4QixDQUFDO0lBQ3pFLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQUM7SUFDekMsTUFBTSxlQUFlLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUVwRCxLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtRQUNyQyxNQUFNLFdBQVcsR0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRWpELEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRTNCLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDdEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxFQUFFO2dCQUMxQyxNQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQ3BDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsZUFBZSxDQUNwQyxDQUFDO2dCQUVGLElBQUksa0JBQWtCLEdBQUcsQ0FBQyxFQUFFO29CQUMzQixFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxDQUFDLENBQUM7aUJBQ3hEO2FBQ0Q7U0FDRDtLQUNEO0FBQ0YsQ0FBQyJ9\",\"filename\":\"/scripts/executingScripts/runRemoteOnTarget.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///8a734abc-e992-4d76-b90e-82f80f50bbde\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///8f5f72cb-1986-445d-aa97-d1f02f47886d\",\"moduleSequenceNumber\":75},{\"filename\":\"/scripts/executingScripts/runRemoteOnTarget.js\",\"url\":\"blob:file:///b2948d7d-cdaa-4ccc-b59e-df19ada8b87e\",\"moduleSequenceNumber\":281}],\"dependents\":[],\"ramUsage\":7.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":281,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const startServer = ns.getHostname();\\n    const target = ns.args[0];\\n    const path = (target, serverName, serverList, ignore, isFound) => {\\n        ignore.push(serverName);\\n        const scanResults = ns.scan(serverName);\\n        for (const server of scanResults) {\\n            if (ignore.includes(server)) {\\n                continue;\\n            }\\n            if (server === target) {\\n                serverList.push(server);\\n                return [serverList, true];\\n            }\\n            serverList.push(server);\\n            [serverList, isFound] = path(target, server, serverList, ignore, isFound);\\n            if (isFound) {\\n                return [serverList, isFound];\\n            }\\n            serverList.pop();\\n        }\\n        return [serverList, false];\\n    };\\n    if (target === undefined) {\\n        ns.alert('Please provide target server');\\n        return;\\n    }\\n    const [results, isFound] = path(target, startServer, [], [], false);\\n    if (!isFound) {\\n        ns.alert('Server not found!');\\n    }\\n    else {\\n        ns.tprintf(results.join(' --> '));\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZFJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvaW5mb3JtYXRpb25GdW5jdGlvbnMvZmluZFJvdXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxXQUFXLEdBQVcsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzdDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFFNUMsTUFBTSxJQUFJLEdBQUcsQ0FDWixNQUFjLEVBQ2QsVUFBa0IsRUFDbEIsVUFBb0IsRUFDcEIsTUFBZ0IsRUFDaEIsT0FBZ0IsRUFDTSxFQUFFO1FBQ3hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEIsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4QyxLQUFLLE1BQU0sTUFBTSxJQUFJLFdBQVcsRUFBRTtZQUNqQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7Z0JBQzVCLFNBQVM7YUFDVDtZQUNELElBQUksTUFBTSxLQUFLLE1BQU0sRUFBRTtnQkFDdEIsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDeEIsT0FBTyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUMxQjtZQUNELFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztZQUMxRSxJQUFJLE9BQU8sRUFBRTtnQkFDWixPQUFPLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO2FBQzdCO1lBQ0QsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ2pCO1FBQ0QsT0FBTyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDLENBQUM7SUFFRixJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7UUFDekIsRUFBRSxDQUFDLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1FBQ3pDLE9BQU87S0FDUDtJQUVELE1BQU0sQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUVwRSxJQUFJLENBQUMsT0FBTyxFQUFFO1FBQ2IsRUFBRSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0tBQzlCO1NBQU07UUFDTixFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztLQUNsQztBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/informationFunctions/findRoute.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/informationFunctions/findRoute.js\",\"url\":\"blob:file:///ffeedd1e-d6aa-4636-91e2-720d97c13e41\",\"moduleSequenceNumber\":1391}],\"dependents\":[],\"ramUsage\":1.85,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":85,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { DATATYPE, MONEY } from '/scripts/formats/formats.js';\\nexport async function main(ns) {\\n    ns.tprintf(`Maximum GB :${DATATYPE.GB.format(ns.getPurchasedServerMaxRam())}`);\\n    for (let i = 1; i <= 20; i++) {\\n        const ram = Math.pow(2, i);\\n        const price = ns.getPurchasedServerCost(ram);\\n        ns.tprintf(`${i} -- Server ram: ${DATATYPE.GB.format(ram)} -- Price: ${MONEY.format(price)}`);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdFNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2luZm9ybWF0aW9uRnVuY3Rpb25zL2Nvc3RTZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUU5RCxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLEVBQUUsQ0FBQyxPQUFPLENBQ1QsZUFBZSxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxFQUFFLENBQ2xFLENBQUM7SUFFRixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzdCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNCLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxFQUFFLENBQUMsT0FBTyxDQUNULEdBQUcsQ0FBQyxtQkFBbUIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsS0FBSyxDQUFDLE1BQU0sQ0FDdkUsS0FBSyxDQUNMLEVBQUUsQ0FDSCxDQUFDO0tBQ0Y7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/informationFunctions/costServer.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/formats/formats.js\",\"url\":\"blob:file:///0625d7d2-f4b6-43af-8528-cb40a3f889e3\",\"moduleSequenceNumber\":2406},{\"filename\":\"/scripts/informationFunctions/costServer.js\",\"url\":\"blob:file:///538bf92d-537c-47c1-be24-94242538313e\",\"moduleSequenceNumber\":3157}],\"dependents\":[],\"ramUsage\":1.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":86,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { DATATYPE, MONEY } from '/scripts/formats/formats.js';\\nexport async function main(ns) {\\n    const func = ns.args[0] ? ns.args[0] : 0;\\n    const servers = new ServersList(ns);\\n    const serversHackable = servers.hackable;\\n    let count = 1;\\n    switch (func) {\\n        case 0:\\n            for (const server of serversHackable) {\\n                printing(server);\\n                count++;\\n            }\\n            break;\\n        case 1:\\n            for (const server of servers.value) {\\n                printing(server);\\n                count++;\\n            }\\n    }\\n    function dash(minLength, length) {\\n        const diff = minLength - length;\\n        let dashString = '';\\n        for (let i = 0; i < diff; i++) {\\n            dashString = dashString + ' ';\\n        }\\n        dashString = dashString + '-';\\n        return dashString;\\n    }\\n    function printing(server) {\\n        const serverStats = ns.getServer(server);\\n        const rootAccess = serverStats.hasAdminRights ? 'YES' : 'NO ';\\n        const backdoor = serverStats.backdoorInstalled ? 'YES' : 'NO ';\\n        const dashNumber = dash(2, count.toString().length);\\n        const dashLvl = dash(4, serverStats.requiredHackingSkill.toString().length);\\n        const dashName = dash(20, server.length);\\n        const dashRam = dash(8, serverStats.maxRam.toString().length);\\n        ns.tprintf(`${count} ${dashNumber} Name: ${server} ${dashName} Lvl: ${serverStats.requiredHackingSkill} ${dashLvl} root: ${rootAccess} - backD: ${backdoor} - ${DATATYPE.GB.format(serverStats.maxRam)} ${dashRam} ${MONEY.format(serverStats.moneyMax)}`);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdFNlcnZlckhhY2thYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvaW5mb3JtYXRpb25GdW5jdGlvbnMvbGlzdFNlcnZlckhhY2thYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTlELE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BDLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDekMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBRWQsUUFBUSxJQUFJLEVBQUU7UUFDYixLQUFLLENBQUM7WUFDTCxLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtnQkFDckMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNqQixLQUFLLEVBQUUsQ0FBQzthQUNSO1lBQ0QsTUFBTTtRQUNQLEtBQUssQ0FBQztZQUNMLEtBQUssTUFBTSxNQUFNLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRTtnQkFDbkMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNqQixLQUFLLEVBQUUsQ0FBQzthQUNSO0tBQ0Y7SUFDRCxTQUFTLElBQUksQ0FBQyxTQUFpQixFQUFFLE1BQWM7UUFDOUMsTUFBTSxJQUFJLEdBQUcsU0FBUyxHQUFHLE1BQU0sQ0FBQztRQUNoQyxJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFDcEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5QixVQUFVLEdBQUcsVUFBVSxHQUFHLEdBQUcsQ0FBQztTQUM5QjtRQUNELFVBQVUsR0FBRyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQzlCLE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFDRCxTQUFTLFFBQVEsQ0FBQyxNQUFjO1FBQy9CLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekMsTUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDOUQsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUMvRCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1RSxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDOUQsRUFBRSxDQUFDLE9BQU8sQ0FDVCxHQUFHLEtBQUssSUFBSSxVQUFVLFVBQVUsTUFBTSxJQUFJLFFBQVEsU0FDakQsV0FBVyxDQUFDLG9CQUNiLElBQUksT0FBTyxVQUFVLFVBQVUsYUFBYSxRQUFRLE1BQU0sUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQzNFLFdBQVcsQ0FBQyxNQUFNLENBQ2xCLElBQUksT0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQ3BELENBQUM7SUFDSCxDQUFDO0FBQ0YsQ0FBQyJ9\",\"filename\":\"/scripts/informationFunctions/listServerHackable.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/formats/formats.js\",\"url\":\"blob:file:///9196e1e8-bd85-4315-a3ab-8bb4956e53fe\",\"moduleSequenceNumber\":73},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///d7ffd9e6-6e97-4816-9d2e-3cc6af51df77\",\"moduleSequenceNumber\":65},{\"filename\":\"/scripts/informationFunctions/listServerHackable.js\",\"url\":\"blob:file:///97e2333b-9eac-4511-85d4-4e65ec7b5073\",\"moduleSequenceNumber\":1644}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":87,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nimport { MONEY, DATATYPE } from '/scripts/formats/formats.js';\\nexport async function main(ns) {\\n    const ramList = {};\\n    let newServerName = '';\\n    let serverNumber = 0;\\n    const serverType = (await ns.prompt('What kind of a server you want to purchase?', {\\n        type: 'select',\\n        choices: [OwnServerList.FARM_SERVER, OwnServerList.MONEY_SERVER],\\n    }));\\n    if (serverType === OwnServerList.FARM_SERVER) {\\n        while (ns.serverExists(OwnServerList.FARM_SERVER + '-' + serverNumber.toString())) {\\n            serverNumber++;\\n        }\\n        newServerName = OwnServerList.FARM_SERVER + '-' + serverNumber.toString();\\n    }\\n    if (serverType === OwnServerList.MONEY_SERVER) {\\n        while (ns.serverExists(OwnServerList.MONEY_SERVER + '-' + serverNumber.toString())) {\\n            serverNumber++;\\n        }\\n        newServerName = OwnServerList.MONEY_SERVER + '-' + serverNumber.toString();\\n    }\\n    for (let i = 1; i <= 20; i++) {\\n        const ram = Math.pow(2, i);\\n        const cost = ns.getPurchasedServerCost(ram);\\n        ramList[DATATYPE.GB.format(ram) + ' - ' + MONEY.format(cost)] = Math.pow(2, i);\\n    }\\n    const serverRam = (await ns.prompt('How much ram do you want to choose', {\\n        type: 'select',\\n        choices: [...Object.keys(ramList)],\\n    }));\\n    const buy = (await ns.prompt(`Do you want to buy a ${newServerName} with ${DATATYPE.GB.format(ramList[serverRam])}. It will cost ${MONEY.format(ns.getPurchasedServerCost(ramList[serverRam]))}!`));\\n    if (buy) {\\n        ns.purchaseServer(newServerName, ramList[serverRam]);\\n        if (serverType === OwnServerList.MONEY_SERVER) {\\n            ns.exec(ScriptPath.RUN_MONEY_SERVERS, OwnServerList.HOME);\\n        }\\n        if (serverType === OwnServerList.FARM_SERVER) {\\n            ns.exec(ScriptPath.RUN_EXP_SERVERS, OwnServerList.HOME, 1, OwnServerList.TARGET_EXP_FARM_SERVERS);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVyY2hhc2VTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2NyaXB0cy9wdXJjaGFzZVNlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFOUQsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE9BQU8sR0FBMkIsRUFBRSxDQUFDO0lBQzNDLElBQUksYUFBYSxHQUFHLEVBQUUsQ0FBQztJQUN2QixJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7SUFFckIsTUFBTSxVQUFVLEdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQzFDLDZDQUE2QyxFQUM3QztRQUNDLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxhQUFhLENBQUMsWUFBWSxDQUFDO0tBQ2hFLENBQ0QsQ0FBVyxDQUFDO0lBRWIsSUFBSSxVQUFVLEtBQUssYUFBYSxDQUFDLFdBQVcsRUFBRTtRQUM3QyxPQUNDLEVBQUUsQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQ3pFO1lBQ0QsWUFBWSxFQUFFLENBQUM7U0FDZjtRQUNELGFBQWEsR0FBRyxhQUFhLENBQUMsV0FBVyxHQUFHLEdBQUcsR0FBRyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDMUU7SUFFRCxJQUFJLFVBQVUsS0FBSyxhQUFhLENBQUMsWUFBWSxFQUFFO1FBQzlDLE9BQ0MsRUFBRSxDQUFDLFlBQVksQ0FDZCxhQUFhLENBQUMsWUFBWSxHQUFHLEdBQUcsR0FBRyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQzFELEVBQ0E7WUFDRCxZQUFZLEVBQUUsQ0FBQztTQUNmO1FBQ0QsYUFBYSxHQUFHLGFBQWEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztLQUMzRTtJQUVELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDN0IsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDM0IsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzVDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQ3ZFLENBQUMsRUFDRCxDQUFDLENBQ0QsQ0FBQztLQUNGO0lBRUQsTUFBTSxTQUFTLEdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQ3pDLG9DQUFvQyxFQUNwQztRQUNDLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ2xDLENBQ0QsQ0FBVyxDQUFDO0lBRWIsTUFBTSxHQUFHLEdBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQ3BDLHdCQUF3QixhQUFhLFNBQVMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQy9ELE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FDbEIsa0JBQWtCLEtBQUssQ0FBQyxNQUFNLENBQzlCLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FDN0MsR0FBRyxDQUNKLENBQVksQ0FBQztJQUVkLElBQUksR0FBRyxFQUFFO1FBQ1IsRUFBRSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDckQsSUFBSSxVQUFVLEtBQUssYUFBYSxDQUFDLFlBQVksRUFBRTtZQUM5QyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUQ7UUFDRCxJQUFJLFVBQVUsS0FBSyxhQUFhLENBQUMsV0FBVyxFQUFFO1lBQzdDLEVBQUUsQ0FBQyxJQUFJLENBQ04sVUFBVSxDQUFDLGVBQWUsRUFDMUIsYUFBYSxDQUFDLElBQUksRUFDbEIsQ0FBQyxFQUNELGFBQWEsQ0FBQyx1QkFBdUIsQ0FDckMsQ0FBQztTQUNGO0tBQ0Q7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/purchaseServer.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/formats/formats.js\",\"url\":\"blob:file:///2b85ffce-81c2-4827-9fe4-8ee0e803256f\",\"moduleSequenceNumber\":77},{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///fff5e72d-f9a7-44f3-a601-c55e2a841c6a\",\"moduleSequenceNumber\":72},{\"filename\":\"/scripts/purchaseServer.js\",\"url\":\"blob:file:///56bfa793-5326-49c1-83f9-7125e138e97e\",\"moduleSequenceNumber\":459}],\"dependents\":[],\"ramUsage\":5.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":88,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const text = await ns.prompt('What kind of a server you want to purchase?', {\\n        type: 'select',\\n        choices: ['ExpFarming', 'MoneyFarming'],\\n    });\\n    ns.tprint(text);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdDEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2NyaXB0cy90ZXN0MS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyw2Q0FBNkMsRUFBRTtRQUMzRSxJQUFJLEVBQUUsUUFBUTtRQUNkLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxjQUFjLENBQUM7S0FDdkMsQ0FBQyxDQUFDO0lBQ0gsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqQixDQUFDIn0=\",\"filename\":\"/scripts/test1.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/test1.js\",\"url\":\"blob:file:///f74974cc-16ef-491c-8870-714b6795ba2b\",\"moduleSequenceNumber\":2220}],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":89,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    let startBit = true;\\n    while (true) {\\n        const serversHackable = servers.hackable;\\n        let countNewRootServers = 0;\\n        let countHasRamAndMoneyServers = 0;\\n        ns.print(`runnig`);\\n        for (const server of serversHackable) {\\n            const serverStats = ns.getServer(server);\\n            const portsNeeded = ns.getServerNumPortsRequired(server);\\n            let portsOpen = 0;\\n            if (ns.fileExists('BruteSSH.exe', OwnServerList.HOME) &&\\n                !serverStats.sshPortOpen) {\\n                ns.brutessh(server);\\n            }\\n            if (ns.fileExists('relaySMTP.exe', OwnServerList.HOME) &&\\n                !serverStats.smtpPortOpen) {\\n                ns.relaysmtp(server);\\n            }\\n            if (ns.fileExists('FTPCrack.exe', OwnServerList.HOME) &&\\n                !serverStats.ftpPortOpen) {\\n                ns.ftpcrack(server);\\n            }\\n            if (ns.fileExists('HTTPworm.exe', OwnServerList.HOME) &&\\n                !serverStats.httpPortOpen) {\\n                ns.httpworm(server);\\n            }\\n            if (ns.fileExists('SQLInject.exe', OwnServerList.HOME) &&\\n                !serverStats.sqlPortOpen) {\\n                ns.sqlinject(server);\\n            }\\n            serverStats.ftpPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.smtpPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.sshPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.httpPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.sqlPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            if (!ns.hasRootAccess(server) && portsOpen >= portsNeeded) {\\n                ns.nuke(server);\\n                countNewRootServers++;\\n                if (serverStats.maxRam > 0 && serverStats.moneyMax > 0) {\\n                    countHasRamAndMoneyServers++;\\n                }\\n            }\\n        }\\n        if (countNewRootServers > 0 || startBit) {\\n            ns.exec(ScriptPath.RUN_HOME_SERVER, OwnServerList.HOME);\\n            ns.exec(ScriptPath.RUN_MONEY_SERVERS, OwnServerList.HOME);\\n            ns.exec(ScriptPath.RUN_EXP_SERVERS, OwnServerList.HOME, 1, OwnServerList.TARGET_EXP_FARM_SERVERS);\\n            if (!ns.scriptRunning(ScriptPath.HACK_NODES, OwnServerList.HOME)) {\\n                ns.exec(ScriptPath.HACK_NODES, OwnServerList.HOME);\\n            }\\n            if (countHasRamAndMoneyServers > 0 || startBit) {\\n                ns.exec(ScriptPath.RUN_REMOTE_ON_TARGET, OwnServerList.HOME);\\n            }\\n            startBit = false;\\n        }\\n        await ns.sleep(20000);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXBFLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxPQUFPLEdBQWdCLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRWpELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQztJQUVwQixPQUFPLElBQUksRUFBRTtRQUNaLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFFekMsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7UUFDNUIsSUFBSSwwQkFBMEIsR0FBRyxDQUFDLENBQUM7UUFFbkMsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVuQixLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtZQUNyQyxNQUFNLFdBQVcsR0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2pELE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUV6RCxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7WUFFbEIsSUFDQyxFQUFFLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDO2dCQUNqRCxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQ3ZCO2dCQUNELEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDcEI7WUFFRCxJQUNDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUM7Z0JBQ2xELENBQUMsV0FBVyxDQUFDLFlBQVksRUFDeEI7Z0JBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNyQjtZQUVELElBQ0MsRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQztnQkFDakQsQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUN2QjtnQkFDRCxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3BCO1lBRUQsSUFDQyxFQUFFLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDO2dCQUNqRCxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQ3hCO2dCQUNELEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDcEI7WUFFRCxJQUNDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUM7Z0JBQ2xELENBQUMsV0FBVyxDQUFDLFdBQVcsRUFDdkI7Z0JBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNyQjtZQUVELFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsQ0FBQztZQUNoRSxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUM7WUFDakUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1lBQ2hFLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsQ0FBQztZQUNqRSxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUM7WUFFaEUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLElBQUksU0FBUyxJQUFJLFdBQVcsRUFBRTtnQkFDMUQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDaEIsbUJBQW1CLEVBQUUsQ0FBQztnQkFDdEIsSUFBSSxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxXQUFXLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRTtvQkFDdkQsMEJBQTBCLEVBQUUsQ0FBQztpQkFDN0I7YUFDRDtTQUNEO1FBQ0QsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLElBQUksUUFBUSxFQUFFO1lBQ3hDLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFELEVBQUUsQ0FBQyxJQUFJLENBQ04sVUFBVSxDQUFDLGVBQWUsRUFDMUIsYUFBYSxDQUFDLElBQUksRUFDbEIsQ0FBQyxFQUNELGFBQWEsQ0FBQyx1QkFBdUIsQ0FDckMsQ0FBQztZQUNGLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNqRSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ25EO1lBQ0QsSUFBSSwwQkFBMEIsR0FBRyxDQUFDLElBQUksUUFBUSxFQUFFO2dCQUMvQyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDN0Q7WUFDRCxRQUFRLEdBQUcsS0FBSyxDQUFDO1NBQ2pCO1FBQ0QsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3RCO0FBQ0YsQ0FBQyJ9\",\"filename\":\"main.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///3044f05d-4e66-4526-9fdc-7a89adbbd774\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///9981bd1e-025b-4aeb-bcc7-555ae84ca015\",\"moduleSequenceNumber\":75},{\"filename\":\"main.js\",\"url\":\"blob:file:///c5fc8f35-1217-4ae8-b90c-7089ed191b97\",\"moduleSequenceNumber\":147}],\"dependents\":[],\"ramUsage\":7.45,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":147,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const hackableSevers = servers.hackable;\\n    const player = ns.getPlayer();\\n    const serverEXPList = [];\\n    for (const server of hackableSevers) {\\n        const serverStats = ns.getServer(server);\\n        const serverWeakenTime = Math.round(ns.formulas.hacking.weakenTime(serverStats, player) / 1000);\\n        const serverHackinExp = ns.formulas.hacking.hackExp(serverStats, player);\\n        const expPerSecond = parseFloat((serverHackinExp / serverWeakenTime).toFixed(5));\\n        serverEXPList.push({\\n            server: server,\\n            exp: serverHackinExp,\\n            weakenTime: serverWeakenTime,\\n            expPerSecond: expPerSecond,\\n        });\\n    }\\n    serverEXPList.sort((a, b) => b.expPerSecond - a.expPerSecond);\\n    for (const entry of serverEXPList) {\\n        ns.print(entry);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QmVzdFNlcnZlclRvRmFybUV4cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2luZm9ybWF0aW9uRnVuY3Rpb25zL2dldEJlc3RTZXJ2ZXJUb0Zhcm1FeHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRTlELE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDcEMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDOUIsTUFBTSxhQUFhLEdBS2IsRUFBRSxDQUFDO0lBRVQsS0FBSyxNQUFNLE1BQU0sSUFBSSxjQUFjLEVBQUU7UUFDcEMsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQ2xDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUMxRCxDQUFDO1FBQ0YsTUFBTSxlQUFlLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6RSxNQUFNLFlBQVksR0FBRyxVQUFVLENBQzlCLENBQUMsZUFBZSxHQUFHLGdCQUFnQixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUMvQyxDQUFDO1FBRUYsYUFBYSxDQUFDLElBQUksQ0FBQztZQUNsQixNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBRSxlQUFlO1lBQ3BCLFVBQVUsRUFBRSxnQkFBZ0I7WUFDNUIsWUFBWSxFQUFFLFlBQVk7U0FDMUIsQ0FBQyxDQUFDO0tBQ0g7SUFDRCxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUQsS0FBSyxNQUFNLEtBQUssSUFBSSxhQUFhLEVBQUU7UUFDbEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQjtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/informationFunctions/getBestServerToFarmExp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":91,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"moneyServer-0\",\"moneyServer-1\",\"farmServer-0\",\"farmServer-1\",\"farmServer-2\",\"farmServer-3\",\"moneyServer-2\",\"farmServer-4\",\"farmServer-5\",\"farmServer-6\",\"farmServer-7\",\"moneyServer-3\",\"moneyServer-4\",\"moneyServer-5\",\"moneyServer-6\",\"moneyServer-7\",\"moneyServer-8\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-80563-OmniTekIncorporated.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":637281683,\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"41.1.2.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":1149415009500,\"moneyMax\":1149415009500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1085,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"69.3.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":1461410915750,\"moneyMax\":1461410915750,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1295,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"12.7.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":496213042900,\"moneyMax\":496213042900,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":921,\"serverGrowth\":60}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"20.2.9.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[251157502778,104,156,286]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":193804.86434832463,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.17199999999,\"onlineExpGained\":70434.93534025758,\"onlineMoneyMade\":251157502778,\"onlineRunningTime\":16117.41000001367,\"pid\":66,\"ramUsage\":2.4,\"server\":\"blade\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///93101e0e-777f-4f8d-a1e2-839a3a04431f\",\"moduleSequenceNumber\":1878}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///64e60025-d5b6-4e8b-aafa-623638762e3c\",\"moduleSequenceNumber\":150}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"blade\",\"moduleSequenceNumber\":150,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":32,\"minDifficulty\":32,\"moneyAvailable\":511471804950,\"moneyMax\":511471804950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":934,\"serverGrowth\":79}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-262542.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,1],[0,0,0,1,1,1,0,0],[0,0,1,0,0,0,0,0],[0,1,0,1,1,0,1,0],[0,0,1,1,1,0,0,0],[0,0,1,0,0,0,0,0],[1,1,0,1,0,0,1,0],[1,0,0,0,0,1,0,1],[0,1,0,1,0,0,1,0],[0,0,0,1,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"52.4.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"megacorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":926953890975,\"moneyMax\":926953890975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1243,\"serverGrowth\":66}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"86.1.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":17,\"minDifficulty\":17,\"moneyAvailable\":430845544975,\"moneyMax\":430845544975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1012,\"serverGrowth\":61}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"16.9.3.2\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":511.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[2188030764400,1065,2556,1917]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1823201.404575611,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.17199999999,\"onlineExpGained\":754570.7126244754,\"onlineMoneyMade\":2188030764400,\"onlineRunningTime\":16117.41000001367,\"pid\":67,\"ramUsage\":2.4,\"server\":\"omnitek\",\"threads\":213,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///8e56348e-4539-4024-bd62-24d538617d38\",\"moduleSequenceNumber\":1879}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0f4b6237-04ad-4db4-b75a-ea625cf828c2\",\"moduleSequenceNumber\":151}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omnitek\",\"moduleSequenceNumber\":151,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":32,\"minDifficulty\":32,\"moneyAvailable\":547007691100,\"moneyMax\":547007691100,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1045,\"serverGrowth\":99}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-656924-OmniTekIncorporated.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,1,1,0,1],[0,0,1,0,0,1,0,0,0,1,0],[1,0,0,0,0,1,0,1,0,0,0],[0,0,0,0,0,1,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0],[0,0,0,1,0,0,1,1,0,0,0],[0,0,0,1,1,0,1,1,1,1,0],[0,1,0,0,1,1,0,0,1,0,0],[0,1,0,0,0,0,0,1,0,1,0]],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"67.1.9.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":576471629825,\"moneyMax\":576471629825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":915,\"serverGrowth\":95}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"26.5.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"stormtech\",\"b-and-a\",\"blade\",\"nwo\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":32,\"minDifficulty\":32,\"moneyAvailable\":703761751600,\"moneyMax\":703761751600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1139,\"serverGrowth\":95}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"79.8.8.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":254.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[126703171216,636,1272,1060]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":969940.0563770245,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.173,\"onlineExpGained\":357731.67357231415,\"onlineMoneyMade\":126703171216,\"onlineRunningTime\":16117.41000001367,\"pid\":68,\"ramUsage\":2.4,\"server\":\"fulcrumtech\",\"threads\":106,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///641ee0e3-75da-488e-b030-f4aac1d3e239\",\"moduleSequenceNumber\":1880}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///08838dbd-6733-4cdc-b4ed-c407fc18156b\",\"moduleSequenceNumber\":152}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":152,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":43602062600,\"moneyMax\":43602062600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1075,\"serverGrowth\":94}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"82.5.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":935533.1535192617,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1506,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"33.3.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":25339813600,\"moneyMax\":25339813600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":891,\"serverGrowth\":87}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"64.0.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":21335419800,\"moneyMax\":21335419800,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":869,\"serverGrowth\":70}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"79.8.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\",\"microdyne\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":17565886600,\"moneyMax\":17565886600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":888,\"serverGrowth\":43}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"25.8.4.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":254.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[31916346800,742,1484,1378]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1117904.617098162,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.173,\"onlineExpGained\":430667.25750453345,\"onlineMoneyMade\":31916346800,\"onlineRunningTime\":16117.41000001367,\"pid\":69,\"ramUsage\":2.4,\"server\":\"helios\",\"threads\":106,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///849c682d-9d5d-4890-acb7-2312808726aa\",\"moduleSequenceNumber\":1874}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///82ad8059-805f-4d04-88fb-f0a62c982894\",\"moduleSequenceNumber\":153}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"helios\",\"moduleSequenceNumber\":153,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"microdyne\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":15958173400,\"moneyMax\":15958173400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":814,\"serverGrowth\":76}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"83.1.5.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[16762942794,182,390,364]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":292781.4487864537,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.173,\"onlineExpGained\":102330.00039999688,\"onlineMoneyMade\":16762942794,\"onlineRunningTime\":16117.41000001367,\"pid\":70,\"ramUsage\":2.4,\"server\":\"vitalife\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///77ce1314-512e-41b5-849e-ad3257ae3066\",\"moduleSequenceNumber\":1873}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///74c763a5-acd4-4e40-9112-4806d584e4a2\",\"moduleSequenceNumber\":154}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"vitalife\",\"moduleSequenceNumber\":154,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":19274691050,\"moneyMax\":19274691050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":776,\"serverGrowth\":61}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"83.7.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":29,\"minDifficulty\":29,\"moneyAvailable\":24007258975,\"moneyMax\":24007258975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":899,\"serverGrowth\":92}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"5.1.5.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[3687993438,60,102,78]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84195.70544476128,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.173,\"onlineExpGained\":26933.086249903103,\"onlineMoneyMade\":3687993438,\"onlineRunningTime\":16117.41000001367,\"pid\":71,\"ramUsage\":2.4,\"server\":\"univ-energy\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///38afc86e-4d0c-4f04-962c-67e16f41edbb\",\"moduleSequenceNumber\":1847}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9d85c920-5606-4517-8ae8-37879c59d266\",\"moduleSequenceNumber\":155}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":155,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":29045766425,\"moneyMax\":29045766425,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":800,\"serverGrowth\":84}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"82.7.7.7\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[54980006012,477,1060,689]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":639995.1614075652,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.173,\"onlineExpGained\":241104.20174165093,\"onlineMoneyMade\":54980006012,\"onlineRunningTime\":16117.41000001367,\"pid\":72,\"ramUsage\":2.4,\"server\":\"titan-labs\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///af31722a-a976-4414-967a-c72af8ca8bff\",\"moduleSequenceNumber\":1875}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///bd876dca-ee4c-46ad-ab8a-d4851c2078ee\",\"moduleSequenceNumber\":156}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"titan-labs\",\"moduleSequenceNumber\":156,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":19204056500,\"moneyMax\":19204056500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":816,\"serverGrowth\":65}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"18.4.8.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[7427735562,169,182,182]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":124103.45793185006,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.175,\"onlineExpGained\":47267.56636857999,\"onlineMoneyMade\":7427735562,\"onlineRunningTime\":16117.41000001367,\"pid\":73,\"ramUsage\":2.4,\"server\":\"microdyne\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///c76b66cd-7aba-4528-8d2f-3ee642b26ca1\",\"moduleSequenceNumber\":1876}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///44ef0b87-4086-4fdd-ab90-87541d27422a\",\"moduleSequenceNumber\":157}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"microdyne\",\"moduleSequenceNumber\":157,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"infocomm\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":24,\"minDifficulty\":24,\"moneyAvailable\":12874893425,\"moneyMax\":12874893425,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":865,\"serverGrowth\":74}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"78.1.9.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":25,\"minDifficulty\":25,\"moneyAvailable\":21352916850,\"moneyMax\":21352916850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":930,\"serverGrowth\":75}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-73331-OmniTekIncorporated.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[6,7],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"20.7.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":18,\"minDifficulty\":18,\"moneyAvailable\":19821620300,\"moneyMax\":19821620300,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":836,\"serverGrowth\":74}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"75.2.8.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"lexo-corp\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":26665720275,\"moneyMax\":26665720275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":919,\"serverGrowth\":60}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"25.6.0.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[11916549008,156,260,312]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":242408.82059873195,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.177,\"onlineExpGained\":86041.70862803604,\"onlineMoneyMade\":11916549008,\"onlineRunningTime\":16117.41000001367,\"pid\":74,\"ramUsage\":2.4,\"server\":\"omnia\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///7035a999-4b3f-4c18-9c57-75ac8bd68fac\",\"moduleSequenceNumber\":1877}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0d312d84-9667-4e42-887e-686398a91b2d\",\"moduleSequenceNumber\":158}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omnia\",\"moduleSequenceNumber\":158,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"aerocorp\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":23078943025,\"moneyMax\":23078943025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":924,\"serverGrowth\":61}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"24.6.5.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":25115065050,\"moneyMax\":25115065050,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":793,\"serverGrowth\":71}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"54.2.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":18816586025,\"moneyMax\":18816586025,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":809,\"serverGrowth\":75}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"49.9.1.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[24348556154,312,572,416]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":372321.7482531,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.183,\"onlineExpGained\":125944.6158769191,\"onlineMoneyMade\":24348556154,\"onlineRunningTime\":16117.41000001367,\"pid\":75,\"ramUsage\":2.4,\"server\":\"solaris\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///ac8c30a0-1dff-4e44-877f-9ff8fbdf1e95\",\"moduleSequenceNumber\":1872}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///964c8445-367d-481d-bf55-929050fd385d\",\"moduleSequenceNumber\":159}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"solaris\",\"moduleSequenceNumber\":159,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":25,\"minDifficulty\":25,\"moneyAvailable\":20181212650,\"moneyMax\":20181212650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":757,\"serverGrowth\":77}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"71.4.4.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"defcomm\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":34170643175,\"moneyMax\":34170643175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":898,\"serverGrowth\":62}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"40.1.7.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":7.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[3768759333,33,42,42]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":31633.23576333008,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18400000001,\"onlineExpGained\":11937.058372949758,\"onlineMoneyMade\":3768759333,\"onlineRunningTime\":16117.41000001367,\"pid\":76,\"ramUsage\":2.4,\"server\":\"global-pharm\",\"threads\":3,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///f2cfe2ce-cbad-451a-a534-9fb89c6a18bf\",\"moduleSequenceNumber\":1846}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d9cde7bd-f4e2-4991-a4a1-31d68d8e2606\",\"moduleSequenceNumber\":160}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":160,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":37518329525,\"moneyMax\":37518329525,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":774,\"serverGrowth\":81}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"51.3.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\",\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":30252659525,\"moneyMax\":30252659525,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":786,\"serverGrowth\":68}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-40778.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[13,[[6,12],[3,11],[0,7],[1,2],[3,5],[6,7],[9,11],[8,12],[1,5],[0,5],[4,7],[5,9],[2,8],[4,12],[9,10],[1,11],[2,9],[0,12],[2,6],[7,8],[4,5],[0,11],[0,10],[1,2],[1,7],[5,8],[6,10],[8,11],[3,7]]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"86.7.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":36682769875,\"moneyMax\":36682769875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":831,\"serverGrowth\":76}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"11.9.5.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[30642351142,286,442,364]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":339939.6228909962,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18400000001,\"onlineExpGained\":111453.82910698958,\"onlineMoneyMade\":30642351142,\"onlineRunningTime\":16117.41000001367,\"pid\":77,\"ramUsage\":2.4,\"server\":\"unitalife\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a1d29911-2cdc-4130-b506-f69a1c7d7af1\",\"moduleSequenceNumber\":1848}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///fdef6ad6-fcb3-4bdb-98a8-96ca4a8b5341\",\"moduleSequenceNumber\":161}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":161,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":26940293275,\"moneyMax\":26940293275,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":812,\"serverGrowth\":70}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"22.2.1.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[22372869194,260,598,468]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":456683.22655452986,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18400000001,\"onlineExpGained\":139438.68186373194,\"onlineMoneyMade\":22372869194,\"onlineRunningTime\":16117.41000001367,\"pid\":78,\"ramUsage\":2.4,\"server\":\"lexo-corp\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dea01e5d-7159-4e8a-86dc-fe1af2a1e8e6\",\"moduleSequenceNumber\":1845}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///22bdd531-baf1-40c2-83d9-51a0f9f4ff48\",\"moduleSequenceNumber\":162}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":162,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"syscore\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":17965579750,\"moneyMax\":17965579750,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":654,\"serverGrowth\":63}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"25.0.1.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[31189766686,780,1300,936]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":558565.8000659784,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18400000001,\"onlineExpGained\":176990.35034218585,\"onlineMoneyMade\":31189766686,\"onlineRunningTime\":16117.41000001367,\"pid\":79,\"ramUsage\":2.4,\"server\":\"rho-construction\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///cd3ce93e-cf36-4b07-b7d2-bad06011b6e8\",\"moduleSequenceNumber\":1713}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///896f2afc-a56d-48d9-9c10-8f35237d5c66\",\"moduleSequenceNumber\":163}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":163,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"syscore\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":14,\"minDifficulty\":14,\"moneyAvailable\":13299280825,\"moneyMax\":13299280825,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":492,\"serverGrowth\":41}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-299561-Chongqing.cct\",\"type\":\"Encryption I: Caesar Cipher\",\"data\":[\"LOGIC MACRO ENTER SHELL MODEM\",9],\"reward\":{\"name\":\"Chongqing\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"89.0.9.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[8487127064,273,325,377]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":208341.95542511478,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18400000001,\"onlineExpGained\":70000.46730659137,\"onlineMoneyMade\":8487127064,\"onlineRunningTime\":16117.41000001367,\"pid\":80,\"ramUsage\":2.4,\"server\":\"alpha-ent\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e1cdfec9-59ac-4098-aa27-98e0a04004c3\",\"moduleSequenceNumber\":1844}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5f7019dc-7bc1-4f6d-abe8-b4b1ca6ea06c\",\"moduleSequenceNumber\":164}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":164,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":16033736900,\"moneyMax\":16033736900,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":586,\"serverGrowth\":57}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"98.8.3.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[8620702064,182,702,676]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":578612.5640192732,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18400000001,\"onlineExpGained\":171205.96220768697,\"onlineMoneyMade\":8620702064,\"onlineRunningTime\":16117.41000001367,\"pid\":81,\"ramUsage\":2.4,\"server\":\"aevum-police\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///eb15a58d-b1cb-47fa-9d4f-158f171801a2\",\"moduleSequenceNumber\":1843}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///b2f81f4f-deba-4ffd-aa9e-03fc3a0d79bb\",\"moduleSequenceNumber\":165}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":165,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"catalyst\",\"galactic-cyber\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":6210929375,\"moneyMax\":6210929375,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":419,\"serverGrowth\":37}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"30.9.1.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[28290750432,1802,2915,2385]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1331939.2559332128,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18500000001,\"onlineExpGained\":431709.19441785093,\"onlineMoneyMade\":28290750432,\"onlineRunningTime\":16117.41000001367,\"pid\":82,\"ramUsage\":2.4,\"server\":\"rothman-uni\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///718db1e9-576a-4029-aebf-646bac7a9955\",\"moduleSequenceNumber\":1708}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4c0b62dc-db10-49fc-99a1-2110c2da0040\",\"moduleSequenceNumber\":166}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":166,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":15,\"minDifficulty\":15,\"moneyAvailable\":5745384950,\"moneyMax\":5745384950,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":398,\"serverGrowth\":43}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"93.8.6.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[4242727560,84,84,114]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":72832.8654948842,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.186,\"onlineExpGained\":26205.696329285307,\"onlineMoneyMade\":4242727560,\"onlineRunningTime\":16117.41000001367,\"pid\":83,\"ramUsage\":2.4,\"server\":\"zb-institute\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///ce8d4e6b-b1b5-4d69-a392-56570106ff13\",\"moduleSequenceNumber\":1871}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///6a3d7085-c67f-47a6-85e4-bdc637c97ca0\",\"moduleSequenceNumber\":167}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zb-institute\",\"moduleSequenceNumber\":167,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":25,\"minDifficulty\":25,\"moneyAvailable\":20381115600,\"moneyMax\":20381115600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":757,\"serverGrowth\":75}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"94.3.9.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1941011520,54,162,174]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":102545.10555721166,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.186,\"onlineExpGained\":34254.16750498633,\"onlineMoneyMade\":1941011520,\"onlineRunningTime\":16117.41000001367,\"pid\":84,\"ramUsage\":2.4,\"server\":\"summit-uni\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e2450e10-1064-451f-b586-b402bde23c83\",\"moduleSequenceNumber\":1711}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///b7a875e3-3fbf-48f1-af3a-b13fa632d321\",\"moduleSequenceNumber\":168}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":168,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"the-hub\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":7653367750,\"moneyMax\":7653367750,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":448,\"serverGrowth\":42}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"24.8.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\",\"lexo-corp\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":14807166050,\"moneyMax\":14807166050,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":585,\"serverGrowth\":63}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"72.8.2.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[6323084209,390,442,481]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":300273.89262881613,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.187,\"onlineExpGained\":96307.08079603437,\"onlineMoneyMade\":6323084209,\"onlineRunningTime\":16117.41000001367,\"pid\":85,\"ramUsage\":2.4,\"server\":\"catalyst\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e40dbf36-c704-4da5-86f1-1470666a363f\",\"moduleSequenceNumber\":1709}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///424b0379-1b7b-4d44-a79f-26cbe4ec04db\",\"moduleSequenceNumber\":169}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":169,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":11176955250,\"moneyMax\":11176955250,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":410,\"serverGrowth\":51}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"89.1.8.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[6753630429,949,1170,1131]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":496697.2429047361,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.187,\"onlineExpGained\":154300.04430943582,\"onlineMoneyMade\":6753630429,\"onlineRunningTime\":16117.41000001367,\"pid\":86,\"ramUsage\":2.4,\"server\":\"the-hub\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///51220f2a-e73c-492f-a6ae-ac00fa818c6d\",\"moduleSequenceNumber\":1707}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4107d3d2-f363-4ad4-9b18-bd5083b8d560\",\"moduleSequenceNumber\":170}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":170,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\",\"summit-uni\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":12,\"minDifficulty\":12,\"moneyAvailable\":3872539500,\"moneyMax\":3872539500,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":290,\"serverGrowth\":50}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"91.1.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":6167533025,\"moneyMax\":6167533025,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":325,\"serverGrowth\":55}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"15.9.7.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[25065946829,1272,2067,1802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1394096.307614906,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.187,\"onlineExpGained\":465589.50971588946,\"onlineMoneyMade\":25065946829,\"onlineRunningTime\":16117.41000001367,\"pid\":87,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9f6f61ba-e6d8-4fc5-b8e3-1038c28f070a\",\"moduleSequenceNumber\":1710}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///adebca58-6b73-4f0b-8e5f-f68c15338717\",\"moduleSequenceNumber\":171}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":171,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":24,\"minDifficulty\":24,\"moneyAvailable\":6875000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":415,\"serverGrowth\":75}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"37.3.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":1942736725,\"moneyMax\":1942736725,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":259,\"serverGrowth\":41}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"4.8.8.7\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[1136459,4473,4543,606]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":280163.73538680485,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.187,\"onlineExpGained\":90688.48513894466,\"onlineMoneyMade\":1136459,\"onlineRunningTime\":16117.41000001367,\"pid\":88,\"ramUsage\":2.4,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///f32b3f19-8040-4e21-a3ed-cf893a28ede9\",\"moduleSequenceNumber\":1614}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///639d80ed-db23-4cff-a536-6e9586e811e8\",\"moduleSequenceNumber\":172}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":172,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":5.331999999999995,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"4.2.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[62086020,4164,16068,15150]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2642937.6273609805,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18800000001,\"onlineExpGained\":847271.6432104931,\"onlineMoneyMade\":62086020,\"onlineRunningTime\":16117.41000001367,\"pid\":89,\"ramUsage\":2.4,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4daf99fb-42a4-47d8-9ad7-ef00a1437806\",\"moduleSequenceNumber\":1615}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9266c7f4-e9bb-47f8-ac16-9b259a8a167f\",\"moduleSequenceNumber\":173}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":173,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":19.812,\"minDifficulty\":3,\"moneyAvailable\":50000000,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"36.4.0.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[71477928,2718,11544,11130]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1927882.6759524397,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18900000001,\"onlineExpGained\":613720.5011310285,\"onlineMoneyMade\":71477928,\"onlineRunningTime\":16117.41000001367,\"pid\":90,\"ramUsage\":2.4,\"server\":\"sigma-cosmetics\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dd83c940-bf8c-48c2-82b6-1b7ecb195057\",\"moduleSequenceNumber\":1667}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9876d03e-e9c8-4305-ae74-04df902d0687\",\"moduleSequenceNumber\":174}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":174,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":0,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"7.9.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[435823272,8280,10482,8484]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2154194.2244243203,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18900000001,\"onlineExpGained\":698687.507534009,\"onlineMoneyMade\":435823272,\"onlineRunningTime\":16117.41000001367,\"pid\":91,\"ramUsage\":2.4,\"server\":\"joesguns\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9e172350-1b09-4a83-9cb2-ed94fcf327c8\",\"moduleSequenceNumber\":1668}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///31acf310-67ac-4d7b-b03e-2e0523b83ed9\",\"moduleSequenceNumber\":175}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":175,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":62500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"25.2.1.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[509507934,4511,5694,5538]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1807889.062809489,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18900000001,\"onlineExpGained\":572326.4445448532,\"onlineMoneyMade\":509507934,\"onlineRunningTime\":16117.41000001367,\"pid\":92,\"ramUsage\":2.4,\"server\":\"zer0\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7fed63c-fdec-4bc4-9782-1a91ab05a171\",\"moduleSequenceNumber\":1701}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a597b1ba-f060-4a89-80b5-0f675cc0f529\",\"moduleSequenceNumber\":176}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":176,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"n00dles\",\"neo-net\",\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":9.111999999999998,\"minDifficulty\":8,\"moneyAvailable\":0,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-590700.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[7,-1,-5,-10,4,1,2,-2,4,-5,-8,-5,-5,-4,3,-4,9,4,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"29.2.6.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[81255468,4770,6546,6438]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1794288.5470194425,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.18900000001,\"onlineExpGained\":559166.2570846865,\"onlineMoneyMade\":81255468,\"onlineRunningTime\":16117.41000001367,\"pid\":93,\"ramUsage\":2.4,\"server\":\"nectar-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///78c83cbc-72d2-4079-9585-cb7c66192c3d\",\"moduleSequenceNumber\":1669}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///753bba7e-8331-47bc-b6e1-1fb7f8cf93ec\",\"moduleSequenceNumber\":177}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":177,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"iron-gym\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":22.434000000000005,\"minDifficulty\":7,\"moneyAvailable\":68750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"36.8.0.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[313139034,5473,6773,6409]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2066791.890521404,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.198,\"onlineExpGained\":671913.3330460263,\"onlineMoneyMade\":313139034,\"onlineRunningTime\":16117.41000001367,\"pid\":94,\"ramUsage\":2.4,\"server\":\"neo-net\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9147bd14-dddf-4038-be7a-e895cb5c9db2\",\"moduleSequenceNumber\":1700}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d1d39ca3-99b6-4a16-a37d-bb51f8df8e5f\",\"moduleSequenceNumber\":178}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":178,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zer0\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25.199999999999996,\"minDifficulty\":8,\"moneyAvailable\":125000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-317714-OmniTekIncorporated.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[19,24],[8,18],[22,32],[10,20]],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"8.0.7.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[5307571906,3198,4576,3978]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1512395.4067830737,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.19900000001,\"onlineExpGained\":500575.3266320157,\"onlineMoneyMade\":5307571906,\"onlineRunningTime\":16117.41000001367,\"pid\":95,\"ramUsage\":2.4,\"server\":\"silver-helix\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4f1d45da-ad57-4eb6-9879-ebd1662ee17e\",\"moduleSequenceNumber\":1705}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a8162db2-f812-4780-812c-a2c8aa0f722a\",\"moduleSequenceNumber\":179}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":179,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zer0\",\"johnson-ortho\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":11.172,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"61.3.2.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[90213444,4344,4896,4716]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1074632.8219080002,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.19900000001,\"onlineExpGained\":351997.7440179008,\"onlineMoneyMade\":90213444,\"onlineRunningTime\":16117.41000001367,\"pid\":96,\"ramUsage\":2.4,\"server\":\"hong-fang-tea\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///51a84cd6-a7be-4baf-b61c-32fbe1311bf4\",\"moduleSequenceNumber\":1670}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///15dfeef8-c975-431c-a23e-a5cb85ff41de\",\"moduleSequenceNumber\":180}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":23.786,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"16.7.3.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[119837700,4548,5142,4908]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1131862.3162040217,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.19900000001,\"onlineExpGained\":368019.98145853693,\"onlineMoneyMade\":119837700,\"onlineRunningTime\":16117.41000001367,\"pid\":97,\"ramUsage\":2.4,\"server\":\"harakiri-sushi\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///6f19789c-8cde-40f8-bf37-e3f0dc69782c\",\"moduleSequenceNumber\":1671}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e3e3cd6c-b5a9-4d14-94d1-61ca35625755\",\"moduleSequenceNumber\":181}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":181,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15.732000000000003,\"minDifficulty\":5,\"moneyAvailable\":100000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"73.1.0.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[1490970689,3250,4563,4199]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1242445.1233658958,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.19900000001,\"onlineExpGained\":380670.6683211716,\"onlineMoneyMade\":1490970689,\"onlineRunningTime\":16117.41000001367,\"pid\":98,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///981b7a66-0ee0-45fc-9eb3-696cdc20f5a0\",\"moduleSequenceNumber\":1704}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///70ce080d-4d30-45e2-b13e-36a8755659b8\",\"moduleSequenceNumber\":182}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":182,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":8.111999999999998,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-541655-OmniTekIncorporated.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[35,24,103,115,141,120,181],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"80.2.2.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[639438059,4667,6149,5408]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1312719.8902387393,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.20000000001,\"onlineExpGained\":420092.25314059574,\"onlineMoneyMade\":639438059,\"onlineRunningTime\":16117.41000001367,\"pid\":99,\"ramUsage\":2.4,\"server\":\"max-hardware\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4d214230-8afd-4338-82c5-6c66b207c8fa\",\"moduleSequenceNumber\":1702}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///bc5496d2-0c9e-4e7e-9971-26a56deebc6d\",\"moduleSequenceNumber\":183}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":183,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"joesguns\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":19.724,\"minDifficulty\":5,\"moneyAvailable\":250000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"30.7.1.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3866045846,1495,1729,1586]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":592890.0278972315,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.20200000002,\"onlineExpGained\":198492.25851814164,\"onlineMoneyMade\":3866045846,\"onlineRunningTime\":16117.41000001367,\"pid\":100,\"ramUsage\":2.4,\"server\":\"omega-net\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///6f066ad2-e23b-40fd-9e92-2c3c326123ac\",\"moduleSequenceNumber\":1706}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///773bdf5d-09c8-4c54-97ff-23548fb7b5b2\",\"moduleSequenceNumber\":184}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":184,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"computek\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":11.154000000000003,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":1704663275,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":181,\"serverGrowth\":30}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"74.8.5.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":38,\"hackDifficulty\":13,\"minDifficulty\":13,\"moneyAvailable\":1410436700,\"moneyMax\":1410436700,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":257,\"serverGrowth\":32}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"13.6.4.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1201654636,1976,2743,2561]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":965419.6635882119,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.20200000002,\"onlineExpGained\":309579.77143988287,\"onlineMoneyMade\":1201654636,\"onlineRunningTime\":16117.41000001367,\"pid\":101,\"ramUsage\":2.4,\"server\":\"iron-gym\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dab3ebb2-a038-4f48-a7f0-c7d327b10382\",\"moduleSequenceNumber\":1703}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///58cee8d4-407a-400e-9a23-d47484e91874\",\"moduleSequenceNumber\":185}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":185,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":11.149999999999995,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"96.6.1.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3582904832,273,377,416]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205924.5176539459,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.20300000001,\"onlineExpGained\":68858.92384558568,\"onlineMoneyMade\":3582904832,\"onlineRunningTime\":16117.41000001367,\"pid\":102,\"ramUsage\":2.4,\"server\":\"millenium-fitness\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///78dbed2b-08f8-487c-a92f-ac44af5215e0\",\"moduleSequenceNumber\":1712}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5a31db58-8cac-493b-872f-2b756c5158dd\",\"moduleSequenceNumber\":186}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":186,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":16,\"minDifficulty\":16,\"moneyAvailable\":6250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":491,\"serverGrowth\":34}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"48.6.7.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[4187656728,66,96,78]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":53969.44859987967,\"offlineMoneyMade\":0,\"offlineRunningTime\":115025.20300000001,\"onlineExpGained\":18180.816178036792,\"onlineMoneyMade\":4187656728,\"onlineRunningTime\":16117.41000001367,\"pid\":103,\"ramUsage\":2.4,\"server\":\"powerhouse-fitness\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///ed5b21a6-8714-4d0e-b702-f969f949aacf\",\"moduleSequenceNumber\":1881}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///c70de406-382e-4386-8ac7-412886db0846\",\"moduleSequenceNumber\":187}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":187,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":58,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":22500000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1097,\"serverGrowth\":53}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"11.3.9.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":11250000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":787,\"serverGrowth\":41}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"56.3.1.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"fulcrumtech\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":519,\"serverGrowth\":1}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"10.2.3.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":356,\"serverGrowth\":1}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"91.6.2.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":206,\"serverGrowth\":1}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"89.8.8.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":536,\"serverGrowth\":1}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"63.0.5.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"foodnstuff\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":60,\"serverGrowth\":1}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-766161-BitRunners.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-9,-1,-1,-9,7,-2,-3,5,8,-2,9,-8,-1,9,10,-1,1,5,2,-1,9,1,-10,-10,1,3,2,0,3,0,-7,-1,0,-7,7,-4,6],\"reward\":{\"name\":\"BitRunners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-367658.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":198085336,\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"65.6.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"26.5.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-402265-NewTokyo.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[121,[1,2,3,4,7,8,9,12,14]],\"reward\":{\"name\":\"New Tokyo\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"76.0.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-0\",\"httpPortOpen\":true,\"ip\":\"90.0.7.5\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":130939.19999999985,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,3464,2598,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":49939.57754093959,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":746,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,866,1732,866]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":73774.37591275167,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":747,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,1732,866,866]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":56749.519932885894,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":748,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,866,866,866]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":63843.20992449664,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":749,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,866,866,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":42562.13994966442,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":750,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,866,866,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35468.44995805369,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":751,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,866,866,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35468.44995805369,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":752,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,866,866,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":49655.82994127516,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":753,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,866,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9931.165988255032,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":754,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,866,866,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35468.44995805369,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":755,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,866,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11349.90398657718,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":756,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,866,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8512.427989932885,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":757,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,866,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11349.90398657718,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":758,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,866,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11349.90398657718,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":759,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":760,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":761,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":762,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":763,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":764,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":765,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":766,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":767,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":768,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":769,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":770,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":771,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":772,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":773,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":774,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":775,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":776,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":777,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":778,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":779,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":780,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":781,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":782,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":783,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":784,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":785,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":786,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":787,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":788,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":789,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":790,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":791,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":792,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":793,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":794,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":795,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":796,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":797,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":798,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":799,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":800,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":801,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":802,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":803,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":804,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":805,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":806,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":807,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":808,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":866,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a9abd93f-1459-409c-8a2a-3c00535828ed\",\"moduleSequenceNumber\":188}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-0\",\"moduleSequenceNumber\":188,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-1\",\"httpPortOpen\":true,\"ip\":\"36.0.1.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":809,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":810,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":811,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":812,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":813,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":814,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":815,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":816,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":817,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":818,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":819,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":820,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":821,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":822,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":823,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":824,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":825,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":826,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":827,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":828,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":829,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":830,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":831,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":832,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":833,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":834,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":835,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":836,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":837,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":838,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":839,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":840,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":841,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":842,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":843,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":844,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":845,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":846,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":847,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":848,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":849,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":850,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":851,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":852,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":853,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":854,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":855,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":856,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":857,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":858,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":859,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":860,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":861,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":862,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":863,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":864,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":865,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":866,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":867,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":868,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":869,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":870,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":871,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1db87029-3fa2-405d-879e-e258df54eed0\",\"moduleSequenceNumber\":189}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-1\",\"moduleSequenceNumber\":189,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-0\",\"httpPortOpen\":true,\"ip\":\"89.0.4.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1313,\"ramUsage\":1.75,\"server\":\"farmServer-0\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///c146a3e9-d6e9-422c-aec2-76e62d125eb5\",\"moduleSequenceNumber\":190}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///c146a3e9-d6e9-422c-aec2-76e62d125eb5\",\"moduleSequenceNumber\":190}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-0\",\"moduleSequenceNumber\":190,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-1\",\"httpPortOpen\":true,\"ip\":\"45.1.2.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1314,\"ramUsage\":1.75,\"server\":\"farmServer-1\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///dfe0fcc0-d8ca-4346-80c9-93474aeecdbe\",\"moduleSequenceNumber\":191}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///dfe0fcc0-d8ca-4346-80c9-93474aeecdbe\",\"moduleSequenceNumber\":191}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-1\",\"moduleSequenceNumber\":191,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-2\",\"httpPortOpen\":true,\"ip\":\"84.5.6.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1315,\"ramUsage\":1.75,\"server\":\"farmServer-2\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///2a85aa2d-2be4-494e-952e-ef61a77a5d44\",\"moduleSequenceNumber\":192}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///2a85aa2d-2be4-494e-952e-ef61a77a5d44\",\"moduleSequenceNumber\":192}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-2\",\"moduleSequenceNumber\":192,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-3\",\"httpPortOpen\":true,\"ip\":\"57.8.8.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1316,\"ramUsage\":1.75,\"server\":\"farmServer-3\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///e1c1cffc-640e-42a5-978e-765b53dce96c\",\"moduleSequenceNumber\":193}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///e1c1cffc-640e-42a5-978e-765b53dce96c\",\"moduleSequenceNumber\":193}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-3\",\"moduleSequenceNumber\":193,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-2\",\"httpPortOpen\":true,\"ip\":\"41.1.0.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":872,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":873,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":874,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":875,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":876,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":877,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":878,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":879,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":880,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":881,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":882,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":883,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":884,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":885,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":886,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":887,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":888,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":889,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":890,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":891,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":892,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":893,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":894,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":895,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":896,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":897,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":898,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":899,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":900,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":901,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":902,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":903,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":904,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":905,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":906,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":907,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":908,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":909,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":910,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":911,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":912,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":913,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":914,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":915,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":916,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":917,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":918,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":919,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":920,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":921,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":922,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":923,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":924,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":925,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":926,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":927,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":928,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":929,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":930,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":931,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":932,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":933,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":934,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///17d22ea7-2d73-4a7a-a144-56af9c6471d6\",\"moduleSequenceNumber\":194}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-2\",\"moduleSequenceNumber\":194,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-4\",\"httpPortOpen\":true,\"ip\":\"55.2.7.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1317,\"ramUsage\":1.75,\"server\":\"farmServer-4\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///0b5f1a81-a2b5-4a13-807d-4745299440a8\",\"moduleSequenceNumber\":195}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///0b5f1a81-a2b5-4a13-807d-4745299440a8\",\"moduleSequenceNumber\":195}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-4\",\"moduleSequenceNumber\":195,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-5\",\"httpPortOpen\":true,\"ip\":\"58.1.2.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1318,\"ramUsage\":1.75,\"server\":\"farmServer-5\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///c4afdf24-024c-400f-9e8b-fe0f384e017a\",\"moduleSequenceNumber\":196}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///c4afdf24-024c-400f-9e8b-fe0f384e017a\",\"moduleSequenceNumber\":196}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-5\",\"moduleSequenceNumber\":196,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-6\",\"httpPortOpen\":true,\"ip\":\"1.3.2.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1319,\"ramUsage\":1.75,\"server\":\"farmServer-6\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///791105d1-ef11-40b8-b123-c4e1895a0f8b\",\"moduleSequenceNumber\":197}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///791105d1-ef11-40b8-b123-c4e1895a0f8b\",\"moduleSequenceNumber\":197}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-6\",\"moduleSequenceNumber\":197,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-7\",\"httpPortOpen\":true,\"ip\":\"91.4.8.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,1198372]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":39265032.159937836,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1320,\"ramUsage\":1.75,\"server\":\"farmServer-7\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///8f76bf6c-6781-44ac-ac5c-083b25b5bc27\",\"moduleSequenceNumber\":198}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///8f76bf6c-6781-44ac-ac5c-083b25b5bc27\",\"moduleSequenceNumber\":198}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-7\",\"moduleSequenceNumber\":198,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-3\",\"httpPortOpen\":true,\"ip\":\"57.5.1.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":935,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":936,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":937,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":938,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":939,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":940,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":941,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":942,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":943,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":944,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":945,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":946,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":947,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":948,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":949,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":950,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":951,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":952,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":953,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":954,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":955,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":956,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":957,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":958,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":959,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":960,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":961,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":962,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":963,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":964,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":965,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":966,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":967,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":968,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":969,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":970,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":971,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":972,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":973,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":974,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":975,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":976,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":977,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":978,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":979,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":980,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":981,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":982,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":983,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":984,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":985,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":986,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":987,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":988,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":989,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":990,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":991,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":992,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":993,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":994,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":995,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":996,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":997,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ca673d1-8d5e-4c21-b3cc-6c254c1f7c6c\",\"moduleSequenceNumber\":199}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-3\",\"moduleSequenceNumber\":199,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-4\",\"httpPortOpen\":true,\"ip\":\"43.1.8.0\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":998,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":999,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1000,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1001,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1002,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1003,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1004,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1005,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1006,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1007,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1008,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1009,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1010,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1011,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1012,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1013,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1014,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1015,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1016,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1017,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1018,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1019,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1020,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1021,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1022,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1023,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1024,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1025,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1026,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1027,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1028,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1029,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1030,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1031,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1032,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1033,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1034,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1035,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1036,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1037,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1038,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1039,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1040,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1041,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1042,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1043,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1044,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1045,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1046,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1047,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1048,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1049,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1050,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1051,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1052,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1053,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1054,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1055,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1056,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1057,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1058,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1059,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1060,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5124a0e5-563e-4570-ab85-3a1a427db41f\",\"moduleSequenceNumber\":200}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-4\",\"moduleSequenceNumber\":200,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-5\",\"httpPortOpen\":true,\"ip\":\"33.1.4.0\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1061,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1062,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1063,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1064,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1065,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1066,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1067,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1068,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1069,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1070,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1071,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1072,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1073,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1074,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1075,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1076,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1077,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1078,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1079,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1080,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1081,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1082,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1083,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1084,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1085,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1086,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1087,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1088,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1089,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1090,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1091,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1092,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1093,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1094,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1095,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1096,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1097,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1098,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1099,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1100,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1101,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1102,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1103,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1104,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1105,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1106,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1107,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1108,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1109,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1110,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1111,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1112,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1113,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1114,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1115,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1116,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1117,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1118,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1119,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1120,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1121,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1122,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1123,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///71c7585a-5ed2-4848-ae25-07b1ccc721ee\",\"moduleSequenceNumber\":201}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-5\",\"moduleSequenceNumber\":201,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-6\",\"httpPortOpen\":true,\"ip\":\"17.0.6.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1124,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1125,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1126,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1127,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1128,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1129,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1130,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1131,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1132,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1133,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1134,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1135,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1136,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1137,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1138,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1139,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1140,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1141,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1142,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1143,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1144,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1145,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1146,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1147,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1148,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1149,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1150,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1151,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1152,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1153,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1154,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1155,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1156,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1157,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1158,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1159,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1160,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1161,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1162,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1163,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1164,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1165,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1166,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1167,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1168,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1169,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1170,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1171,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1172,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1173,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1174,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1175,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1176,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1177,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1178,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1179,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1180,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1181,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1182,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1183,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1184,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1185,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1186,\"ramUsage\":2.4,\"server\":\"moneyServer-6\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2a98ee2b-90ac-4cfd-8e66-a7aaefef29fb\",\"moduleSequenceNumber\":202}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-6\",\"moduleSequenceNumber\":202,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-7\",\"httpPortOpen\":true,\"ip\":\"51.8.7.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1187,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1188,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1189,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1190,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1191,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1192,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1193,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1194,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1195,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1196,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1197,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1198,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1199,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1200,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1201,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1202,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1203,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1204,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1205,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1206,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1207,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1208,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1209,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1210,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1211,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1212,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1213,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1214,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1215,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1216,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1217,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1218,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1219,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1220,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1221,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1222,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1223,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1224,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1225,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1226,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1227,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1228,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1229,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1230,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1231,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1232,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1233,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1234,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1235,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1236,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1237,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1238,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1239,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1240,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1241,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1242,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1243,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1244,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1245,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1246,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1247,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1248,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1249,\"ramUsage\":2.4,\"server\":\"moneyServer-7\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0153197c-e199-4fca-8290-90e2fc8c0a4f\",\"moduleSequenceNumber\":203}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-7\",\"moduleSequenceNumber\":203,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-8\",\"httpPortOpen\":true,\"ip\":\"87.8.8.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,27740,20805,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":399920.2889681478,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1250,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,6935,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":590791.335975673,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1251,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":409009.3864446967,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1252,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":511261.73305587086,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1253,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":340841.1553705805,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1254,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1255,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1256,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":397648.01459901064,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1257,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79529.60291980213,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1258,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":284034.2961421505,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1259,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1260,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68168.2310741161,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1261,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1262,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,6935,0,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90890.97476548815,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1263,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1264,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1265,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1266,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1267,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1268,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1269,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1270,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1271,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1272,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1273,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1274,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1275,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1276,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1277,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1278,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1279,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1280,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1281,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1282,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1283,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1284,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1285,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1286,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1287,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1288,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1289,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1290,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1291,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1292,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1293,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1294,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1295,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1296,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1297,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1298,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1299,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1300,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1301,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1302,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1303,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1304,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1305,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1306,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1307,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1308,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1309,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1310,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1311,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"pid\":1312,\"ramUsage\":2.4,\"server\":\"moneyServer-8\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e725e9d6-efd4-46e3-9ce4-69d2046a38c1\",\"moduleSequenceNumber\":204}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-8\",\"moduleSequenceNumber\":204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":78114.1775961507,\"favor\":0.018,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":4.899,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.018,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Daedalus\",\"playerReputation\":2501014.517821122}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":200.2737,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":1134916.0295178457}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":174.2643,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":1036685.2342646517}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":179.5747,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":1056912.8479508634}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":6.2716,\"isBanned\":true,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Chongqing\",\"playerReputation\":148973.4759049426}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Ishima\",\"playerReputation\":43346.34148722535}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"New Tokyo\",\"playerReputation\":76199.6752295869}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":28.5119,\"isBanned\":true,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":67.2864,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":236.0359,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":1280045.535946174}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":166.7762,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":1012801.3747668992}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":138.7109,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":901941.3814477808}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{\"aliasname\":\"home1\"}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":26490.58888567816,\"lastPrice\":26548.81147355342,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.47,\"b\":false,\"otlkMag\":17.758019019378395,\"otlkMagForecast\":30.124765548175795,\"cap\":392181706,\"spreadPerc\":0.2,\"shareTxForMovement\":58052,\"shareTxUntilMovement\":58052,\"totalShares\":121200000,\"maxShares\":24200000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":8846.640462743539,\"lastPrice\":8867.325219401744,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":true,\"otlkMag\":19.52054723918786,\"otlkMagForecast\":68.93778315006915,\"cap\":308223636,\"spreadPerc\":0.3,\"shareTxForMovement\":84982,\"shareTxUntilMovement\":84982,\"totalShares\":76400000,\"maxShares\":15300000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":16657.95016534811,\"lastPrice\":16596.637635309504,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":13.892160357576635,\"otlkMagForecast\":62.95729977661801,\"cap\":37708262,\"spreadPerc\":0.1,\"shareTxForMovement\":58503,\"shareTxUntilMovement\":58503,\"totalShares\":109800000,\"maxShares\":22000000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":10896.363089524262,\"lastPrice\":10929.993141326235,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":false,\"otlkMag\":14.265939819158396,\"otlkMagForecast\":37.03857268711116,\"cap\":36655953,\"spreadPerc\":0.2,\"shareTxForMovement\":76943,\"shareTxUntilMovement\":76943,\"totalShares\":103100000,\"maxShares\":20600000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":36944.804450556854,\"lastPrice\":36839.717651811436,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":11.106827378220235,\"otlkMagForecast\":60.833494485369265,\"cap\":77683426,\"spreadPerc\":0.6,\"shareTxForMovement\":55229,\"shareTxUntilMovement\":55229,\"totalShares\":48100000,\"maxShares\":9600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":225846.49401424543,\"lastPrice\":224753.4397552482,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.04,\"b\":true,\"otlkMag\":14.637059169230977,\"otlkMagForecast\":68.04595218457106,\"cap\":1192712416,\"spreadPerc\":0.7,\"shareTxForMovement\":86815,\"shareTxUntilMovement\":86815,\"totalShares\":35600000,\"maxShares\":7100000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":15565.072017296041,\"lastPrice\":15624.757267824514,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.82,\"b\":false,\"otlkMag\":10.416020321314459,\"otlkMagForecast\":40.02290875620741,\"cap\":158822577,\"spreadPerc\":0.1,\"shareTxForMovement\":53701,\"shareTxUntilMovement\":53701,\"totalShares\":102700000,\"maxShares\":20500000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":44536.7848444328,\"lastPrice\":44286.19941438305,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.21,\"b\":true,\"otlkMag\":19.07897219083488,\"otlkMagForecast\":69.85120895702919,\"cap\":291568424,\"spreadPerc\":0.5,\"shareTxForMovement\":46531,\"shareTxUntilMovement\":46531,\"totalShares\":64100000,\"maxShares\":12800000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":27086.03265335913,\"lastPrice\":26973.770414877334,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.89,\"b\":false,\"otlkMag\":7.907512349415207,\"otlkMagForecast\":42.04627337362896,\"cap\":511535268,\"spreadPerc\":0.2,\"shareTxForMovement\":78629,\"shareTxUntilMovement\":78629,\"totalShares\":56000000,\"maxShares\":11200000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":16469.555383288574,\"lastPrice\":16519.616123390868,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":11.324113172099707,\"otlkMagForecast\":38.82738507022462,\"cap\":207071013,\"spreadPerc\":0.8,\"shareTxForMovement\":77014,\"shareTxUntilMovement\":77014,\"totalShares\":81700000,\"maxShares\":16300000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":17737.6072439417,\"lastPrice\":17789.863419013695,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":true,\"otlkMag\":8.059318106744378,\"otlkMagForecast\":59.37329733093136,\"cap\":102911929,\"spreadPerc\":0.2,\"shareTxForMovement\":96775,\"shareTxUntilMovement\":96775,\"totalShares\":77500000,\"maxShares\":15500000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":8389.768771161185,\"lastPrice\":8359.667712191795,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":7.534205942181681,\"otlkMagForecast\":42.84396918484245,\"cap\":31723545,\"spreadPerc\":0.5,\"shareTxForMovement\":95443,\"shareTxUntilMovement\":95443,\"totalShares\":103800000,\"maxShares\":20800000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":21196.18673492185,\"lastPrice\":21130.969049175597,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":true,\"otlkMag\":7.256013304036719,\"otlkMagForecast\":58.41469687003297,\"cap\":391669849,\"spreadPerc\":0.4,\"shareTxForMovement\":48180,\"shareTxUntilMovement\":48180,\"totalShares\":45700000,\"maxShares\":9100000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":36709.63495626057,\"lastPrice\":36624.00260971931,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":false,\"otlkMag\":10.483717010807048,\"otlkMagForecast\":39.849231484290215,\"cap\":308741173,\"spreadPerc\":0.5,\"shareTxForMovement\":58949,\"shareTxUntilMovement\":58949,\"totalShares\":31500000,\"maxShares\":6300000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":9253.18614444145,\"lastPrice\":9279.148529306112,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":6.0074907461468054,\"otlkMagForecast\":56.975613443132765,\"cap\":35088953,\"spreadPerc\":0.6,\"shareTxForMovement\":113808,\"shareTxUntilMovement\":113808,\"totalShares\":76700000,\"maxShares\":15300000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":13471.615999612613,\"lastPrice\":13424.533177067642,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":5.300920366160783,\"otlkMagForecast\":47.60051102253555,\"cap\":78465916,\"spreadPerc\":0.7,\"shareTxForMovement\":123464,\"shareTxUntilMovement\":123464,\"totalShares\":54200000,\"maxShares\":10800000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":18388.054778190217,\"lastPrice\":18319.520770357412,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":false,\"otlkMag\":8.186902319720812,\"otlkMagForecast\":42.841991945544024,\"cap\":249567695,\"spreadPerc\":0.5,\"shareTxForMovement\":42561,\"shareTxUntilMovement\":42561,\"totalShares\":40800000,\"maxShares\":8200000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":15558.385853226437,\"lastPrice\":15518.472914408287,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":true,\"otlkMag\":10.860112836160686,\"otlkMagForecast\":59.11277349767443,\"cap\":314074120,\"spreadPerc\":0.6,\"shareTxForMovement\":94364,\"shareTxUntilMovement\":94364,\"totalShares\":38500000,\"maxShares\":7700000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":21500.84625014396,\"lastPrice\":21430.694852686887,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":5.823708462278403,\"otlkMagForecast\":56.04728144923405,\"cap\":101080962,\"spreadPerc\":0.9,\"shareTxForMovement\":120084,\"shareTxUntilMovement\":120084,\"totalShares\":27500000,\"maxShares\":5500000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":30336.236251258637,\"lastPrice\":30703.656846372178,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.59,\"b\":false,\"otlkMag\":7.041144585010721,\"otlkMagForecast\":41.668862528761004,\"cap\":115062505,\"spreadPerc\":0.6,\"shareTxForMovement\":42730,\"shareTxUntilMovement\":42730,\"totalShares\":77800000,\"maxShares\":15600000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":3974.918023125575,\"lastPrice\":3951.4507660765316,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.27,\"b\":false,\"otlkMag\":7.17427885916595,\"otlkMagForecast\":41.378678305235816,\"cap\":79430950,\"spreadPerc\":1,\"shareTxForMovement\":68446,\"shareTxUntilMovement\":68446,\"totalShares\":54500000,\"maxShares\":10900000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":3430.0318662447803,\"lastPrice\":3438.693382982634,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":1.3976528297252775,\"otlkMagForecast\":51.04035252067619,\"cap\":42098965,\"spreadPerc\":1,\"shareTxForMovement\":84649,\"shareTxUntilMovement\":84649,\"totalShares\":36500000,\"maxShares\":7300000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":126933.87689403522,\"lastPrice\":128008.25748472178,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.81,\"b\":false,\"otlkMag\":15.615974726127815,\"otlkMagForecast\":32.50837161556672,\"cap\":153347772,\"spreadPerc\":0.7,\"shareTxForMovement\":84438,\"shareTxUntilMovement\":84438,\"totalShares\":29000000,\"maxShares\":5800000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":3623.5374661915625,\"lastPrice\":3651.1573848272346,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.63,\"b\":false,\"otlkMag\":1.5903798804304405,\"otlkMagForecast\":45.38969571098947,\"cap\":61019666,\"spreadPerc\":0.7,\"shareTxForMovement\":28073,\"shareTxUntilMovement\":28073,\"totalShares\":31200000,\"maxShares\":6200000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":7977.7187920771985,\"lastPrice\":8012.4135376170225,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.93,\"b\":false,\"otlkMag\":2.4503652006421595,\"otlkMagForecast\":47.10580745425491,\"cap\":105831091,\"spreadPerc\":1.1,\"shareTxForMovement\":101048,\"shareTxUntilMovement\":101048,\"totalShares\":38300000,\"maxShares\":7700000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":5250.86492171664,\"lastPrice\":5182.283008510489,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.83,\"b\":true,\"otlkMag\":5.965558368235967,\"otlkMagForecast\":51.79553267648156,\"cap\":13945840,\"spreadPerc\":2,\"shareTxForMovement\":39492,\"shareTxUntilMovement\":39492,\"totalShares\":43700000,\"maxShares\":8700000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":6594.200409305999,\"lastPrice\":6625.961938292797,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.03,\"b\":false,\"otlkMag\":5.728561172675596,\"otlkMagForecast\":45.84480416623761,\"cap\":89199328,\"spreadPerc\":0.7,\"shareTxForMovement\":65136,\"shareTxUntilMovement\":65136,\"totalShares\":9000000,\"maxShares\":1800000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":3447.2034350899926,\"lastPrice\":3458.971141054696,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":1.7528587136112845,\"otlkMagForecast\":48.66946999463204,\"cap\":61839720,\"spreadPerc\":0.6,\"shareTxForMovement\":156802,\"shareTxUntilMovement\":156802,\"totalShares\":10900000,\"maxShares\":2200000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1710.262474187432,\"lastPrice\":1698.2706326437028,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.51,\"b\":true,\"otlkMag\":5.737243945661407,\"otlkMagForecast\":54.112921227588416,\"cap\":33913393,\"spreadPerc\":1.1,\"shareTxForMovement\":44737,\"shareTxUntilMovement\":44737,\"totalShares\":16900000,\"maxShares\":3400000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":471.5449345280813,\"lastPrice\":476.8591867256546,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.41,\"b\":false,\"otlkMag\":12.564855810604653,\"otlkMagForecast\":38.52284473495056,\"cap\":16158550,\"spreadPerc\":1.2,\"shareTxForMovement\":25366,\"shareTxUntilMovement\":25366,\"totalShares\":35300000,\"maxShares\":7100000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":255.85186864987986,\"lastPrice\":254.1051105382864,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.47,\"b\":false,\"otlkMag\":16.137347299782526,\"otlkMagForecast\":36.83174956756457,\"cap\":18537470,\"spreadPerc\":0.6,\"shareTxForMovement\":26751,\"shareTxUntilMovement\":26751,\"totalShares\":112100000,\"maxShares\":22400000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":42441.68263414735,\"lastPrice\":42598.473846836045,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":false,\"otlkMag\":9.849556051424644,\"otlkMagForecast\":41.951095897822185,\"cap\":404999437,\"spreadPerc\":0.9,\"shareTxForMovement\":181504,\"shareTxUntilMovement\":181504,\"totalShares\":15100000,\"maxShares\":3000000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":9614.804433982745,\"lastPrice\":9645.82799025833,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":8.488859961326659,\"otlkMagForecast\":59.90386798299447,\"cap\":85669360,\"spreadPerc\":0.9,\"shareTxForMovement\":180605,\"shareTxUntilMovement\":180605,\"totalShares\":32700000,\"maxShares\":6500000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":569059,\"lastUpdate\":1673342419719,\"ticksUntilCycle\":42}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"de\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#E0E0BC\",\"primary\":\"#CCCCAE\",\"primarydark\":\"#B8B89C\",\"successlight\":\"#00F000\",\"success\":\"#00D200\",\"successdark\":\"#00B400\",\"errorlight\":\"#F00000\",\"error\":\"#C80000\",\"errordark\":\"#A00000\",\"secondarylight\":\"#B4AEAE\",\"secondary\":\"#969090\",\"secondarydark\":\"#787272\",\"warninglight\":\"#F0F000\",\"warning\":\"#C8C800\",\"warningdark\":\"#A0A000\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#1E1E1E\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#1E1E1E\",\"backgroundsecondary\":\"#252525\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":2,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":14,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\"}","VersionSave":"29","AllGangsSave":"","LastExportBonus":"1673342421258","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"storedCycles\":0}}"}}