{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"max\":148,\"current\":148},\"skills\":{\"hacking\":3584,\"strength\":778,\"defense\":1381,\"dexterity\":335,\"agility\":361,\"charisma\":112,\"intelligence\":0},\"exp\":{\"hacking\":790426747618.6099,\"strength\":150953.9431828694,\"defense\":145564.72035690022,\"dexterity\":145961.7804077406,\"agility\":146054.29925453846,\"charisma\":3657.7631265200735,\"intelligence\":0},\"mults\":{\"hacking_chance\":2.418141026254994,\"hacking_speed\":2.069898679457521,\"hacking_money\":11.648773334983387,\"hacking_grow\":2.777571604223856,\"hacking\":5.29690453896507,\"strength\":4.284779092322679,\"defense\":7.650504118466002,\"dexterity\":1.8551956258931983,\"agility\":1.9998515550411764,\"charisma\":1.676066065177367,\"hacking_exp\":8.875939653000874,\"strength_exp\":1.9274759749539718,\"defense_exp\":1.9274759749539718,\"dexterity_exp\":1.9274759749539718,\"agility_exp\":1.9274759749539718,\"charisma_exp\":1.60622997912831,\"company_rep\":2.120223572449369,\"faction_rep\":1.60622997912831,\"crime_money\":1.3967217209811391,\"crime_success\":1.5871837738422034,\"hacknet_node_money\":3.202421020887069,\"hacknet_node_purchase_cost\":0.6024822177240002,\"hacknet_node_ram_cost\":0.7875584545411767,\"hacknet_node_core_cost\":0.7875584545411767,\"hacknet_node_level_cost\":0.6694246863600003,\"work_money\":1.3967217209811391,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":24,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"NutriGen Implant\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"INFRARET Enhancement\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V3 Upgrade\"},{\"level\":1,\"name\":\"The Red Pill\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":1,\"name\":\"SoA - phyzical WKS harmonizer\"},{\"level\":1,\"name\":\"SoA - Flood of Poseidon\"},{\"level\":1,\"name\":\"OmniTek InfoLoad\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface\"},{\"level\":1,\"name\":\"Enhanced Social Interaction Implant\"},{\"level\":1,\"name\":\"Bionic Legs\"},{\"level\":1,\"name\":\"Bionic Spine\"},{\"level\":1,\"name\":\"Combat Rib III\"},{\"level\":1,\"name\":\"Augmented Targeting III\"},{\"level\":1,\"name\":\"Unstable Circadian Modulator\"},{\"level\":1,\"name\":\"BrachiBlades\"},{\"level\":1,\"name\":\"Graphene BrachiBlades Upgrade\"},{\"level\":1,\"name\":\"PCMatrix\"},{\"level\":1,\"name\":\"The Shadow's Simulacrum\"},{\"level\":1,\"name\":\"Bionic Arms\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"SmartSonar Implant\"},{\"level\":1,\"name\":\"HemoRecirculator\"},{\"level\":1,\"name\":\"LuminCloaking-V1 Skin Implant\"},{\"level\":1,\"name\":\"LuminCloaking-V2 Skin Implant\"},{\"level\":25,\"name\":\"NeuroFlux Governor\"},{\"level\":26,\"name\":\"NeuroFlux Governor\"},{\"level\":27,\"name\":\"NeuroFlux Governor\"},{\"level\":28,\"name\":\"NeuroFlux Governor\"}],\"city\":\"Ishima\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Daedalus\",\"OmniTek Incorporated\",\"Aevum\",\"Sector-12\",\"Speakers for the Dead\",\"The Syndicate\",\"Tetrads\",\"Slum Snakes\",\"Netburners\",\"Tian Di Hui\",\"Shadows of Anarchy\"],\"factionInvitations\":[],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2792959865.4469347,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2792687876.7144184,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791227522.865619,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791180272.871342,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175373.1671805,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175084.9492884,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175084.9492884,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175084.9492884,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175084.9492884,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175084.9492884,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95213.79999987865,\"ram\":64,\"totalMoneyGenerated\":2791175084.9492884,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":95093.59999987864,\"ram\":64,\"totalMoneyGenerated\":2791174507.5527787,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":29370.393411718782,\"onlineTimeSeconds\":69586.79999988055,\"ram\":64,\"totalMoneyGenerated\":2042094361.1765623,\"name\":\"hacknet-node-23\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{\"OmniTek Incorporated\":\"Software Engineering Intern\"},\"karma\":-221.5999999999998,\"numPeopleKilled\":71,\"location\":\"Omega Software\",\"money\":38271465676486.09,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-932160,\"codingcontract\":0,\"corporation\":0,\"crime\":7451510.3814344015,\"gang\":0,\"hacking\":313573307763377,\"hacknet\":66242469871.85133,\"hacknet_expenses\":-9474477474.573746,\"hospitalization\":-43100000,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":38271464676486.09,\"work\":5030080.627232709,\"servers\":-374865920000,\"other\":-5308400000,\"augmentations\":-274978405216576}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-8,\"class\":-35836920,\"codingcontract\":0,\"corporation\":0,\"crime\":7451510.3814344015,\"gang\":0,\"hacking\":811746729938976.8,\"hacknet\":471085031254.9907,\"hacknet_expenses\":-40791565752226.945,\"hospitalization\":-43900000,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":173499295352127.28,\"work\":8245320.736547541,\"servers\":-175342573766722.12,\"other\":-17180599224.392487,\"augmentations\":-422535935458955.4}},\"playtimeSinceLastAug\":95237600,\"playtimeSinceLastBitnode\":2300935200,\"purchasedServers\":[\"moneyServer-0\",\"moneyServer-1\",\"moneyServer-2\",\"farmServer-0\",\"moneyServer-3\",\"moneyServer-4\",\"moneyServer-5\"],\"scriptProdSinceLastAug\":174663962467279.66,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":[],\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1671137853951},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1671138393965},{\"ID\":\"WORKOUT\",\"unlockedOn\":1671146193966},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1671173871600},{\"ID\":\"TOR\",\"unlockedOn\":1671174291602},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1671174471602},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1671174531592},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1671233460823},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1672421371960},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1672422211962},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1672422391965},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1672423711959},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1672423891961},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1672583693989},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1672583753987},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1672584534004},{\"ID\":\"NITESEC\",\"unlockedOn\":1672584534007},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1672584833999},{\"ID\":\"TRAVEL\",\"unlockedOn\":1672584834002},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1672692811006},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1672764989930},{\"ID\":\"DONATION\",\"unlockedOn\":1672764989951},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1672951832056},{\"ID\":\"FROZE\",\"unlockedOn\":1673104787388},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1673208303290},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1673212577733},{\"ID\":\"4S\",\"unlockedOn\":1673252912192}],\"terminalCommandHistory\":[\"backdoor\",\"home\",\"run fl1ght.exe\",\"run scripts/informationFunctions/listServerHackable.js 1\",\"run scripts/purchaseServer.js\",\"nano scripts/enums/enums.js\",\"nano scripts/executingScripts/hackNodes.js\",\"run main.js\",\"connect darkweb\",\"buy -all\",\"buy -a\",\"home\",\"run scripts/informationFunctions/findRoute.js .\",\"run scripts/informationFunctions/findRoute.js the-cave\",\"run scripts/informationFunctions/listServerHackable.js\",\"run scripts/informationFunctions/findRoute.js The-Cave\",\"run scripts/informationFunctions/findRoute.js powerhouse-fitness\",\"scan-analyze 10\",\"backdoor\",\"home\",\"run scripts/executingScripts/runHomeServer.js\",\"run scripts/purchaseServer.js\",\"nano scripts/executingScripts/hackNodes.js\",\"nano scripts/enums/enums.js\",\"run scripts/purchaseServer.js\",\"run main.js\",\"connect darkweb\",\"buy -l\",\"buy -a\",\"buy -l\",\"home\",\"run scripts/purchaseServer.js\",\"run scripts/informationFunctions/listServerHackable.js 1\",\"run scripts/purchaseServer.js\",\"scan-analyze 10\",\"backdoor\",\"scan\",\"home\",\"analyze\",\"ls\",\"ls -a\",\"ls -l\",\"home\",\"run scripts/informationFunctions/listServerHackable.js 1\",\"nano scripts/executingScripts/hackNodes.js\",\"run scripts/purchaseServer.js\",\"ls\",\"cat truthgazer.msg #\",\"cat truthgazer.msg\",\"cat icarus.msg\"],\"lastUpdate\":1673437702431,\"lastSave\":1673437687440,\"totalPlaytime\":2300935200,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":2777,\"factionWorkType\":\"hacking\",\"factionName\":\"The Syndicate\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"a7ab312ea0b53\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"77.3.4.2\",\"isConnectedTo\":true,\"maxRam\":1048576,\"messages\":[\"hackers-starting-handbook.lit\",\"truthgazer.msg\",\"icarus.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"AutoLink.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"Formulas.exe\"],\"ramUsed\":1048434.3499999989,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"main.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.34999999999,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20424.41000003342,\"pid\":1,\"ramUsage\":7.45,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///3044f05d-4e66-4526-9fdc-7a89adbbd774\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///9981bd1e-025b-4aeb-bcc7-555ae84ca015\",\"moduleSequenceNumber\":75},{\"filename\":\"main.js\",\"url\":\"blob:file:///c5fc8f35-1217-4ae8-b90c-7089ed191b97\",\"moduleSequenceNumber\":147}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.356,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20422.410000033407,\"pid\":2,\"ramUsage\":6.1,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///6cceb283-a6b8-42b6-81b0-eb39878b9f0d\",\"moduleSequenceNumber\":78},{\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"url\":\"blob:file:///d1fe42aa-31cd-481a-8662-072dfddcd713\",\"moduleSequenceNumber\":148}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[155750000,2988554,3002422,291228]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":131914116.59996828,\"onlineMoneyMade\":155750000,\"onlineRunningTime\":674.0100000000164,\"pid\":487,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1753151765.5761802,499248,1636424,1594820]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":192022788.5281927,\"onlineMoneyMade\":1753151765.5761802,\"onlineRunningTime\":674.0100000000164,\"pid\":488,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[5865000000,721136,1199582,1192648]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":165250380.51224327,\"onlineMoneyMade\":5865000000,\"onlineRunningTime\":674.0100000000164,\"pid\":489,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3857752346,866750,1130242,991562]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":177136406.48484105,\"onlineMoneyMade\":3857752346,\"onlineRunningTime\":674.0100000000164,\"pid\":490,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[3487729044,707268,707268,707268]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":148309908.54353005,\"onlineMoneyMade\":3487729044,\"onlineRunningTime\":674.0100000000164,\"pid\":491,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1554418800,533918,547786,540852]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":88625902.39762779,\"onlineMoneyMade\":1554418800,\"onlineRunningTime\":674.0100000000164,\"pid\":492,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2272635722,554720,568588,561654]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":92434046.64127584,\"onlineMoneyMade\":2272635722,\"onlineRunningTime\":674.0100000000164,\"pid\":493,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[6553431581,367502,367502,360568]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":102104425.05393375,\"onlineMoneyMade\":6553431581,\"onlineRunningTime\":674.0100000000164,\"pid\":494,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[2143407865,277360,284294,277360]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64623053.83160344,\"onlineMoneyMade\":2143407865,\"onlineRunningTime\":674.0100000000164,\"pid\":495,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[5853452131,298162,305096,298162]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":53429417.72148655,\"onlineMoneyMade\":5853452131,\"onlineRunningTime\":674.0100000000164,\"pid\":496,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[10723917492,152548,152548,145614]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":48005697.13204824,\"onlineMoneyMade\":10723917492,\"onlineRunningTime\":674.0100000000164,\"pid\":497,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[20057657675,235756,235756,228822]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":55945100.888502516,\"onlineMoneyMade\":20057657675,\"onlineRunningTime\":674.0100000000164,\"pid\":498,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[19125000000,124812,117878,117878]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":37850645.81565346,\"onlineMoneyMade\":19125000000,\"onlineRunningTime\":674.0100000000164,\"pid\":499,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[23150159581,97076,97076,90142]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27252464.987270493,\"onlineMoneyMade\":23150159581,\"onlineRunningTime\":674.0100000000164,\"pid\":500,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[11299903250,69340,69340,62406]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":24095167.214354996,\"onlineMoneyMade\":11299903250,\"onlineRunningTime\":674.0100000000164,\"pid\":501,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[40843721614,69340,62406,62406]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":23781283.81003006,\"onlineMoneyMade\":40843721614,\"onlineRunningTime\":674.0100000000164,\"pid\":502,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[10808475450,41604,41604,34670]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":23541255.32436983,\"onlineMoneyMade\":10808475450,\"onlineRunningTime\":674.0100000000164,\"pid\":503,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[27763077500,34670,27736,27736]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18002136.424518105,\"onlineMoneyMade\":27763077500,\"onlineRunningTime\":674.0100000000164,\"pid\":504,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[26148062270,27736,27736,20802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16857385.18521542,\"onlineMoneyMade\":26148062270,\"onlineRunningTime\":674.0100000000164,\"pid\":505,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[22537974757,34670,34670,27736]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16026517.350237655,\"onlineMoneyMade\":22537974757,\"onlineRunningTime\":674.0100000000164,\"pid\":506,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[22265409458,20802,20802,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12998465.684985382,\"onlineMoneyMade\":22265409458,\"onlineRunningTime\":674.0100000000164,\"pid\":507,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[39010357918,27736,27736,20802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14217071.842952762,\"onlineMoneyMade\":39010357918,\"onlineRunningTime\":674.0100000000164,\"pid\":508,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[17965112161,27736,27736,20802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13404667.737641174,\"onlineMoneyMade\":17965112161,\"onlineRunningTime\":674.0100000000164,\"pid\":509,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[22107938386,27736,27736,20802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11170556.448034313,\"onlineMoneyMade\":22107938386,\"onlineRunningTime\":674.0100000000164,\"pid\":510,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[52950092772,27736,27736,20802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12592263.632329587,\"onlineMoneyMade\":52950092772,\"onlineRunningTime\":674.0100000000164,\"pid\":511,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[50568651987,20802,20802,20802]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11133628.988701966,\"onlineMoneyMade\":50568651987,\"onlineRunningTime\":674.0100000000164,\"pid\":512,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[31569115125,20802,20802,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11078237.799703449,\"onlineMoneyMade\":31569115125,\"onlineRunningTime\":674.0100000000164,\"pid\":513,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[54199566855,20802,13868,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9693458.074740518,\"onlineMoneyMade\":54199566855,\"onlineRunningTime\":674.0100000000164,\"pid\":514,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[33750000000,20802,20802,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9601139.426409656,\"onlineMoneyMade\":33750000000,\"onlineRunningTime\":674.0100000000164,\"pid\":515,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[80149259736,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8585634.294770174,\"onlineMoneyMade\":80149259736,\"onlineRunningTime\":674.0100000000164,\"pid\":516,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[33130613103,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7847085.108123277,\"onlineMoneyMade\":33130613103,\"onlineRunningTime\":674.0100000000164,\"pid\":517,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[24151586900,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8677952.943101037,\"onlineMoneyMade\":24151586900,\"onlineRunningTime\":674.0100000000164,\"pid\":518,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[49725844900,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8124041.053115863,\"onlineMoneyMade\":49725844900,\"onlineRunningTime\":674.0100000000164,\"pid\":519,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[65214593750,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8677952.943101037,\"onlineMoneyMade\":65214593750,\"onlineRunningTime\":674.0100000000164,\"pid\":520,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[47090578300,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7662447.811461553,\"onlineMoneyMade\":47090578300,\"onlineRunningTime\":674.0100000000164,\"pid\":521,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[70853605050,20802,13868,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9176473.644087693,\"onlineMoneyMade\":70853605050,\"onlineRunningTime\":674.0100000000164,\"pid\":522,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[75052706800,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8216359.701446725,\"onlineMoneyMade\":75052706800,\"onlineRunningTime\":674.0100000000164,\"pid\":523,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[35902654779,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8124041.053115863,\"onlineMoneyMade\":35902654779,\"onlineRunningTime\":674.0100000000164,\"pid\":524,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[42418557700,13868,13868,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7976331.215786485,\"onlineMoneyMade\":42418557700,\"onlineRunningTime\":674.0100000000164,\"pid\":525,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[60652646800,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7570129.16313069,\"onlineMoneyMade\":60652646800,\"onlineRunningTime\":674.0100000000164,\"pid\":526,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[36649188107,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8308678.349777587,\"onlineMoneyMade\":36649188107,\"onlineRunningTime\":674.0100000000164,\"pid\":527,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[26183610345,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7200854.569807243,\"onlineMoneyMade\":26183610345,\"onlineRunningTime\":674.0100000000164,\"pid\":528,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[37881256780,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8862590.23976276,\"onlineMoneyMade\":37881256780,\"onlineRunningTime\":674.0100000000164,\"pid\":529,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[42295617048,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7090072.191810208,\"onlineMoneyMade\":42295617048,\"onlineRunningTime\":674.0100000000164,\"pid\":530,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[14460273550,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6300747.748581338,\"onlineMoneyMade\":14460273550,\"onlineRunningTime\":674.0100000000164,\"pid\":531,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[50486611400,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8308678.349777587,\"onlineMoneyMade\":50486611400,\"onlineRunningTime\":674.0100000000164,\"pid\":532,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[49492617850,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7311636.947804278,\"onlineMoneyMade\":49492617850,\"onlineRunningTime\":674.0100000000164,\"pid\":533,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[42426738100,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8031722.404785002,\"onlineMoneyMade\":42426738100,\"onlineRunningTime\":674.0100000000164,\"pid\":534,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[344408719900,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6420761.991411457,\"onlineMoneyMade\":344408719900,\"onlineRunningTime\":674.0100000000164,\"pid\":535,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[32576329150,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7662447.811461553,\"onlineMoneyMade\":32576329150,\"onlineRunningTime\":674.0100000000164,\"pid\":536,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[343640695425,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6480769.112826518,\"onlineMoneyMade\":343640695425,\"onlineRunningTime\":674.0100000000164,\"pid\":537,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[40775965950,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7311636.947804278,\"onlineMoneyMade\":40775965950,\"onlineRunningTime\":674.0100000000164,\"pid\":538,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[40365581450,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6060719.262921096,\"onlineMoneyMade\":40365581450,\"onlineRunningTime\":674.0100000000164,\"pid\":539,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[56572310300,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7090072.191810208,\"onlineMoneyMade\":56572310300,\"onlineRunningTime\":674.0100000000164,\"pid\":540,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[563532189275,6934,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6037639.600838382,\"onlineMoneyMade\":563532189275,\"onlineRunningTime\":674.0100000000164,\"pid\":541,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[767439605000,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6425377.923828001,\"onlineMoneyMade\":767439605000,\"onlineRunningTime\":674.0100000000164,\"pid\":542,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[36965117794,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6185349.438167759,\"onlineMoneyMade\":36965117794,\"onlineRunningTime\":674.0100000000164,\"pid\":543,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[1452327564025,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4025093.0672255876,\"onlineMoneyMade\":1452327564025,\"onlineRunningTime\":674.0100000000164,\"pid\":544,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[636472049200,6934,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816074.8448443115,\"onlineMoneyMade\":636472049200,\"onlineRunningTime\":674.0100000000164,\"pid\":545,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[911411986550,13868,13868,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5723756.19651345,\"onlineMoneyMade\":911411986550,\"onlineRunningTime\":674.0100000000164,\"pid\":546,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[959657825700,13868,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5317554.143857656,\"onlineMoneyMade\":959657825700,\"onlineRunningTime\":674.0100000000164,\"pid\":547,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[1345713258125,6934,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4025093.0672255876,\"onlineMoneyMade\":1345713258125,\"onlineRunningTime\":674.0100000000164,\"pid\":548,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,6934,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2012546.5336127938,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":549,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":6934,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst files = ns.ls(\\\"home\\\", \\\".js\\\")\\n\\tfor (const file of files) {\\n\\t\\tif (file !== ns.getScriptName()) {\\n\\t\\t\\tns.tprintf(file)\\n\\t\\t\\tns.rm(file)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"deleteFiles.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"deleteFiles.js\",\"url\":\"blob:file:///63d12755-f638-477d-b056-867adc9d9d54\",\"moduleSequenceNumber\":1066}],\"dependents\":[],\"ramUsage\":2.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":64,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export class ServersList {\\n    servers;\\n    ns;\\n    constructor(ns) {\\n        this.ns = ns;\\n        this.servers = this.getAllServers();\\n    }\\n    get value() {\\n        return this.servers;\\n    }\\n    get hackable() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hackableWithRoot() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking &&\\n                serverStats.hasAdminRights) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hackableWithRootAndMoney() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking &&\\n                serverStats.hasAdminRights &&\\n                serverStats.moneyMax > 0) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hackableWithRootAndMoneyAndRam() {\\n        const serverList = [];\\n        const player = this.ns.getPlayer();\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.requiredHackingSkill <= player.skills.hacking &&\\n                serverStats.hasAdminRights &&\\n                serverStats.moneyMax > 0 &&\\n                serverStats.maxRam > 0) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get documentsLit() {\\n        const serverDocuments = { '': [] };\\n        for (const server of this.servers) {\\n            const files = this.ns.ls(server, 'lit');\\n            if (files.length && server !== 'home') {\\n                serverDocuments[server] = files;\\n            }\\n        }\\n        return serverDocuments;\\n    }\\n    get documentsCct() {\\n        const serverDocuments = { '': [] };\\n        for (const server of this.servers) {\\n            const files = this.ns.ls(server, 'cct');\\n            if (files.length && server !== 'home') {\\n                serverDocuments[server] = files;\\n            }\\n        }\\n        return serverDocuments;\\n    }\\n    get allFiles() {\\n        const serverDocuments = { '': [] };\\n        for (const server of this.servers) {\\n            const files = this.ns.ls(server);\\n            if (files.length && server !== 'home') {\\n                serverDocuments[server] = files;\\n            }\\n        }\\n        return serverDocuments;\\n    }\\n    get hasNoBackdoor() {\\n        const serverList = [];\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (!serverStats.backdoorInstalled) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    get hasBackdoor() {\\n        const serverList = [];\\n        for (const server of this.servers) {\\n            const serverStats = this.ns.getServer(server);\\n            if (serverStats.backdoorInstalled) {\\n                serverList.push(server);\\n            }\\n        }\\n        return serverList;\\n    }\\n    getAllServers(rootHost = 'home') {\\n        this.ns.disableLog('ALL');\\n        let pendingScan = [rootHost];\\n        const list = new Set(pendingScan);\\n        while (pendingScan.length) {\\n            const hostname = pendingScan.shift();\\n            list.add(hostname);\\n            pendingScan.push(...this.ns.scan(hostname));\\n            pendingScan = pendingScan.filter((host) => !list.has(host));\\n        }\\n        const finalList = [...list].sort((a, b) => this.ns.getServerRequiredHackingLevel(a) -\\n            this.ns.getServerRequiredHackingLevel(b));\\n        return [...finalList];\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyc2xpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9jbGFzc2VzL3NlcnZlcnNsaXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxXQUFXO0lBQ2YsT0FBTyxDQUFXO0lBQ2xCLEVBQUUsQ0FBQztJQUVYLFlBQW1CLEVBQU07UUFDeEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsSUFBVyxLQUFLO1FBQ2YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDbEIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDM0MsS0FBSyxNQUFNLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2xDLE1BQU0sV0FBVyxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3RELElBQUksV0FBVyxDQUFDLG9CQUFvQixJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFO2dCQUM5RCxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxnQkFBZ0I7UUFDMUIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7UUFFM0MsS0FBSyxNQUFNLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2xDLE1BQU0sV0FBVyxHQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRXRELElBQ0MsV0FBVyxDQUFDLG9CQUFvQixJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTztnQkFDekQsV0FBVyxDQUFDLGNBQWMsRUFDekI7Z0JBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUN4QjtTQUNEO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQVcsd0JBQXdCO1FBQ2xDLE1BQU0sVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUNoQyxNQUFNLE1BQU0sR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQzNDLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxNQUFNLFdBQVcsR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUNDLFdBQVcsQ0FBQyxvQkFBb0IsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU87Z0JBQ3pELFdBQVcsQ0FBQyxjQUFjO2dCQUMxQixXQUFXLENBQUMsUUFBUSxHQUFHLENBQUMsRUFDdkI7Z0JBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUN4QjtTQUNEO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQVcsOEJBQThCO1FBQ3hDLE1BQU0sVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUNoQyxNQUFNLE1BQU0sR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRTNDLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxNQUFNLFdBQVcsR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUNDLFdBQVcsQ0FBQyxvQkFBb0IsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU87Z0JBQ3pELFdBQVcsQ0FBQyxjQUFjO2dCQUMxQixXQUFXLENBQUMsUUFBUSxHQUFHLENBQUM7Z0JBQ3hCLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUNyQjtnQkFDRCxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3RCLE1BQU0sZUFBZSxHQUE2QixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUU3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQWEsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRWxELElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUN0QyxlQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ2hDO1NBQ0Q7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3RCLE1BQU0sZUFBZSxHQUE2QixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUU3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRXhDLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUN0QyxlQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ2hDO1NBQ0Q7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2xCLE1BQU0sZUFBZSxHQUE2QixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUU3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFakMsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLE1BQU0sS0FBSyxNQUFNLEVBQUU7Z0JBQ3RDLGVBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7YUFDaEM7U0FDRDtRQUNELE9BQU8sZUFBZSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxJQUFXLGFBQWE7UUFDdkIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxNQUFNLFdBQVcsR0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixFQUFFO2dCQUNuQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxXQUFXO1FBQ3JCLE1BQU0sVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUNoQyxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbEMsTUFBTSxXQUFXLEdBQVcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdEQsSUFBSSxXQUFXLENBQUMsaUJBQWlCLEVBQUU7Z0JBQ2xDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDeEI7U0FDRDtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFFTyxhQUFhLENBQUMsUUFBUSxHQUFHLE1BQU07UUFDdEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUIsSUFBSSxXQUFXLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QixNQUFNLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNsQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUU7WUFDMUIsTUFBTSxRQUFRLEdBQVcsV0FBVyxDQUFDLEtBQUssRUFBRyxDQUFDO1lBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFbkIsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDNUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzVEO1FBQ0QsTUFBTSxTQUFTLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLElBQUksQ0FDL0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDUixJQUFJLENBQUMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQyxDQUN6QyxDQUFDO1FBQ0YsT0FBTyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDdkIsQ0FBQztDQUNEIn0=\",\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":65,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":66,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { HacknetNode } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    while (true) {\\n        let whileCounter = 0;\\n        let numberNodes = ns.hacknet.numNodes();\\n        const moneyAvailable = ns.getPlayer().money;\\n        while (numberNodes < HacknetNode.MAX_NUMBER &&\\n            whileCounter < HacknetNode.MAX_NUMBER) {\\n            const nodeCost = ns.hacknet.getPurchaseNodeCost();\\n            if (numberNodes < HacknetNode.MAX_NUMBER) {\\n                if (nodeCost < moneyAvailable) {\\n                    ns.hacknet.purchaseNode();\\n                }\\n            }\\n            numberNodes = ns.hacknet.numNodes();\\n            whileCounter++;\\n        }\\n        for (let node = 0; node < numberNodes; node++) {\\n            const nodeStats = ns.hacknet.getNodeStats(node);\\n            for (let lvl = 0; lvl < HacknetNode.MAX_LVL - nodeStats.level; lvl++) {\\n                const lvlCost = ns.hacknet.getLevelUpgradeCost(node, 1);\\n                if (lvlCost < moneyAvailable) {\\n                    ns.hacknet.upgradeLevel(node, 1);\\n                }\\n                else {\\n                    break;\\n                }\\n            }\\n            for (let ram = 0; ram < HacknetNode.MAX_RAM - nodeStats.ram; ram++) {\\n                const ramCost = ns.hacknet.getRamUpgradeCost(node, 1);\\n                if (ramCost < moneyAvailable) {\\n                    ns.hacknet.upgradeRam(node, 1);\\n                }\\n                else {\\n                    break;\\n                }\\n            }\\n            for (let cores = 0; cores < HacknetNode.MAX_CORES - nodeStats.cores; cores++) {\\n                const coresCost = ns.hacknet.getCoreUpgradeCost(node, 1);\\n                if (coresCost < moneyAvailable) {\\n                    ns.hacknet.upgradeCore(node, 1);\\n                }\\n                else {\\n                    break;\\n                }\\n            }\\n        }\\n        await ns.sleep(60000);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFja05vZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9oYWNrTm9kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXRELE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsT0FBTyxJQUFJLEVBQUU7UUFDWixJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7UUFFckIsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN4QyxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDO1FBRTVDLE9BQ0MsV0FBVyxHQUFHLFdBQVcsQ0FBQyxVQUFVO1lBQ3BDLFlBQVksR0FBRyxXQUFXLENBQUMsVUFBVSxFQUNwQztZQUNELE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztZQUNsRCxJQUFJLFdBQVcsR0FBRyxXQUFXLENBQUMsVUFBVSxFQUFFO2dCQUN6QyxJQUFJLFFBQVEsR0FBRyxjQUFjLEVBQUU7b0JBQzlCLEVBQUUsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7aUJBQzFCO2FBQ0Q7WUFDRCxXQUFXLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUVwQyxZQUFZLEVBQUUsQ0FBQztTQUNmO1FBQ0QsS0FBSyxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLFdBQVcsRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUM5QyxNQUFNLFNBQVMsR0FBYyxFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUUzRCxLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsV0FBVyxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFO2dCQUNyRSxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDeEQsSUFBSSxPQUFPLEdBQUcsY0FBYyxFQUFFO29CQUM3QixFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ2pDO3FCQUFNO29CQUNOLE1BQU07aUJBQ047YUFDRDtZQUVELEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxXQUFXLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7Z0JBQ25FLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN0RCxJQUFJLE9BQU8sR0FBRyxjQUFjLEVBQUU7b0JBQzdCLEVBQUUsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztpQkFDL0I7cUJBQU07b0JBQ04sTUFBTTtpQkFDTjthQUNEO1lBQ0QsS0FDQyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQ2IsS0FBSyxHQUFHLFdBQVcsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssRUFDL0MsS0FBSyxFQUFFLEVBQ047Z0JBQ0QsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pELElBQUksU0FBUyxHQUFHLGNBQWMsRUFBRTtvQkFDL0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUNoQztxQkFBTTtvQkFDTixNQUFNO2lCQUNOO2FBQ0Q7U0FDRDtRQUNELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN0QjtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///88efa43b-deb0-43b4-95a3-e18d99250e15\",\"moduleSequenceNumber\":68},{\"filename\":\"/scripts/executingScripts/hackNodes.js\",\"url\":\"blob:file:///b3080f73-5424-4916-a84e-ff3c82217851\",\"moduleSequenceNumber\":128}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":128,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export var OwnServerList;\\n(function (OwnServerList) {\\n    OwnServerList[\\\"HOME\\\"] = \\\"home\\\";\\n    OwnServerList[\\\"FARM_SERVER\\\"] = \\\"farmServer\\\";\\n    OwnServerList[\\\"MONEY_SERVER\\\"] = \\\"moneyServer\\\";\\n    OwnServerList[\\\"TARGET_EXP_FARM_SERVERS\\\"] = \\\"joesguns\\\";\\n})(OwnServerList || (OwnServerList = {}));\\nexport var HacknetNode;\\n(function (HacknetNode) {\\n    HacknetNode[HacknetNode[\\\"MAX_NUMBER\\\"] = 16] = \\\"MAX_NUMBER\\\";\\n    HacknetNode[HacknetNode[\\\"MAX_RAM\\\"] = 64] = \\\"MAX_RAM\\\";\\n    HacknetNode[HacknetNode[\\\"MAX_LVL\\\"] = 200] = \\\"MAX_LVL\\\";\\n    HacknetNode[HacknetNode[\\\"MAX_CORES\\\"] = 16] = \\\"MAX_CORES\\\";\\n})(HacknetNode || (HacknetNode = {}));\\nexport var ScriptPath;\\n(function (ScriptPath) {\\n    ScriptPath[\\\"EXP_FARM\\\"] = \\\"/scripts/executingScripts/expFarm.js\\\";\\n    ScriptPath[\\\"HACK_NODES\\\"] = \\\"/scripts/executingScripts/hackNodes.js\\\";\\n    ScriptPath[\\\"MONEY_FARM\\\"] = \\\"/scripts/executingScripts/moneyFarm.js\\\";\\n    ScriptPath[\\\"RUN_EXP_SERVERS\\\"] = \\\"/scripts/executingScripts/runExpFarmServers.js\\\";\\n    ScriptPath[\\\"RUN_HOME_SERVER\\\"] = \\\"/scripts/executingScripts/runHomeServer.js\\\";\\n    ScriptPath[\\\"RUN_MONEY_SERVERS\\\"] = \\\"/scripts/executingScripts/runMoneyServers.js\\\";\\n    ScriptPath[\\\"RUN_REMOTE_ON_TARGET\\\"] = \\\"/scripts/executingScripts/runRemoteOnTarget.js\\\";\\n})(ScriptPath || (ScriptPath = {}));\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9lbnVtcy9lbnVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQU4sSUFBWSxhQUtYO0FBTEQsV0FBWSxhQUFhO0lBQ3hCLDhCQUFhLENBQUE7SUFDYiwyQ0FBMEIsQ0FBQTtJQUMxQiw2Q0FBNEIsQ0FBQTtJQUM1QixxREFBb0MsQ0FBQTtBQUNyQyxDQUFDLEVBTFcsYUFBYSxLQUFiLGFBQWEsUUFLeEI7QUFFRCxNQUFNLENBQU4sSUFBWSxXQUtYO0FBTEQsV0FBWSxXQUFXO0lBQ3RCLDBEQUFlLENBQUE7SUFDZixvREFBWSxDQUFBO0lBQ1oscURBQWEsQ0FBQTtJQUNiLHdEQUFjLENBQUE7QUFDZixDQUFDLEVBTFcsV0FBVyxLQUFYLFdBQVcsUUFLdEI7QUFFRCxNQUFNLENBQU4sSUFBWSxVQVFYO0FBUkQsV0FBWSxVQUFVO0lBQ3JCLCtEQUFpRCxDQUFBO0lBQ2pELG1FQUFxRCxDQUFBO0lBQ3JELG1FQUFxRCxDQUFBO0lBQ3JELGdGQUFrRSxDQUFBO0lBQ2xFLDRFQUE4RCxDQUFBO0lBQzlELGdGQUFrRSxDQUFBO0lBQ2xFLHFGQUF1RSxDQUFBO0FBQ3hFLENBQUMsRUFSVyxVQUFVLEtBQVYsVUFBVSxRQVFyQiJ9\",\"filename\":\"/scripts/enums/enums.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":68,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const farmServers = [];\\n    let serverNumber = 0;\\n    while (ns.serverExists(OwnServerList.FARM_SERVER + '-' + serverNumber.toString())) {\\n        farmServers.push(OwnServerList.FARM_SERVER + '-' + serverNumber.toString());\\n        serverNumber++;\\n    }\\n    const scriptName = ScriptPath.EXP_FARM;\\n    for (const farmServer of farmServers) {\\n        if (farmServer) {\\n            const threadsMax = Math.floor(ns.getServerMaxRam(farmServer) / ns.getScriptRam(scriptName));\\n            ns.scp(scriptName, farmServer);\\n            if (ns.scriptRunning(scriptName, farmServer)) {\\n                ns.scriptKill(scriptName, farmServer);\\n            }\\n            ns.exec(scriptName, farmServer, threadsMax, target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRXhwRmFybVNlcnZlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9leGVjdXRpbmdTY3JpcHRzL3J1bkV4cEZhcm1TZXJ2ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFcEUsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sV0FBVyxHQUFhLEVBQUUsQ0FBQztJQUNqQyxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7SUFFckIsT0FDQyxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUN6RTtRQUNELFdBQVcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDNUUsWUFBWSxFQUFFLENBQUM7S0FDZjtJQUNELE1BQU0sVUFBVSxHQUFXLFVBQVUsQ0FBQyxRQUFRLENBQUM7SUFFL0MsS0FBSyxNQUFNLFVBQVUsSUFBSSxXQUFXLEVBQUU7UUFDckMsSUFBSSxVQUFVLEVBQUU7WUFDZixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUM1QixFQUFFLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQzVELENBQUM7WUFFRixFQUFFLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUUvQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxFQUFFO2dCQUM3QyxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQzthQUN0QztZQUNELEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDcEQ7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/runExpFarmServers.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///55cc6780-db0c-42f5-852f-b9f05754c69f\",\"moduleSequenceNumber\":68},{\"filename\":\"/scripts/executingScripts/runExpFarmServers.js\",\"url\":\"blob:file:///1b609802-943f-4990-ae81-ddd07a2c4c7a\",\"moduleSequenceNumber\":240}],\"dependents\":[],\"ramUsage\":5.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":240,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7ec04ec-6d3b-4938-9b4d-f4467bc9ecd1\",\"moduleSequenceNumber\":129}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":129,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const serversHackable = servers.hackableWithRootAndMoney;\\n    const scriptRam = ns.getScriptRam(ScriptPath.MONEY_FARM);\\n    const serverMaxRam = ns.getServerMaxRam(OwnServerList.HOME) - 128;\\n    const threadsPerTarget = serversHackable.length !== 0\\n        ? Math.floor(serverMaxRam / serversHackable.length / scriptRam)\\n        : 0;\\n    if (threadsPerTarget !== 0) {\\n        if (ns.scriptRunning(ScriptPath.MONEY_FARM, OwnServerList.HOME)) {\\n            ns.scriptKill(ScriptPath.MONEY_FARM, OwnServerList.HOME);\\n        }\\n        for (const target of serversHackable) {\\n            ns.exec(ScriptPath.MONEY_FARM, OwnServerList.HOME, threadsPerTarget, target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuSG9tZVNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvcnVuSG9tZVNlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUVwRSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sT0FBTyxHQUFnQixJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqRCxNQUFNLGVBQWUsR0FBYSxPQUFPLENBQUMsd0JBQXdCLENBQUM7SUFDbkUsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDekQsTUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ2xFLE1BQU0sZ0JBQWdCLEdBQ3JCLGVBQWUsQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUMzQixDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsZUFBZSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7UUFDL0QsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVOLElBQUksZ0JBQWdCLEtBQUssQ0FBQyxFQUFFO1FBQzNCLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNoRSxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3pEO1FBQ0QsS0FBSyxNQUFNLE1BQU0sSUFBSSxlQUFlLEVBQUU7WUFDckMsRUFBRSxDQUFDLElBQUksQ0FDTixVQUFVLENBQUMsVUFBVSxFQUNyQixhQUFhLENBQUMsSUFBSSxFQUNsQixnQkFBZ0IsRUFDaEIsTUFBTSxDQUNOLENBQUM7U0FDRjtLQUNEO0FBQ0YsQ0FBQyJ9\",\"filename\":\"/scripts/executingScripts/runHomeServer.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///2edc8035-0941-4d2b-bc50-827fc474e6f3\",\"moduleSequenceNumber\":68},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///2924fdfc-8df3-4957-bd00-685df5040a0d\",\"moduleSequenceNumber\":65},{\"filename\":\"/scripts/executingScripts/runHomeServer.js\",\"url\":\"blob:file:///fdd2d22b-2912-458c-a717-58dcd3c06f88\",\"moduleSequenceNumber\":238}],\"dependents\":[],\"ramUsage\":8.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":238,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const serversHackable = servers.hackableWithRootAndMoney;\\n    const moneyServers = [];\\n    const scriptRam = ns.getScriptRam(ScriptPath.MONEY_FARM);\\n    let serverNumber = 0;\\n    while (ns.serverExists(OwnServerList.MONEY_SERVER + '-' + serverNumber.toString())) {\\n        moneyServers.push(OwnServerList.MONEY_SERVER + '-' + serverNumber.toString());\\n        serverNumber++;\\n    }\\n    for (const moneyServer of moneyServers) {\\n        if (moneyServer) {\\n            const serverMaxRam = ns.getServerMaxRam(moneyServer);\\n            const threadsPerTarget = serversHackable.length !== 0\\n                ? Math.floor(serverMaxRam / serversHackable.length / scriptRam)\\n                : 0;\\n            ns.scp(ScriptPath.MONEY_FARM, moneyServer);\\n            if (threadsPerTarget !== 0) {\\n                if (ns.scriptRunning(ScriptPath.MONEY_FARM, moneyServer)) {\\n                    ns.scriptKill(ScriptPath.MONEY_FARM, moneyServer);\\n                }\\n                for (const target of serversHackable) {\\n                    ns.exec(ScriptPath.MONEY_FARM, moneyServer, threadsPerTarget, target);\\n                }\\n            }\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuTW9uZXlTZXJ2ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9ydW5Nb25leVNlcnZlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFcEUsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE9BQU8sR0FBZ0IsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakQsTUFBTSxlQUFlLEdBQWEsT0FBTyxDQUFDLHdCQUF3QixDQUFDO0lBQ25FLE1BQU0sWUFBWSxHQUFhLEVBQUUsQ0FBQztJQUNsQyxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN6RCxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7SUFFckIsT0FDQyxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUMxRTtRQUNELFlBQVksQ0FBQyxJQUFJLENBQ2hCLGFBQWEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FDMUQsQ0FBQztRQUNGLFlBQVksRUFBRSxDQUFDO0tBQ2Y7SUFFRCxLQUFLLE1BQU0sV0FBVyxJQUFJLFlBQVksRUFBRTtRQUN2QyxJQUFJLFdBQVcsRUFBRTtZQUNoQixNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3JELE1BQU0sZ0JBQWdCLEdBQ3JCLGVBQWUsQ0FBQyxNQUFNLEtBQUssQ0FBQztnQkFDM0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLGVBQWUsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO2dCQUMvRCxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRU4sRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQzNDLElBQUksZ0JBQWdCLEtBQUssQ0FBQyxFQUFFO2dCQUMzQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsRUFBRTtvQkFDekQsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO2lCQUNsRDtnQkFDRCxLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtvQkFDckMsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLENBQUMsQ0FBQztpQkFDdEU7YUFDRDtTQUNEO0tBQ0Q7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/runMoneyServers.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///8ca477ed-2424-4544-97ab-a956a0b6a819\",\"moduleSequenceNumber\":68},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///dcdc4358-cb71-4960-bd07-13119b1448c9\",\"moduleSequenceNumber\":65},{\"filename\":\"/scripts/executingScripts/runMoneyServers.js\",\"url\":\"blob:file:///7faa9afd-fe5a-4e43-9996-a0a09839e0ef\",\"moduleSequenceNumber\":239}],\"dependents\":[],\"ramUsage\":8.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":239,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const DATATYPE = {\\n    GB: Intl.NumberFormat('de-de', {\\n        style: 'unit',\\n        unit: 'gigabyte',\\n    }),\\n};\\nexport const MONEY = Intl.NumberFormat('en-us', {\\n    style: 'currency',\\n    currency: 'USD',\\n    maximumFractionDigits: 4,\\n    notation: 'compact',\\n});\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2Zvcm1hdHMvZm9ybWF0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUc7SUFDdkIsRUFBRSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO1FBQzlCLEtBQUssRUFBRSxNQUFNO1FBQ2IsSUFBSSxFQUFFLFVBQVU7S0FDaEIsQ0FBQztDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUU7SUFDL0MsS0FBSyxFQUFFLFVBQVU7SUFDakIsUUFBUSxFQUFFLEtBQUs7SUFDZixxQkFBcUIsRUFBRSxDQUFDO0lBQ3hCLFFBQVEsRUFBRSxTQUFTO0NBQ25CLENBQUMsQ0FBQyJ9\",\"filename\":\"/scripts/formats/formats.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":73,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const hackableServers = servers.hackableWithRootAndMoneyAndRam;\\n    const scriptName = ScriptPath.MONEY_FARM;\\n    const ramScriptNeeded = ns.getScriptRam(scriptName);\\n    for (const server of hackableServers) {\\n        const serverStats = ns.getServer(server);\\n        ns.scp(scriptName, server);\\n        if (ns.fileExists(scriptName, server)) {\\n            if (!ns.scriptRunning(scriptName, server)) {\\n                const maxNumberOfScripts = Math.floor(serverStats.maxRam / ramScriptNeeded);\\n                if (maxNumberOfScripts > 0) {\\n                    ns.exec(scriptName, server, maxNumberOfScripts, server);\\n                }\\n            }\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuUmVtb3RlT25UYXJnZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NyaXB0cy9leGVjdXRpbmdTY3JpcHRzL3J1blJlbW90ZU9uVGFyZ2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFckQsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE9BQU8sR0FBZ0IsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakQsTUFBTSxlQUFlLEdBQWEsT0FBTyxDQUFDLDhCQUE4QixDQUFDO0lBQ3pFLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQUM7SUFDekMsTUFBTSxlQUFlLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUVwRCxLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtRQUNyQyxNQUFNLFdBQVcsR0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRWpELEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRTNCLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDdEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxFQUFFO2dCQUMxQyxNQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQ3BDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsZUFBZSxDQUNwQyxDQUFDO2dCQUVGLElBQUksa0JBQWtCLEdBQUcsQ0FBQyxFQUFFO29CQUMzQixFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxDQUFDLENBQUM7aUJBQ3hEO2FBQ0Q7U0FDRDtLQUNEO0FBQ0YsQ0FBQyJ9\",\"filename\":\"/scripts/executingScripts/runRemoteOnTarget.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///89389fa7-b3aa-447c-9300-742745e9f0c3\",\"moduleSequenceNumber\":68},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///9c3fcd6e-2286-40f2-95ec-aad1d2f6a794\",\"moduleSequenceNumber\":65},{\"filename\":\"/scripts/executingScripts/runRemoteOnTarget.js\",\"url\":\"blob:file:///d4ca1bf2-cef4-425e-91d0-176174538037\",\"moduleSequenceNumber\":241}],\"dependents\":[],\"ramUsage\":7.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":241,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const startServer = ns.getHostname();\\n    const target = ns.args[0];\\n    const path = (target, serverName, serverList, ignore, isFound) => {\\n        ignore.push(serverName);\\n        const scanResults = ns.scan(serverName);\\n        for (const server of scanResults) {\\n            if (ignore.includes(server)) {\\n                continue;\\n            }\\n            if (server === target) {\\n                serverList.push(server);\\n                return [serverList, true];\\n            }\\n            serverList.push(server);\\n            [serverList, isFound] = path(target, server, serverList, ignore, isFound);\\n            if (isFound) {\\n                return [serverList, isFound];\\n            }\\n            serverList.pop();\\n        }\\n        return [serverList, false];\\n    };\\n    if (target === undefined) {\\n        ns.alert('Please provide target server');\\n        return;\\n    }\\n    const [results, isFound] = path(target, startServer, [], [], false);\\n    if (!isFound) {\\n        ns.alert('Server not found!');\\n    }\\n    else {\\n        ns.tprintf(results.join(' --> '));\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZFJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvaW5mb3JtYXRpb25GdW5jdGlvbnMvZmluZFJvdXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxXQUFXLEdBQVcsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzdDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFFNUMsTUFBTSxJQUFJLEdBQUcsQ0FDWixNQUFjLEVBQ2QsVUFBa0IsRUFDbEIsVUFBb0IsRUFDcEIsTUFBZ0IsRUFDaEIsT0FBZ0IsRUFDTSxFQUFFO1FBQ3hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEIsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4QyxLQUFLLE1BQU0sTUFBTSxJQUFJLFdBQVcsRUFBRTtZQUNqQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7Z0JBQzVCLFNBQVM7YUFDVDtZQUNELElBQUksTUFBTSxLQUFLLE1BQU0sRUFBRTtnQkFDdEIsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDeEIsT0FBTyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUMxQjtZQUNELFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztZQUMxRSxJQUFJLE9BQU8sRUFBRTtnQkFDWixPQUFPLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO2FBQzdCO1lBQ0QsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ2pCO1FBQ0QsT0FBTyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDLENBQUM7SUFFRixJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7UUFDekIsRUFBRSxDQUFDLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1FBQ3pDLE9BQU87S0FDUDtJQUVELE1BQU0sQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUVwRSxJQUFJLENBQUMsT0FBTyxFQUFFO1FBQ2IsRUFBRSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0tBQzlCO1NBQU07UUFDTixFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztLQUNsQztBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/informationFunctions/findRoute.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/informationFunctions/findRoute.js\",\"url\":\"blob:file:///ffeedd1e-d6aa-4636-91e2-720d97c13e41\",\"moduleSequenceNumber\":1391}],\"dependents\":[],\"ramUsage\":1.85,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":75,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { DATATYPE, MONEY } from '/scripts/formats/formats.js';\\nexport async function main(ns) {\\n    ns.tprintf(`Maximum GB :${DATATYPE.GB.format(ns.getPurchasedServerMaxRam())}`);\\n    for (let i = 1; i <= 20; i++) {\\n        const ram = Math.pow(2, i);\\n        const price = ns.getPurchasedServerCost(ram);\\n        ns.tprintf(`${i} -- Server ram: ${DATATYPE.GB.format(ram)} -- Price: ${MONEY.format(price)}`);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdFNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2luZm9ybWF0aW9uRnVuY3Rpb25zL2Nvc3RTZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUU5RCxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLEVBQUUsQ0FBQyxPQUFPLENBQ1QsZUFBZSxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxFQUFFLENBQ2xFLENBQUM7SUFFRixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzdCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNCLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxFQUFFLENBQUMsT0FBTyxDQUNULEdBQUcsQ0FBQyxtQkFBbUIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsS0FBSyxDQUFDLE1BQU0sQ0FDdkUsS0FBSyxDQUNMLEVBQUUsQ0FDSCxDQUFDO0tBQ0Y7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/informationFunctions/costServer.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/formats/formats.js\",\"url\":\"blob:file:///0625d7d2-f4b6-43af-8528-cb40a3f889e3\",\"moduleSequenceNumber\":2406},{\"filename\":\"/scripts/informationFunctions/costServer.js\",\"url\":\"blob:file:///538bf92d-537c-47c1-be24-94242538313e\",\"moduleSequenceNumber\":3157}],\"dependents\":[],\"ramUsage\":1.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":76,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { DATATYPE, MONEY } from '/scripts/formats/formats.js';\\nexport async function main(ns) {\\n    const func = ns.args[0] ? ns.args[0] : 0;\\n    const servers = new ServersList(ns);\\n    const serversHackable = servers.hackable;\\n    let count = 1;\\n    switch (func) {\\n        case 0:\\n            for (const server of serversHackable) {\\n                printing(server);\\n                count++;\\n            }\\n            break;\\n        case 1:\\n            for (const server of servers.value) {\\n                printing(server);\\n                count++;\\n            }\\n    }\\n    function dash(minLength, length) {\\n        const diff = minLength - length;\\n        let dashString = '';\\n        for (let i = 0; i < diff; i++) {\\n            dashString = dashString + ' ';\\n        }\\n        dashString = dashString + '-';\\n        return dashString;\\n    }\\n    function printing(server) {\\n        const serverStats = ns.getServer(server);\\n        const rootAccess = serverStats.hasAdminRights ? 'YES' : 'NO ';\\n        const backdoor = serverStats.backdoorInstalled ? 'YES' : 'NO ';\\n        const dashNumber = dash(2, count.toString().length);\\n        const dashLvl = dash(4, serverStats.requiredHackingSkill.toString().length);\\n        const dashName = dash(20, server.length);\\n        const dashRam = dash(8, serverStats.maxRam.toString().length);\\n        ns.tprintf(`${count} ${dashNumber} Name: ${server} ${dashName} Lvl: ${serverStats.requiredHackingSkill} ${dashLvl} root: ${rootAccess} - backD: ${backdoor} - ${DATATYPE.GB.format(serverStats.maxRam)} ${dashRam} ${MONEY.format(serverStats.moneyMax)}`);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdFNlcnZlckhhY2thYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvaW5mb3JtYXRpb25GdW5jdGlvbnMvbGlzdFNlcnZlckhhY2thYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTlELE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BDLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDekMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBRWQsUUFBUSxJQUFJLEVBQUU7UUFDYixLQUFLLENBQUM7WUFDTCxLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtnQkFDckMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNqQixLQUFLLEVBQUUsQ0FBQzthQUNSO1lBQ0QsTUFBTTtRQUNQLEtBQUssQ0FBQztZQUNMLEtBQUssTUFBTSxNQUFNLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRTtnQkFDbkMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNqQixLQUFLLEVBQUUsQ0FBQzthQUNSO0tBQ0Y7SUFDRCxTQUFTLElBQUksQ0FBQyxTQUFpQixFQUFFLE1BQWM7UUFDOUMsTUFBTSxJQUFJLEdBQUcsU0FBUyxHQUFHLE1BQU0sQ0FBQztRQUNoQyxJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFDcEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5QixVQUFVLEdBQUcsVUFBVSxHQUFHLEdBQUcsQ0FBQztTQUM5QjtRQUNELFVBQVUsR0FBRyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQzlCLE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFDRCxTQUFTLFFBQVEsQ0FBQyxNQUFjO1FBQy9CLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekMsTUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDOUQsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUMvRCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1RSxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDOUQsRUFBRSxDQUFDLE9BQU8sQ0FDVCxHQUFHLEtBQUssSUFBSSxVQUFVLFVBQVUsTUFBTSxJQUFJLFFBQVEsU0FDakQsV0FBVyxDQUFDLG9CQUNiLElBQUksT0FBTyxVQUFVLFVBQVUsYUFBYSxRQUFRLE1BQU0sUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQzNFLFdBQVcsQ0FBQyxNQUFNLENBQ2xCLElBQUksT0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQ3BELENBQUM7SUFDSCxDQUFDO0FBQ0YsQ0FBQyJ9\",\"filename\":\"/scripts/informationFunctions/listServerHackable.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/formats/formats.js\",\"url\":\"blob:file:///2bcb5ed6-bdcb-4831-95d6-5176a27ab59f\",\"moduleSequenceNumber\":70},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///315c47ca-59b0-4d4d-a151-fbe9a75eeb00\",\"moduleSequenceNumber\":62},{\"filename\":\"/scripts/informationFunctions/listServerHackable.js\",\"url\":\"blob:file:///dcbd587e-3f42-499e-aae2-5234569d30ee\",\"moduleSequenceNumber\":1130}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":77,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nimport { MONEY, DATATYPE } from '/scripts/formats/formats.js';\\nexport async function main(ns) {\\n    const ramList = {};\\n    let newServerName = '';\\n    let serverNumber = 0;\\n    const serverType = (await ns.prompt('What kind of a server you want to purchase?', {\\n        type: 'select',\\n        choices: [OwnServerList.FARM_SERVER, OwnServerList.MONEY_SERVER],\\n    }));\\n    if (serverType === OwnServerList.FARM_SERVER) {\\n        while (ns.serverExists(OwnServerList.FARM_SERVER + '-' + serverNumber.toString())) {\\n            serverNumber++;\\n        }\\n        newServerName = OwnServerList.FARM_SERVER + '-' + serverNumber.toString();\\n    }\\n    if (serverType === OwnServerList.MONEY_SERVER) {\\n        while (ns.serverExists(OwnServerList.MONEY_SERVER + '-' + serverNumber.toString())) {\\n            serverNumber++;\\n        }\\n        newServerName = OwnServerList.MONEY_SERVER + '-' + serverNumber.toString();\\n    }\\n    for (let i = 1; i <= 20; i++) {\\n        const ram = Math.pow(2, i);\\n        const cost = ns.getPurchasedServerCost(ram);\\n        ramList[DATATYPE.GB.format(ram) + ' - ' + MONEY.format(cost)] = Math.pow(2, i);\\n    }\\n    const serverRam = (await ns.prompt('How much ram do you want to choose', {\\n        type: 'select',\\n        choices: [...Object.keys(ramList)],\\n    }));\\n    const buy = (await ns.prompt(`Do you want to buy a ${newServerName} with ${DATATYPE.GB.format(ramList[serverRam])}. It will cost ${MONEY.format(ns.getPurchasedServerCost(ramList[serverRam]))}!`));\\n    if (buy) {\\n        ns.purchaseServer(newServerName, ramList[serverRam]);\\n        if (serverType === OwnServerList.MONEY_SERVER) {\\n            ns.exec(ScriptPath.RUN_MONEY_SERVERS, OwnServerList.HOME);\\n        }\\n        if (serverType === OwnServerList.FARM_SERVER) {\\n            ns.exec(ScriptPath.RUN_EXP_SERVERS, OwnServerList.HOME, 1, OwnServerList.TARGET_EXP_FARM_SERVERS);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVyY2hhc2VTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2NyaXB0cy9wdXJjaGFzZVNlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFOUQsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE9BQU8sR0FBMkIsRUFBRSxDQUFDO0lBQzNDLElBQUksYUFBYSxHQUFHLEVBQUUsQ0FBQztJQUN2QixJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7SUFFckIsTUFBTSxVQUFVLEdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQzFDLDZDQUE2QyxFQUM3QztRQUNDLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxhQUFhLENBQUMsWUFBWSxDQUFDO0tBQ2hFLENBQ0QsQ0FBVyxDQUFDO0lBRWIsSUFBSSxVQUFVLEtBQUssYUFBYSxDQUFDLFdBQVcsRUFBRTtRQUM3QyxPQUNDLEVBQUUsQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQ3pFO1lBQ0QsWUFBWSxFQUFFLENBQUM7U0FDZjtRQUNELGFBQWEsR0FBRyxhQUFhLENBQUMsV0FBVyxHQUFHLEdBQUcsR0FBRyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDMUU7SUFFRCxJQUFJLFVBQVUsS0FBSyxhQUFhLENBQUMsWUFBWSxFQUFFO1FBQzlDLE9BQ0MsRUFBRSxDQUFDLFlBQVksQ0FDZCxhQUFhLENBQUMsWUFBWSxHQUFHLEdBQUcsR0FBRyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQzFELEVBQ0E7WUFDRCxZQUFZLEVBQUUsQ0FBQztTQUNmO1FBQ0QsYUFBYSxHQUFHLGFBQWEsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztLQUMzRTtJQUVELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDN0IsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDM0IsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzVDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQ3ZFLENBQUMsRUFDRCxDQUFDLENBQ0QsQ0FBQztLQUNGO0lBRUQsTUFBTSxTQUFTLEdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQ3pDLG9DQUFvQyxFQUNwQztRQUNDLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ2xDLENBQ0QsQ0FBVyxDQUFDO0lBRWIsTUFBTSxHQUFHLEdBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQ3BDLHdCQUF3QixhQUFhLFNBQVMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQy9ELE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FDbEIsa0JBQWtCLEtBQUssQ0FBQyxNQUFNLENBQzlCLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FDN0MsR0FBRyxDQUNKLENBQVksQ0FBQztJQUVkLElBQUksR0FBRyxFQUFFO1FBQ1IsRUFBRSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDckQsSUFBSSxVQUFVLEtBQUssYUFBYSxDQUFDLFlBQVksRUFBRTtZQUM5QyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUQ7UUFDRCxJQUFJLFVBQVUsS0FBSyxhQUFhLENBQUMsV0FBVyxFQUFFO1lBQzdDLEVBQUUsQ0FBQyxJQUFJLENBQ04sVUFBVSxDQUFDLGVBQWUsRUFDMUIsYUFBYSxDQUFDLElBQUksRUFDbEIsQ0FBQyxFQUNELGFBQWEsQ0FBQyx1QkFBdUIsQ0FDckMsQ0FBQztTQUNGO0tBQ0Q7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/purchaseServer.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/formats/formats.js\",\"url\":\"blob:file:///1279e8d8-54d4-40a2-9d17-fb7403e23241\",\"moduleSequenceNumber\":70},{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///907ca272-3a09-45e8-8f8d-715f8447ef42\",\"moduleSequenceNumber\":65},{\"filename\":\"/scripts/purchaseServer.js\",\"url\":\"blob:file:///70fa0145-1c0c-4dba-b806-649d9dc6b552\",\"moduleSequenceNumber\":1130}],\"dependents\":[],\"ramUsage\":5.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":78,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const text = await ns.prompt('What kind of a server you want to purchase?', {\\n        type: 'select',\\n        choices: ['ExpFarming', 'MoneyFarming'],\\n    });\\n    ns.tprint(text);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdDEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2NyaXB0cy90ZXN0MS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyw2Q0FBNkMsRUFBRTtRQUMzRSxJQUFJLEVBQUUsUUFBUTtRQUNkLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxjQUFjLENBQUM7S0FDdkMsQ0FBQyxDQUFDO0lBQ0gsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqQixDQUFDIn0=\",\"filename\":\"/scripts/test1.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/scripts/test1.js\",\"url\":\"blob:file:///f74974cc-16ef-491c-8870-714b6795ba2b\",\"moduleSequenceNumber\":2220}],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":79,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nimport { OwnServerList, ScriptPath } from '/scripts/enums/enums.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    let startBit = true;\\n    while (true) {\\n        const serversHackable = servers.hackable;\\n        let countNewRootServers = 0;\\n        let countHasRamAndMoneyServers = 0;\\n        ns.print(`runnig`);\\n        for (const server of serversHackable) {\\n            const serverStats = ns.getServer(server);\\n            const portsNeeded = ns.getServerNumPortsRequired(server);\\n            let portsOpen = 0;\\n            if (ns.fileExists('BruteSSH.exe', OwnServerList.HOME) &&\\n                !serverStats.sshPortOpen) {\\n                ns.brutessh(server);\\n            }\\n            if (ns.fileExists('relaySMTP.exe', OwnServerList.HOME) &&\\n                !serverStats.smtpPortOpen) {\\n                ns.relaysmtp(server);\\n            }\\n            if (ns.fileExists('FTPCrack.exe', OwnServerList.HOME) &&\\n                !serverStats.ftpPortOpen) {\\n                ns.ftpcrack(server);\\n            }\\n            if (ns.fileExists('HTTPworm.exe', OwnServerList.HOME) &&\\n                !serverStats.httpPortOpen) {\\n                ns.httpworm(server);\\n            }\\n            if (ns.fileExists('SQLInject.exe', OwnServerList.HOME) &&\\n                !serverStats.sqlPortOpen) {\\n                ns.sqlinject(server);\\n            }\\n            serverStats.ftpPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.smtpPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.sshPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.httpPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            serverStats.sqlPortOpen ? portsOpen++ : (portsOpen = portsOpen);\\n            if (!ns.hasRootAccess(server) && portsOpen >= portsNeeded) {\\n                ns.nuke(server);\\n                countNewRootServers++;\\n                if (serverStats.maxRam > 0 && serverStats.moneyMax > 0) {\\n                    countHasRamAndMoneyServers++;\\n                }\\n            }\\n        }\\n        if (countNewRootServers > 0 || startBit) {\\n            ns.exec(ScriptPath.RUN_HOME_SERVER, OwnServerList.HOME);\\n            ns.exec(ScriptPath.RUN_MONEY_SERVERS, OwnServerList.HOME);\\n            ns.exec(ScriptPath.RUN_EXP_SERVERS, OwnServerList.HOME, 1, OwnServerList.TARGET_EXP_FARM_SERVERS);\\n            if (!ns.scriptRunning(ScriptPath.HACK_NODES, OwnServerList.HOME)) {\\n                ns.exec(ScriptPath.HACK_NODES, OwnServerList.HOME);\\n            }\\n            if (countHasRamAndMoneyServers > 0 || startBit) {\\n                ns.exec(ScriptPath.RUN_REMOTE_ON_TARGET, OwnServerList.HOME);\\n            }\\n            startBit = false;\\n        }\\n        await ns.sleep(20000);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXBFLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxPQUFPLEdBQWdCLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRWpELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQztJQUVwQixPQUFPLElBQUksRUFBRTtRQUNaLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFFekMsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7UUFDNUIsSUFBSSwwQkFBMEIsR0FBRyxDQUFDLENBQUM7UUFFbkMsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVuQixLQUFLLE1BQU0sTUFBTSxJQUFJLGVBQWUsRUFBRTtZQUNyQyxNQUFNLFdBQVcsR0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2pELE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUV6RCxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7WUFFbEIsSUFDQyxFQUFFLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDO2dCQUNqRCxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQ3ZCO2dCQUNELEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDcEI7WUFFRCxJQUNDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUM7Z0JBQ2xELENBQUMsV0FBVyxDQUFDLFlBQVksRUFDeEI7Z0JBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNyQjtZQUVELElBQ0MsRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQztnQkFDakQsQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUN2QjtnQkFDRCxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3BCO1lBRUQsSUFDQyxFQUFFLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDO2dCQUNqRCxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQ3hCO2dCQUNELEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDcEI7WUFFRCxJQUNDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUM7Z0JBQ2xELENBQUMsV0FBVyxDQUFDLFdBQVcsRUFDdkI7Z0JBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNyQjtZQUVELFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsQ0FBQztZQUNoRSxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUM7WUFDakUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxDQUFDO1lBQ2hFLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsQ0FBQztZQUNqRSxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUM7WUFFaEUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLElBQUksU0FBUyxJQUFJLFdBQVcsRUFBRTtnQkFDMUQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDaEIsbUJBQW1CLEVBQUUsQ0FBQztnQkFDdEIsSUFBSSxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxXQUFXLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRTtvQkFDdkQsMEJBQTBCLEVBQUUsQ0FBQztpQkFDN0I7YUFDRDtTQUNEO1FBQ0QsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLElBQUksUUFBUSxFQUFFO1lBQ3hDLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFELEVBQUUsQ0FBQyxJQUFJLENBQ04sVUFBVSxDQUFDLGVBQWUsRUFDMUIsYUFBYSxDQUFDLElBQUksRUFDbEIsQ0FBQyxFQUNELGFBQWEsQ0FBQyx1QkFBdUIsQ0FDckMsQ0FBQztZQUNGLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNqRSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ25EO1lBQ0QsSUFBSSwwQkFBMEIsR0FBRyxDQUFDLElBQUksUUFBUSxFQUFFO2dCQUMvQyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDN0Q7WUFDRCxRQUFRLEdBQUcsS0FBSyxDQUFDO1NBQ2pCO1FBQ0QsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3RCO0FBQ0YsQ0FBQyJ9\",\"filename\":\"main.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/enums/enums.js\",\"url\":\"blob:file:///28fd54a0-f985-45ab-a75f-157295213648\",\"moduleSequenceNumber\":68},{\"filename\":\"/scripts/classes/serverslist.js\",\"url\":\"blob:file:///b59bc821-d36c-4046-8251-182136aa9434\",\"moduleSequenceNumber\":65},{\"filename\":\"main.js\",\"url\":\"blob:file:///bc541c48-a7b9-4b66-a54a-9f67eb96d9d4\",\"moduleSequenceNumber\":127}],\"dependents\":[],\"ramUsage\":7.45,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":127,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ServersList } from '/scripts/classes/serverslist.js';\\nexport async function main(ns) {\\n    const servers = new ServersList(ns);\\n    const hackableSevers = servers.hackable;\\n    const player = ns.getPlayer();\\n    const serverEXPList = [];\\n    for (const server of hackableSevers) {\\n        const serverStats = ns.getServer(server);\\n        const serverWeakenTime = Math.round(ns.formulas.hacking.weakenTime(serverStats, player) / 1000);\\n        const serverHackinExp = ns.formulas.hacking.hackExp(serverStats, player);\\n        const expPerSecond = parseFloat((serverHackinExp / serverWeakenTime).toFixed(5));\\n        serverEXPList.push({\\n            server: server,\\n            exp: serverHackinExp,\\n            weakenTime: serverWeakenTime,\\n            expPerSecond: expPerSecond,\\n        });\\n    }\\n    serverEXPList.sort((a, b) => b.expPerSecond - a.expPerSecond);\\n    for (const entry of serverEXPList) {\\n        ns.print(entry);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QmVzdFNlcnZlclRvRmFybUV4cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2luZm9ybWF0aW9uRnVuY3Rpb25zL2dldEJlc3RTZXJ2ZXJUb0Zhcm1FeHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRTlELE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDaEMsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDcEMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDOUIsTUFBTSxhQUFhLEdBS2IsRUFBRSxDQUFDO0lBRVQsS0FBSyxNQUFNLE1BQU0sSUFBSSxjQUFjLEVBQUU7UUFDcEMsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQ2xDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUMxRCxDQUFDO1FBQ0YsTUFBTSxlQUFlLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6RSxNQUFNLFlBQVksR0FBRyxVQUFVLENBQzlCLENBQUMsZUFBZSxHQUFHLGdCQUFnQixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUMvQyxDQUFDO1FBRUYsYUFBYSxDQUFDLElBQUksQ0FBQztZQUNsQixNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBRSxlQUFlO1lBQ3BCLFVBQVUsRUFBRSxnQkFBZ0I7WUFDNUIsWUFBWSxFQUFFLFlBQVk7U0FDMUIsQ0FBQyxDQUFDO0tBQ0g7SUFDRCxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUQsS0FBSyxNQUFNLEtBQUssSUFBSSxhQUFhLEVBQUU7UUFDbEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQjtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/informationFunctions/getBestServerToFarmExp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":81,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"moneyServer-0\",\"moneyServer-1\",\"moneyServer-2\",\"farmServer-0\",\"moneyServer-3\",\"moneyServer-4\",\"moneyServer-5\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"78.3.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":57.626000000000026,\"minDifficulty\":33,\"moneyAvailable\":1452327564025,\"moneyMax\":1452327564025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1093,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"47.4.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":57.635999999999996,\"minDifficulty\":33,\"moneyAvailable\":1345713258125,\"moneyMax\":1345713258125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1317,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"21.3.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"fulcrumassets\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26.559999999999988,\"minDifficulty\":26,\"moneyAvailable\":0,\"moneyMax\":383719802500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1054,\"serverGrowth\":70}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"55.7.3.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[1722043599500,583,1537,1113]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1505829.1312536462,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40299999999,\"onlineExpGained\":853185.941438247,\"onlineMoneyMade\":1722043599500,\"onlineRunningTime\":20184.410000032287,\"pid\":66,\"ramUsage\":2.4,\"server\":\"blade\",\"threads\":53,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4b666c76-e42d-4d78-800e-911aff9d528e\",\"moduleSequenceNumber\":130}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"blade\",\"moduleSequenceNumber\":130,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":32.582000000000015,\"minDifficulty\":32,\"moneyAvailable\":0,\"moneyMax\":344408719900,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":928,\"serverGrowth\":72}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"92.6.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\",\"ecorp\",\"megacorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":563532189275,\"moneyMax\":563532189275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1053,\"serverGrowth\":86}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"6.7.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":41.27800000000001,\"minDifficulty\":17,\"moneyAvailable\":455705993275,\"moneyMax\":455705993275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1115,\"serverGrowth\":49}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"98.2.8.1\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":511.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[2405484867975,3195,5964,4473]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5807877.281381721,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40299999999,\"onlineExpGained\":3552768.814530796,\"onlineMoneyMade\":2405484867975,\"onlineRunningTime\":20184.410000032287,\"pid\":67,\"ramUsage\":2.4,\"server\":\"omnitek\",\"threads\":213,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///df2d86f3-1933-4226-9ee7-717608457d34\",\"moduleSequenceNumber\":131}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omnitek\",\"moduleSequenceNumber\":131,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"vitalife\",\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":98,\"hackDifficulty\":33.60199999999999,\"minDifficulty\":33,\"moneyAvailable\":0,\"moneyMax\":343640695425,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":974,\"serverGrowth\":96}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"77.6.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":21.56199999999999,\"minDifficulty\":21,\"moneyAvailable\":0,\"moneyMax\":479828912850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1235,\"serverGrowth\":87}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"75.6.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\",\"blade\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":32,\"minDifficulty\":32,\"moneyAvailable\":636472049200,\"moneyMax\":636472049200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1102,\"serverGrowth\":99}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"21.2.6.1\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":2047.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[322924651600,14501,28149,17913]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":25910216.48899813,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40299999999,\"onlineExpGained\":14739377.177529056,\"onlineMoneyMade\":322924651600,\"onlineRunningTime\":20184.410000032287,\"pid\":68,\"ramUsage\":2.4,\"server\":\"fulcrumtech\",\"threads\":853,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///00dc6da0-5b8d-4e76-9724-9ab815b1cf82\",\"moduleSequenceNumber\":132}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":132,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"titan-labs\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":30.574000000000005,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":40365581450,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":990,\"serverGrowth\":96}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"9.3.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":100,\"minDifficulty\":33,\"moneyAvailable\":428535.47167695535,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1543,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-42874-Daedalus.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":932968984,\"reward\":{\"name\":\"Daedalus\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"40.5.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":29.578000000000003,\"minDifficulty\":29,\"moneyAvailable\":0,\"moneyMax\":28286155150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1035,\"serverGrowth\":82}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-222951.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"VIRUSTRASHFRAMESHELLMEDIA\",\"COMPUTER\"],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"36.7.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":30.574000000000005,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":20387982975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":977,\"serverGrowth\":72}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"25.1.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"titan-labs\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":46.786000000000016,\"minDifficulty\":24,\"moneyAvailable\":16288164575,\"moneyMax\":16288164575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":932,\"serverGrowth\":60}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"5.4.1.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[86761641300,848,1537,1166]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1481437.5290938606,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40299999999,\"onlineExpGained\":881693.6844157556,\"onlineMoneyMade\":86761641300,\"onlineRunningTime\":20184.410000032287,\"pid\":69,\"ramUsage\":2.4,\"server\":\"helios\",\"threads\":53,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///692686ee-1461-4fec-b8d9-64c23b5838cd\",\"moduleSequenceNumber\":133}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"helios\",\"moduleSequenceNumber\":133,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"titan-labs\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":32.574000000000005,\"minDifficulty\":32,\"moneyAvailable\":0,\"moneyMax\":14460273550,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":894,\"serverGrowth\":71}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"7.0.6.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[91669048978,572,1066,806]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":959344.7273510639,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.404,\"onlineExpGained\":538523.6734087649,\"onlineMoneyMade\":91669048978,\"onlineRunningTime\":20184.410000032287,\"pid\":70,\"ramUsage\":2.4,\"server\":\"vitalife\",\"threads\":26,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///fc6e13b6-2f5a-42c4-891f-0f5a853a09d8\",\"moduleSequenceNumber\":134}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"vitalife\",\"moduleSequenceNumber\":134,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":50.623999999999995,\"minDifficulty\":28,\"moneyAvailable\":18737229725,\"moneyMax\":18737229725,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":779,\"serverGrowth\":68}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"97.5.6.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"infocomm\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":30.559999999999988,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":24746308925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":904,\"serverGrowth\":89}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"37.4.1.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[133905331924,494,962,676]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":821310.7130441023,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.404,\"onlineExpGained\":485180.1636881953,\"onlineMoneyMade\":133905331924,\"onlineRunningTime\":20184.410000032287,\"pid\":71,\"ramUsage\":2.4,\"server\":\"univ-energy\",\"threads\":26,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0be486f5-48ef-4f59-8f1a-039ff42f823e\",\"moduleSequenceNumber\":135}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":135,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":48.044,\"minDifficulty\":29,\"moneyAvailable\":28695241050,\"moneyMax\":28695241050,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":864,\"serverGrowth\":87}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"69.5.0.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[53622541752,273,507,377]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":415704.79973625194,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.404,\"onlineExpGained\":244563.20322895996,\"onlineMoneyMade\":53622541752,\"onlineRunningTime\":20184.410000032287,\"pid\":72,\"ramUsage\":2.4,\"server\":\"titan-labs\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5d9db3c7-22ef-4530-9920-5b6f2759ccfd\",\"moduleSequenceNumber\":136}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"titan-labs\",\"moduleSequenceNumber\":136,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"infocomm\",\"fulcrumtech\",\"stormtech\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":46.428,\"minDifficulty\":27,\"moneyAvailable\":22229363500,\"moneyMax\":22229363500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":850,\"serverGrowth\":78}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"96.4.7.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[46613066188,325,663,468]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":519117.05051531224,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.405,\"onlineExpGained\":267981.0386124551,\"onlineMoneyMade\":46613066188,\"onlineRunningTime\":20184.410000032287,\"pid\":73,\"ramUsage\":2.4,\"server\":\"microdyne\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///04c82865-d9af-4230-8ad8-65bcb9c52d22\",\"moduleSequenceNumber\":137}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"microdyne\",\"moduleSequenceNumber\":137,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":38.116,\"minDifficulty\":23,\"moneyAvailable\":16066472225,\"moneyMax\":16066472225,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":852,\"serverGrowth\":85}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"67.9.5.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":47.348,\"minDifficulty\":26,\"moneyAvailable\":21213369050,\"moneyMax\":21213369050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":910,\"serverGrowth\":71}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"79.3.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":21209278850,\"moneyMax\":21209278850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":831,\"serverGrowth\":73}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-83307-TheSyndicate.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":8367894525395908,\"reward\":{\"name\":\"The Syndicate\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"63.5.3.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":53.86800000000001,\"minDifficulty\":27,\"moneyAvailable\":25243305700,\"moneyMax\":25243305700,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":903,\"serverGrowth\":58}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"59.0.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[24510356178,162,150,150]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":166251.84513915918,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40599999999,\"onlineExpGained\":95093.26706639014,\"onlineMoneyMade\":24510356178,\"onlineRunningTime\":20184.410000032287,\"pid\":74,\"ramUsage\":2.4,\"server\":\"omnia\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a7a529fb-d358-4be0-b199-9a2920797b99\",\"moduleSequenceNumber\":138}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omnia\",\"moduleSequenceNumber\":138,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"global-pharm\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":29.245999999999995,\"minDifficulty\":29,\"moneyAvailable\":0,\"moneyMax\":22940107050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":875,\"serverGrowth\":60}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"73.7.8.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":20.204000000000004,\"minDifficulty\":20,\"moneyAvailable\":0,\"moneyMax\":23617868350,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":813,\"serverGrowth\":66}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"16.9.1.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":44.208,\"minDifficulty\":24,\"moneyAvailable\":23545289150,\"moneyMax\":23545289150,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":809,\"serverGrowth\":70}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-333175.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,1,1,0,0],[0,0,0,0,0,1,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0],[1,1,0,0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"1.7.4.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[54042399736,299,546,416]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":441466.2490336605,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40599999999,\"onlineExpGained\":258928.9115573414,\"onlineMoneyMade\":54042399736,\"onlineRunningTime\":20184.410000032287,\"pid\":75,\"ramUsage\":2.4,\"server\":\"solaris\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///e9810063-f9c6-4bdc-b66f-b63263fbff66\",\"moduleSequenceNumber\":139}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"solaris\",\"moduleSequenceNumber\":139,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":44.736000000000004,\"minDifficulty\":26,\"moneyAvailable\":21883741050,\"moneyMax\":21883741050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":825,\"serverGrowth\":78}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"53.1.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":53.89800000000001,\"minDifficulty\":26,\"moneyAvailable\":37526353400,\"moneyMax\":37526353400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":814,\"serverGrowth\":55}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"40.3.9.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":7.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[23665558560,105,108,99]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":104732.9217943751,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40599999999,\"onlineExpGained\":61662.04036336237,\"onlineMoneyMade\":23665558560,\"onlineRunningTime\":20184.410000032287,\"pid\":76,\"ramUsage\":2.4,\"server\":\"global-pharm\",\"threads\":3,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0226e553-4289-4a86-b717-284e927543ba\",\"moduleSequenceNumber\":140}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":140,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rho-construction\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":47.44400000000002,\"minDifficulty\":28,\"moneyAvailable\":41793975375,\"moneyMax\":41793975375,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":771,\"serverGrowth\":87}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"38.2.6.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":45.955999999999996,\"minDifficulty\":24,\"moneyAvailable\":30326323400,\"moneyMax\":30326323400,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":831,\"serverGrowth\":65}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"11.4.2.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":50.812000000000005,\"minDifficulty\":28,\"moneyAvailable\":32607296875,\"moneyMax\":32607296875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":808,\"serverGrowth\":73}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"0.6.1.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[35582040462,234,228,198]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":218797.8137387353,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.40699999999,\"onlineExpGained\":121966.06195981563,\"onlineMoneyMade\":35582040462,\"onlineRunningTime\":20184.410000032287,\"pid\":77,\"ramUsage\":2.4,\"server\":\"unitalife\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3ccebd1f-ebbc-4169-97fd-b7aee0f8124a\",\"moduleSequenceNumber\":141}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":141,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":45.33,\"minDifficulty\":26,\"moneyAvailable\":27130159475,\"moneyMax\":27130159475,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":804,\"serverGrowth\":78}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"20.2.1.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[30902468628,288,312,270]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":271920.7448289763,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41199999998,\"onlineExpGained\":138697.65200270506,\"onlineMoneyMade\":30902468628,\"onlineRunningTime\":20184.410000032287,\"pid\":78,\"ramUsage\":2.4,\"server\":\"lexo-corp\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a516a662-cf81-413a-ad96-5369d17d780f\",\"moduleSequenceNumber\":142}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":142,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":22.473999999999993,\"minDifficulty\":22,\"moneyAvailable\":0,\"moneyMax\":19238200775,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":701,\"serverGrowth\":61}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"37.0.7.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[59208433323,559,1131,923]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":742289.3999630773,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41399999999,\"onlineExpGained\":376658.48752078094,\"onlineMoneyMade\":59208433323,\"onlineRunningTime\":20324.41000003295,\"pid\":79,\"ramUsage\":2.4,\"server\":\"rho-construction\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2ded4407-3a71-49c6-8bc8-c3885f504172\",\"moduleSequenceNumber\":143}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":143,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":38.476,\"minDifficulty\":17,\"moneyAvailable\":14909117000,\"moneyMax\":14909117000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":515,\"serverGrowth\":43}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"46.4.5.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[31741236492,402,432,390]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":334669.8700426522,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41399999999,\"onlineExpGained\":171805.35070538044,\"onlineMoneyMade\":31741236492,\"onlineRunningTime\":20184.410000032287,\"pid\":80,\"ramUsage\":2.4,\"server\":\"alpha-ent\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///a4f64375-e234-4ebd-acbb-46907cc4afc3\",\"moduleSequenceNumber\":144}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":144,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"catalyst\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":18053156525,\"moneyMax\":18053156525,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":562,\"serverGrowth\":57}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-772535.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":139913819,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"71.2.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[31359802708,377,793,780]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":769198.0460357727,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41399999999,\"onlineExpGained\":411240.0360028367,\"onlineMoneyMade\":31359802708,\"onlineRunningTime\":20184.410000032287,\"pid\":81,\"ramUsage\":2.4,\"server\":\"aevum-police\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///454840df-2769-4911-85a7-c6e56dc29cb8\",\"moduleSequenceNumber\":145}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":145,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":34.528,\"minDifficulty\":26,\"moneyAvailable\":8602833150,\"moneyMax\":8602833150,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":423,\"serverGrowth\":39}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"37.4.5.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[45749290808,1716,2912,2522]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1942199.1776474207,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.415,\"onlineExpGained\":996910.9256604179,\"onlineMoneyMade\":45749290808,\"onlineRunningTime\":20324.41000003295,\"pid\":82,\"ramUsage\":2.4,\"server\":\"rothman-uni\",\"threads\":26,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///6bfce11b-f4d8-4b23-a3e0-8f62e66a5a12\",\"moduleSequenceNumber\":146}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":146,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":38.09,\"minDifficulty\":17,\"moneyAvailable\":5536831175,\"moneyMax\":5536831175,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":404,\"serverGrowth\":43}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"95.0.3.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[59290256194,325,663,468]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":565704.5007042948,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.415,\"onlineExpGained\":292030.6190007514,\"onlineMoneyMade\":59290256194,\"onlineRunningTime\":20184.410000032287,\"pid\":83,\"ramUsage\":2.4,\"server\":\"zb-institute\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///09b82ae2-c1bd-440c-9d01-3a62e4837ede\",\"moduleSequenceNumber\":147}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zb-institute\",\"moduleSequenceNumber\":147,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":42.556,\"minDifficulty\":25,\"moneyAvailable\":20339574900,\"moneyMax\":20339574900,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":773,\"serverGrowth\":80}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"37.9.3.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[17979200993,741,1209,1053]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":872439.3183351379,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.415,\"onlineExpGained\":443796.53885305993,\"onlineMoneyMade\":17979200993,\"onlineRunningTime\":20324.41000003295,\"pid\":84,\"ramUsage\":2.4,\"server\":\"summit-uni\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///ebcccd39-c5fe-480a-bf58-e36646af5fd1\",\"moduleSequenceNumber\":148}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":148,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":39.844,\"minDifficulty\":19,\"moneyAvailable\":5060528550,\"moneyMax\":5060528550,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":429,\"serverGrowth\":46}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"33.7.5.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"aevum-police\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":42.084,\"minDifficulty\":22,\"moneyAvailable\":10523038375,\"moneyMax\":10523038375,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":587,\"serverGrowth\":61}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"13.6.6.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[18735249360,390,480,444]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":380609.8089893111,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.416,\"onlineExpGained\":197951.206141226,\"onlineMoneyMade\":18735249360,\"onlineRunningTime\":20324.41000003295,\"pid\":85,\"ramUsage\":2.4,\"server\":\"catalyst\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///97eab525-7f0e-4e62-bc3c-8f5f0afa1451\",\"moduleSequenceNumber\":149}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":149,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":47.71199999999999,\"minDifficulty\":20,\"moneyAvailable\":10279875325,\"moneyMax\":10279875325,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":428,\"serverGrowth\":39}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"17.5.3.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[21754693701,2145,2834,2600]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1507453.801113373,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.416,\"onlineExpGained\":743226.3630470462,\"onlineMoneyMade\":21754693701,\"onlineRunningTime\":20324.41000003295,\"pid\":86,\"ramUsage\":2.4,\"server\":\"the-hub\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5a5e6f91-58f2-42da-8029-f5a6977049b8\",\"moduleSequenceNumber\":150}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":150,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":12.389999999999997,\"minDifficulty\":12,\"moneyAvailable\":0,\"moneyMax\":4305111150,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":275,\"serverGrowth\":48}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-870816-Sector12.cct\",\"type\":\"Total Ways to Sum\",\"data\":55,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"79.6.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":22.41999999999999,\"minDifficulty\":22,\"moneyAvailable\":0,\"moneyMax\":5552615500,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":353,\"serverGrowth\":56}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"52.6.9.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[12020860320,462,504,474]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":481993.3306651118,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.416,\"onlineExpGained\":250626.35760592474,\"onlineMoneyMade\":12020860320,\"onlineRunningTime\":20324.41000003295,\"pid\":87,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5d2ff7fe-3829-4430-b831-5c9e5cf3042c\",\"moduleSequenceNumber\":151}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":151,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"neo-net\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":43.662000000000006,\"minDifficulty\":24,\"moneyAvailable\":6875000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":400,\"serverGrowth\":66}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"29.9.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":39.798,\"minDifficulty\":22,\"moneyAvailable\":1801412575,\"moneyMax\":1801412575,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":288,\"serverGrowth\":61}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"95.5.0.1\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[1070726,9907,10002,867]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":766494.1808384085,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":391190.619717663,\"onlineMoneyMade\":1070726,\"onlineRunningTime\":20424.41000003342,\"pid\":88,\"ramUsage\":2.4,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///d528b56d-4547-44c3-b8d4-b0f5ea83d2c5\",\"moduleSequenceNumber\":152}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":152,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":3.0300000000000007,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"67.5.9.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[56775972,9462,33450,31752]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7096303.000299554,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":3600746.818730497,\"onlineMoneyMade\":56775972,\"onlineRunningTime\":20424.41000003342,\"pid\":89,\"ramUsage\":2.4,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///825b3fe6-57c5-4370-a07a-334f6cd5cd5b\",\"moduleSequenceNumber\":153}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":153,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":6827654.1771745095,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"90.3.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[64886118,10824,24168,23844]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5287182.3235869985,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":2701978.045407718,\"onlineMoneyMade\":64886118,\"onlineRunningTime\":20424.41000003342,\"pid\":90,\"ramUsage\":2.4,\"server\":\"sigma-cosmetics\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///6240d7e8-6ab4-435a-bcda-e94bb3715709\",\"moduleSequenceNumber\":154}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":154,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":12.452,\"minDifficulty\":3,\"moneyAvailable\":57500000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"28.3.3.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[948452952,17646,22308,19152]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6059070.764268745,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":3070120.95642516,\"onlineMoneyMade\":948452952,\"onlineRunningTime\":20344.410000033044,\"pid\":91,\"ramUsage\":2.4,\"server\":\"joesguns\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///3acda0c6-5232-4968-b2b9-1feedd3f58ba\",\"moduleSequenceNumber\":155}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":155,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"3.0.5.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[957358129,11349,12519,12337]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5173561.536097762,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":2589116.034750099,\"onlineMoneyMade\":957358129,\"onlineRunningTime\":20324.41000003295,\"pid\":92,\"ramUsage\":2.4,\"server\":\"zer0\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///22936c09-cc4c-4b72-82be-e8681fa88af9\",\"moduleSequenceNumber\":156}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":156,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"foodnstuff\",\"neo-net\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":19.779999999999994,\"minDifficulty\":8,\"moneyAvailable\":187500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-30176.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((((((((aa())(a)(a\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"19.3.6.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[166602042,12540,14028,13806]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4894568.867757065,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":2477146.05602771,\"onlineMoneyMade\":166602042,\"onlineRunningTime\":20344.410000033044,\"pid\":93,\"ramUsage\":2.4,\"server\":\"nectar-net\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///9e601b37-318d-4b62-9e89-adc2ccd4b452\",\"moduleSequenceNumber\":157}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":157,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.288000000000001,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"1.4.1.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[643245694,13936,15392,14937]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6373799.687713341,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":3159460.617510283,\"onlineMoneyMade\":643245694,\"onlineRunningTime\":20324.41000003295,\"pid\":94,\"ramUsage\":2.4,\"server\":\"neo-net\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1d015a17-a884-4d79-88b9-71d4649a05fa\",\"moduleSequenceNumber\":158}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":158,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zer0\",\"computek\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":125000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"37.1.9.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[10125000000,8762,10166,9828]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4704309.542018907,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":2381592.12769318,\"onlineMoneyMade\":10125000000,\"onlineRunningTime\":20324.41000003295,\"pid\":95,\"ramUsage\":2.4,\"server\":\"silver-helix\",\"threads\":26,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///bc5d0afb-32e8-41d6-9d06-517ffa5f6dc7\",\"moduleSequenceNumber\":159}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":159,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"johnson-ortho\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10.336,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"8.0.9.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[185083542,8958,11226,11094]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3283753.403098403,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":1637610.8659787711,\"onlineMoneyMade\":185083542,\"onlineRunningTime\":20344.410000033044,\"pid\":96,\"ramUsage\":2.4,\"server\":\"hong-fang-tea\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///f6490813-5f63-4340-972f-43f2636f2794\",\"moduleSequenceNumber\":160}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":160,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":25.156,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-867171-OmniTekIncorporated.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[173,10,87,61,10,197,29,72,184,89,128,1,20,31],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"37.8.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[246014460,10542,11376,11238]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3308234.1723215333,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.41699999999,\"onlineExpGained\":1683543.853683053,\"onlineMoneyMade\":246014460,\"onlineRunningTime\":20344.410000033044,\"pid\":97,\"ramUsage\":2.4,\"server\":\"harakiri-sushi\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///05bafe97-fa83-440f-9d40-dd4d854dd1a1\",\"moduleSequenceNumber\":161}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":161,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":16.159999999999997,\"minDifficulty\":5,\"moneyAvailable\":100000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"30.4.4.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3072550949,8606,9750,9659]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3410118.448206872,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.418,\"onlineExpGained\":1729337.0453376605,\"onlineMoneyMade\":3072550949,\"onlineRunningTime\":20324.41000003295,\"pid\":98,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///bdfff635-7c9b-46c8-9d19-4aaf9c158988\",\"moduleSequenceNumber\":162}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":162,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zer0\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":18.376,\"minDifficulty\":7,\"moneyAvailable\":600000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"16.0.2.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1316033719,10933,13026,12506]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3756585.954224269,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.419,\"onlineExpGained\":1887446.3773615998,\"onlineMoneyMade\":1316033719,\"onlineRunningTime\":20324.41000003295,\"pid\":99,\"ramUsage\":2.4,\"server\":\"max-hardware\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///1419650c-f5a0-4349-ab7a-bbb98e45a600\",\"moduleSequenceNumber\":163}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":163,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"iron-gym\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":20.496000000000002,\"minDifficulty\":5,\"moneyAvailable\":250000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-925513-Aevum.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"T14ggggg7n6Xqzf4GE6vGE6vG6fFWL6SR6fFWL6SRvMSRvMSbOGhCloZB2bSGZLG\",\"reward\":{\"name\":\"Aevum\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"44.0.6.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[8299030610,3354,4030,3822]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1673145.3100065577,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.421,\"onlineExpGained\":842418.9828421748,\"onlineMoneyMade\":8299030610,\"onlineRunningTime\":20324.41000003295,\"pid\":100,\"ramUsage\":2.4,\"server\":\"omega-net\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///4002a194-5863-4dbb-a49e-096494087fa7\",\"moduleSequenceNumber\":164}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":164,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":26,\"hackDifficulty\":23.082,\"minDifficulty\":9,\"moneyAvailable\":1719841425,\"moneyMax\":1719841425,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":218,\"serverGrowth\":32}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"54.0.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":31.072,\"minDifficulty\":12,\"moneyAvailable\":1129990325,\"moneyMax\":1129990325,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":231,\"serverGrowth\":30}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"92.7.0.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2477871565,5395,6331,6123]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3026834.6087542535,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.421,\"onlineExpGained\":1479494.8770001011,\"onlineMoneyMade\":2477871565,\"onlineRunningTime\":20324.41000003295,\"pid\":101,\"ramUsage\":2.4,\"server\":\"iron-gym\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///f39dcdcf-a9ba-40cf-a54a-bcd655fc5ddf\",\"moduleSequenceNumber\":165}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":165,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":31.778,\"minDifficulty\":10,\"moneyAvailable\":500000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"11.7.6.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[25630339254,624,1131,988]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":657693.1596389301,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.42199999999,\"onlineExpGained\":346031.83584960876,\"onlineMoneyMade\":25630339254,\"onlineRunningTime\":20324.41000003295,\"pid\":102,\"ramUsage\":2.4,\"server\":\"millenium-fitness\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5970d739-c5b3-41aa-84e7-59f05ca3f21e\",\"moduleSequenceNumber\":166}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":166,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"syscore\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":41.952,\"minDifficulty\":15,\"moneyAvailable\":6250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":492,\"serverGrowth\":28}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"99.2.0.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[54753819133,273,507,403]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":315193.6757167192,\"offlineMoneyMade\":0,\"offlineRunningTime\":74790.42400000001,\"onlineExpGained\":186702.28402199512,\"onlineMoneyMade\":54753819133,\"onlineRunningTime\":20184.410000032287,\"pid\":103,\"ramUsage\":2.4,\"server\":\"powerhouse-fitness\",\"threads\":13,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///5db2259a-ffe9-45ee-a754-81a462849295\",\"moduleSequenceNumber\":167}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":167,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":37.468,\"minDifficulty\":19,\"moneyAvailable\":22500000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1079,\"serverGrowth\":58}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"84.3.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":37.168,\"minDifficulty\":18,\"moneyAvailable\":11250000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":742,\"serverGrowth\":53}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"34.8.1.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":520,\"serverGrowth\":1}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-260496-Sector12.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":325418924,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"76.0.9.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\",\"lexo-corp\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":360,\"serverGrowth\":1}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"15.6.3.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\",\"zb-institute\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":210,\"serverGrowth\":1}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"88.3.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":510,\"serverGrowth\":1}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"95.0.3.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"n00dles\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":58,\"serverGrowth\":1}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"35.2.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\",\"w0r1d_d43m0n\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":true,\"ip\":\"69.6.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":3000,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"95.2.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-0\",\"httpPortOpen\":true,\"ip\":\"32.7.3.4\",\"isConnectedTo\":false,\"maxRam\":524288,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":524210.3999999995,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[194250000,1470008,1508145,145614]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67658029.3954802,\"onlineMoneyMade\":194250000,\"onlineRunningTime\":674.0100000000164,\"pid\":550,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1891275652.7093768,273893,845948,804344]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":97765448.5823827,\"onlineMoneyMade\":1891275652.7093768,\"onlineRunningTime\":674.0100000000164,\"pid\":551,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[172500000,277360,610192,603258]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":68731233.68232724,\"onlineMoneyMade\":172500000,\"onlineRunningTime\":674.0100000000164,\"pid\":552,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,457644,561654,485380]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":77316867.97709689,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":553,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,346700,353634,353634]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":63422911.403302215,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":554,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,266959,273893,270426]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":40677904.4207862,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":555,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[900000000,277360,284294,280827]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":43793658.8019528,\"onlineMoneyMade\":900000000,\"onlineRunningTime\":674.0100000000164,\"pid\":556,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,176817,183751,183751]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":38369938.21251458,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":557,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,138680,142147,138680]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":29403489.493379567,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":558,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,145614,152548,149081]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22502670.530647665,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":559,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,76274,76274,72807]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17909817.776187245,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":560,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,114411,117878,114411]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20840934.860692143,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":561,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,62406,58939,58939]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14217071.842952764,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":562,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,48538,48538,45071]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10136587.586728657,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":563,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,34670,34670,31203]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8931829.226010907,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":564,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,34670,31203,31203]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8705648.537600294,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":565,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,20802,20802,17335]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8654873.28101832,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":566,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[0,17335,13868,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6404606.227953557,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":567,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,13868,13868,10401]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6129958.249169243,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":568,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,17335,17335,13868]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5866850.101426285,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":569,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,3467,10401,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4265121.552885829,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":570,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,13868,13868,10401]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5169844.306528277,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":571,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,13868,13868,10401]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4874424.631869518,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":572,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,13868,13868,10401]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4062020.526557933,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":573,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,13868,13868,10401]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4579004.95721076,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":574,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[0,10401,10401,10401]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4175110.870763237,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":575,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[0,10401,10401,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3981241.709268427,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":576,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[0,10401,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3288851.8467869614,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":577,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,10401,10401,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3450409.48136597,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":578,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3004972.003169561,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":579,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2746479.787843147,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":580,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3037283.530085363,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":581,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2843414.3685905524,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":582,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3037283.530085363,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":583,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2681856.7340115434,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":584,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[0,10401,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3113446.4149583243,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":585,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2875725.895506354,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":586,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2843414.3685905524,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":587,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[0,6934,6934,6934]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2991124.2059199316,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":588,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2649545.2070957418,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":589,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2908037.4224221553,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":590,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2520299.099432535,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":591,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3101906.5839169663,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":592,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2215647.55994069,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":593,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2423364.51868513,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":594,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2908037.4224221553,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":595,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2284886.546188837,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":596,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2811102.84167475,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":597,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2469523.8428505603,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":598,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2681856.7340115434,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":599,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2492603.504933276,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":600,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2284886.546188837,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":601,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2331045.870354268,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":602,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2215647.55994069,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":603,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[0,3467,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2264114.8503143927,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":604,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2007930.6011962502,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":605,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2164872.3033587155,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":606,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,3467,3467,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1257841.583507996,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":607,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[0,3467,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2181028.066816617,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":608,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[0,6934,6934,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2003314.668779707,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":609,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[0,6934,3467,3467]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1661735.6699555176,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":610,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[0,3467,3467,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1257841.583507996,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":611,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,3467,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1006273.2668063969,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":612,\"ramUsage\":2.4,\"server\":\"moneyServer-0\",\"threads\":3467,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///dc9f77ad-b8cc-4631-b35b-14e3a14a0fe4\",\"moduleSequenceNumber\":168}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-0\",\"moduleSequenceNumber\":168,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-1\",\"httpPortOpen\":true,\"ip\":\"26.0.3.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[185500000,2961245,3009790,291270]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":134523052.38606307,\"onlineMoneyMade\":185500000,\"onlineRunningTime\":674.0100000000164,\"pid\":613,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1151857135.8525884,436905,1664400,1595050]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":188818862.78149712,\"onlineMoneyMade\":1151857135.8525884,\"onlineRunningTime\":674.0100000000164,\"pid\":614,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[115000000,554800,1213625,1199755]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":136466640.19122514,\"onlineMoneyMade\":115000000,\"onlineRunningTime\":674.0100000000164,\"pid\":615,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[5295252310,936225,1109600,970900]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":183509774.95267987,\"onlineMoneyMade\":5295252310,\"onlineRunningTime\":674.0100000000164,\"pid\":616,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,693500,707370,707370]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126864116.11822884,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":617,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,533995,547865,540930]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":81367541.7243009,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":618,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[300000000,547865,568670,561735]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":85407065.07231583,\"onlineMoneyMade\":300000000,\"onlineRunningTime\":674.0100000000164,\"pid\":619,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,353685,367555,360620]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76104619.87660164,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":620,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,277400,284335,277400]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":58815459.94709761,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":621,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,291270,305140,298205]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45011831.59216648,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":622,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,152570,152570,145635]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35824801.34925255,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":623,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,228855,235790,228855]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":41687880.951514244,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":624,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,124830,117895,117895]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28438244.370025218,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":625,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,97090,97090,90155]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20276098.907979015,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":626,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,69350,69350,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17866234.693506103,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":627,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,69350,62415,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17413808.078528423,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":628,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,41610,41610,34675]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17312242.920064047,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":629,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[0,34675,27740,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12811059.760847395,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":630,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12261684.585517364,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":631,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,34675,34675,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11735392.400747417,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":632,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,6935,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8531473.311007563,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":633,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10341179.770918258,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":634,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9750255.212580072,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":635,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8125212.677150062,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":636,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9159330.654241886,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":637,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[0,20805,20805,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8351425.984638896,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":638,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7963631.743229462,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":639,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[0,20805,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6578652.309624338,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":640,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6901814.177465534,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":641,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6010810.741846236,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":642,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5493751.753300324,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":643,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":644,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":645,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":646,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":647,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[0,20805,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6227790.85311104,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":648,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5752281.247573281,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":649,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":650,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[0,13870,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5983111.153174134,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":651,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5299854.632595607,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":652,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":653,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5041325.1383226495,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":654,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6204707.862550955,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":655,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":656,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4847428.017617933,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":657,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":658,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":659,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5623016.500436802,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":660,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4939759.979858275,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":661,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":662,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4985925.960978446,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":663,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":664,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4662764.09313725,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":665,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":666,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4528882.747888755,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":667,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4016440.3574548587,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":668,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4330369.029072019,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":669,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":670,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4362685.2158561405,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":671,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4007207.1612308254,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":672,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3323950.640652297,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":673,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":674,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2012836.7768394467,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":675,\"ramUsage\":2.4,\"server\":\"moneyServer-1\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2aa2991a-1104-4e87-8cbc-a8784f899c16\",\"moduleSequenceNumber\":169}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-1\",\"moduleSequenceNumber\":169,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-2\",\"httpPortOpen\":true,\"ip\":\"11.7.2.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[430500000,2988985,3002855,291270]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":155851735.66358152,\"onlineMoneyMade\":430500000,\"onlineRunningTime\":674.0100000000164,\"pid\":676,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1802141612.4713914,499320,1685205,1615855]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":194174116.59143677,\"onlineMoneyMade\":1802141612.4713914,\"onlineRunningTime\":674.0100000000164,\"pid\":677,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[57500000,547865,1213625,1199755]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":136097312.3422638,\"onlineMoneyMade\":57500000,\"onlineRunningTime\":674.0100000000164,\"pid\":678,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2062500000,970900,1102665,963965]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":165158797.45741147,\"onlineMoneyMade\":2062500000,\"onlineRunningTime\":674.0100000000164,\"pid\":679,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[3231250000,700435,707370,707370]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":146530824.07542193,\"onlineMoneyMade\":3231250000,\"onlineRunningTime\":674.0100000000164,\"pid\":680,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,527060,547865,540930]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":81252126.77150048,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":681,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,547865,568670,561735]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":84368330.49711198,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":682,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,353685,367555,360620]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76104619.87660162,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":683,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,270465,284335,277400]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":58653879.01317701,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":684,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,291270,305140,298205]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45011831.59216648,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":685,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,145635,152570,145635]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35640137.424771875,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":686,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,228855,235790,228855]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":41687880.951514244,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":687,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,117895,117895,117895]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28253580.445544533,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":688,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,97090,97090,90155]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20276098.907979015,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":689,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,69350,69350,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17866234.693506103,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":690,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,69350,62415,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17413808.078528423,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":691,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,41610,41610,34675]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17312242.920064047,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":692,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[0,34675,27740,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12811059.760847395,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":693,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12261684.585517364,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":694,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,34675,34675,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11735392.400747417,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":695,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,6935,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8531473.311007563,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":696,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10341179.770918258,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":697,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9750255.212580072,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":698,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8125212.677150062,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":699,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9159330.654241886,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":700,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[0,20805,20805,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8351425.984638896,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":701,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7963631.743229462,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":702,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[0,20805,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6578652.309624338,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":703,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6901814.177465534,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":704,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6010810.741846236,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":705,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5493751.753300324,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":706,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":707,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":708,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":709,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":710,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[0,13870,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5900012.387157828,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":711,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5752281.247573281,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":712,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":713,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[0,13870,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5983111.153174134,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":714,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5299854.632595607,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":715,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":716,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5041325.1383226495,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":717,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6204707.862550955,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":718,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":719,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4847428.017617933,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":720,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":721,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":722,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5623016.500436802,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":723,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4939759.979858275,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":724,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":725,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4985925.960978446,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":726,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":727,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4662764.09313725,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":728,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":729,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4528882.747888755,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":730,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4016440.3574548587,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":731,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4330369.029072019,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":732,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":733,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4362685.2158561405,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":734,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4007207.1612308254,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":735,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3323950.640652297,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":736,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":737,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2012836.7768394467,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":738,\"ramUsage\":2.4,\"server\":\"moneyServer-2\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///514b464d-e0b1-4b77-9f66-8c3b1501f15f\",\"moduleSequenceNumber\":170}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-2\",\"moduleSequenceNumber\":170,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"farmServer-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"farmServer-0\",\"httpPortOpen\":true,\"ip\":\"0.2.2.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048575.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,242071144]},\"filename\":\"/scripts/executingScripts/expFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16114566494.076475,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":928,\"ramUsage\":1.75,\"server\":\"farmServer-0\",\"threads\":599186,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///a7175eb8-25c6-4be5-b23e-a67e4984470e\",\"moduleSequenceNumber\":171}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    while (true) {\\n        await ns.weaken(target);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwRmFybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL2V4ZWN1dGluZ1NjcmlwdHMvZXhwRmFybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQ2hDLE1BQU0sTUFBTSxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7SUFDNUMsT0FBTyxJQUFJLEVBQUU7UUFDWixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDRixDQUFDIn0=\",\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/expFarm.js\",\"url\":\"blob:file:///a7175eb8-25c6-4be5-b23e-a67e4984470e\",\"moduleSequenceNumber\":171}],\"dependents\":[],\"ramUsage\":1.75,\"queueCompile\":false,\"server\":\"farmServer-0\",\"moduleSequenceNumber\":171,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-3\",\"httpPortOpen\":true,\"ip\":\"73.1.2.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[52500000,3058335,2982050,291270]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":122843059.16266024,\"onlineMoneyMade\":52500000,\"onlineRunningTime\":674.0100000000164,\"pid\":739,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1491844495.291562,464645,1678270,1622790]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":191404157.72422656,\"onlineMoneyMade\":1491844495.291562,\"onlineRunningTime\":674.0100000000164,\"pid\":740,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1840000000,859940,1199755,1192820]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":147731139.5845464,\"onlineMoneyMade\":1840000000,\"onlineRunningTime\":674.0100000000164,\"pid\":741,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[4107752322,936225,1116535,963965]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":176931122.6430553,\"onlineMoneyMade\":4107752322,\"onlineRunningTime\":674.0100000000164,\"pid\":742,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[343750000,693500,707370,707370]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":128941585.26863651,\"onlineMoneyMade\":343750000,\"onlineRunningTime\":674.0100000000164,\"pid\":743,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4350000000,540930,547865,540930]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":101565158.4643755,\"onlineMoneyMade\":4350000000,\"onlineRunningTime\":674.0100000000164,\"pid\":744,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2300000000,547865,568670,561735]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":92331962.24034145,\"onlineMoneyMade\":2300000000,\"onlineRunningTime\":674.0100000000164,\"pid\":745,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,353685,367555,360620]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76104619.87660162,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":746,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,277400,284335,277400]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":58815459.94709761,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":747,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,291270,305140,298205]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45011831.59216649,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":748,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,145635,152570,145635]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35640137.42477186,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":749,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,228855,235790,228855]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":41687880.951514244,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":750,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,117895,117895,117895]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28253580.445544533,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":751,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,97090,97090,90155]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20276098.907979015,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":752,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,69350,69350,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17866234.693506103,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":753,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,69350,62415,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17413808.078528423,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":754,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,41610,41610,34675]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17312242.920064047,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":755,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[0,34675,27740,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12811059.760847395,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":756,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12261684.585517364,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":757,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,34675,34675,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11735392.400747417,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":758,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,6935,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8531473.311007563,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":759,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10341179.770918258,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":760,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9750255.212580072,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":761,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8125212.677150062,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":762,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9159330.654241886,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":763,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[0,20805,20805,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8351425.984638896,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":764,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7963631.743229462,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":765,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[0,20805,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6578652.309624338,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":766,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6901814.177465534,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":767,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6010810.741846236,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":768,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5493751.753300324,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":769,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":770,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":771,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":772,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":773,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[0,13870,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5900012.387157828,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":774,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5752281.247573281,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":775,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":776,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4653530.8969132155,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":777,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5299854.632595607,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":778,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":779,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5041325.1383226495,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":780,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6204707.862550955,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":781,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":782,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4847428.017617933,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":783,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":784,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":785,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5623016.500436802,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":786,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4939759.979858275,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":787,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":788,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4985925.960978446,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":789,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":790,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4662764.09313725,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":791,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":792,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4528882.747888755,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":793,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4016440.3574548587,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":794,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4330369.029072019,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":795,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":796,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4362685.2158561405,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":797,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4007207.1612308254,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":798,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3323950.640652297,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":799,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":800,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2012836.7768394467,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":801,\"ramUsage\":2.4,\"server\":\"moneyServer-3\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///2292900c-64b8-4d10-b9c6-ed683d399504\",\"moduleSequenceNumber\":172}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-3\",\"moduleSequenceNumber\":172,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-4\",\"httpPortOpen\":true,\"ip\":\"78.8.4.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[26250000,2988985,3002855,291270]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":120659408.25567622,\"onlineMoneyMade\":26250000,\"onlineRunningTime\":674.0100000000164,\"pid\":802,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1101828856.392238,443840,1678270,1601985]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":188634198.85701644,\"onlineMoneyMade\":1101828856.392238,\"onlineRunningTime\":674.0100000000164,\"pid\":803,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1840000000,859940,1199755,1192820]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":147731139.5845464,\"onlineMoneyMade\":1840000000,\"onlineRunningTime\":674.0100000000164,\"pid\":804,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[875000000,943160,1130405,957030]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":159503464.77019024,\"onlineMoneyMade\":875000000,\"onlineRunningTime\":674.0100000000164,\"pid\":805,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,693500,707370,707370]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126864116.11822884,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":806,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,527060,547865,540930]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":81252126.77150048,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":807,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2400000000,547865,568670,561735]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":92678207.09874257,\"onlineMoneyMade\":2400000000,\"onlineRunningTime\":674.0100000000164,\"pid\":808,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,353685,367555,360620]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76104619.87660162,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":809,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,270465,284335,277400]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":58653879.01317701,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":810,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,284335,305140,298205]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":44896416.63936606,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":811,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,145635,152570,145635]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35640137.42477186,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":812,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,221920,235790,228855]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":41549383.00815372,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":813,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,117895,117895,117895]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28253580.445544533,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":814,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,90155,97090,90155]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20109901.3759464,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":815,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,69350,69350,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17866234.693506103,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":816,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,69350,62415,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17413808.078528423,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":817,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,41610,41610,34675]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17312242.920064047,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":818,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[0,34675,27740,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12811059.760847395,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":819,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12261684.585517364,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":820,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,34675,34675,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11735392.400747417,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":821,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,6935,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8531473.311007563,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":822,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10341179.770918258,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":823,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9750255.212580072,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":824,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8125212.677150062,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":825,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9159330.654241886,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":826,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[0,20805,20805,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8351425.984638896,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":827,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7963631.743229462,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":828,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[0,20805,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6578652.309624338,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":829,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6901814.177465534,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":830,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6010810.741846236,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":831,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5493751.753300324,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":832,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":833,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":834,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":835,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":836,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[0,13870,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5900012.387157828,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":837,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5752281.247573281,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":838,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":839,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4653530.8969132155,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":840,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5299854.632595607,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":841,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":842,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5041325.1383226495,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":843,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6204707.862550955,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":844,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":845,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4847428.017617933,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":846,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":847,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":848,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5623016.500436802,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":849,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4939759.979858275,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":850,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":851,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4985925.960978446,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":852,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":853,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4662764.09313725,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":854,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":855,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4528882.747888755,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":856,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4016440.3574548587,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":857,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4330369.029072019,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":858,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":859,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4362685.2158561405,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":860,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4007207.1612308254,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":861,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3323950.640652297,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":862,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":863,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2012836.7768394467,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":864,\"ramUsage\":2.4,\"server\":\"moneyServer-4\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///0901898d-b593-4baf-a328-53646064d9cd\",\"moduleSequenceNumber\":173}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-4\",\"moduleSequenceNumber\":173,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"moneyServer-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"moneyServer-5\",\"httpPortOpen\":true,\"ip\":\"45.6.1.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1048572,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[54167596,2995920,3002855,291270]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":123147754.63805334,\"onlineMoneyMade\":54167596,\"onlineRunningTime\":674.0100000000164,\"pid\":865,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1154826336.3914604,533995,1650530,1601985]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":191958149.49766862,\"onlineMoneyMade\":1154826336.3914604,\"onlineRunningTime\":674.0100000000164,\"pid\":866,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[287500000,568670,1220560,1206690]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":138220947.47379157,\"onlineMoneyMade\":287500000,\"onlineRunningTime\":674.0100000000164,\"pid\":867,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[562500000,929290,1137340,963965]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":158464730.19498637,\"onlineMoneyMade\":562500000,\"onlineRunningTime\":674.0100000000164,\"pid\":868,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,693500,707370,707370]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126864116.11822884,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":869,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,527060,547865,540930]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":81252126.77150047,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":870,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,540930,568670,561735]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":84252915.54431157,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":871,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,353685,367555,360620]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76104619.87660162,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":872,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[5437500000,277400,284335,277400]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72873001.19818962,\"onlineMoneyMade\":5437500000,\"onlineRunningTime\":674.0100000000164,\"pid\":873,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[5000000000,291270,305140,298205]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":51936728.760192044,\"onlineMoneyMade\":5000000000,\"onlineRunningTime\":674.0100000000164,\"pid\":874,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,145635,152570,145635]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":35640137.42477186,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":875,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,221920,235790,228855]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":41549383.00815372,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":876,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,117895,117895,117895]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28253580.445544533,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":877,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,90155,97090,90155]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20109901.3759464,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":878,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,69350,69350,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17866234.693506103,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":879,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,69350,62415,62415]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17413808.078528423,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":880,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,41610,41610,34675]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17312242.920064047,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":881,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{\"computek\":[0,34675,27740,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12811059.760847395,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":882,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12261684.585517364,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":883,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,34675,34675,27740]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11735392.400747417,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":884,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,6935,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8531473.311007563,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":885,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10341179.770918258,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":886,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9750255.212580072,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":887,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8125212.677150062,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":888,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,27740,27740,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9159330.654241886,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":889,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[0,20805,20805,20805]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8351425.984638896,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":890,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7963631.743229462,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":891,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{\"lexo-corp\":[0,20805,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6578652.309624338,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":892,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,20805,20805,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6901814.177465534,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":893,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{\"global-pharm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6010810.741846236,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":894,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{\"zb-institute\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5493751.753300324,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":895,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{\"vitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":896,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{\"unitalife\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":897,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{\"zeus-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6075443.115414477,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":898,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{\"applied-energetics\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":899,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{\"zb-def\":[0,13870,13870,13870]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5900012.387157828,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":900,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{\"deltaone\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5752281.247573281,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":901,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{\"solaris\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5687648.874005042,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":902,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{\"galactic-cyber\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4653530.8969132155,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":903,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{\"nova-med\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5299854.632595607,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":904,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{\"titan-labs\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":905,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{\"microdyne\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5041325.1383226495,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":906,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{\"univ-energy\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6204707.862550955,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":907,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{\"omnia\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":908,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{\"helios\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4847428.017617933,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":909,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{\"aerocorp\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5816913.62114152,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":910,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{\"icarus\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":911,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{\"taiyang-digital\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5623016.500436802,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":912,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{\"blade\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4939759.979858275,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":913,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{\"infocomm\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5364487.006163847,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":914,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{\"omnitek\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4985925.960978446,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":915,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{\"defcomm\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4570432.130896909,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":916,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{\"fulcrumtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4662764.09313725,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":917,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{\"stormtech\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4431934.187536397,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":918,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{\"nwo\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4528882.747888755,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":919,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{\"b-and-a\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4016440.3574548587,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":920,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{\"powerhouse-fitness\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4330369.029072019,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":921,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":922,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{\"kuai-gong\":[0,6935,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4362685.2158561405,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":923,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{\"clarkinc\":[0,13870,13870,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4007207.1612308254,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":924,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{\"4sigma\":[0,13870,6935,6935]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3323950.640652297,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":925,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{\"megacorp\":[0,6935,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2516045.9710493083,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":926,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{\"fulcrumassets\":[0,0,6935,0]},\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2012836.7768394467,\"onlineMoneyMade\":0,\"onlineRunningTime\":674.0100000000164,\"pid\":927,\"ramUsage\":2.4,\"server\":\"moneyServer-5\",\"threads\":6935,\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyTreshhold = ns.getServerMaxMoney(target) * 0.75;\\n    const securityThreshhold = ns.getServerMinSecurityLevel(target) + 5;\\n    while (true) {\\n        const moneyAvailable = ns.getServerMoneyAvailable(target);\\n        const securityLevel = ns.getServerSecurityLevel(target);\\n        if (securityLevel > securityThreshhold) {\\n            await ns.weaken(target);\\n        }\\n        else if (moneyAvailable < moneyTreshhold) {\\n            await ns.grow(target);\\n        }\\n        else {\\n            await ns.hack(target);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXlGYXJtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0aW5nU2NyaXB0cy9tb25leUZhcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUNoQyxNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBVyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBFLE9BQU8sSUFBSSxFQUFFO1FBQ1osTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFELE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4RCxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsRUFBRTtZQUN2QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEI7YUFBTSxJQUFJLGNBQWMsR0FBRyxjQUFjLEVBQUU7WUFDM0MsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RCO2FBQU07WUFDTixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdEI7S0FDRDtBQUNGLENBQUMifQ==\",\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/executingScripts/moneyFarm.js\",\"url\":\"blob:file:///41c29a50-fc97-452c-86d6-43e5cddcd51a\",\"moduleSequenceNumber\":174}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"moneyServer-5\",\"moduleSequenceNumber\":174,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":414934.6521174103,\"favor\":71.9866,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":4.9008,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":234.0865,\"isBanned\":false,\"isMember\":true,\"name\":\"Daedalus\",\"playerReputation\":1409467.8034977345}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"OmniTek Incorporated\",\"playerReputation\":655339.5455039527}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":231.6266,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":216.6674,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":219.5609,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":7.2716,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":108178.57695797319}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":98.1169,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":51.1647,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":70.8633,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":29.5119,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":209979.14447380003}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":67.2864,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Speakers for the Dead\",\"playerReputation\":413620.37545703194}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"The Syndicate\",\"playerReputation\":46783.63155188415}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Tetrads\",\"playerReputation\":354077.04370198504}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":30696.317330766153}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":256.7668,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":1505381.5466168046}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":213.8611,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":1323821.0665113474}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":199.2219,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Shadows of Anarchy\",\"playerReputation\":13125.734430082257}}}","AliasesSave":"{}","GlobalAliasesSave":"{\"aliasname\":\"home1\"}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":35304.1874369623,\"lastPrice\":35334.3124668431,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.42,\"b\":true,\"otlkMag\":19.098784780866687,\"otlkMagForecast\":70.30236768469639,\"cap\":550878131,\"spreadPerc\":0.1,\"shareTxForMovement\":43745,\"shareTxUntilMovement\":43745,\"totalShares\":86500000,\"maxShares\":17300000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":42656.72918105631,\"lastPrice\":42696.594694244945,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":false,\"otlkMag\":17.52370053089416,\"otlkMagForecast\":32.00749964194471,\"cap\":390181995,\"spreadPerc\":0.1,\"shareTxForMovement\":34585,\"shareTxUntilMovement\":34585,\"totalShares\":76100000,\"maxShares\":15200000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":28193.546771349702,\"lastPrice\":28152.365536508518,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":false,\"otlkMag\":11.132963760910028,\"otlkMagForecast\":38.070236281935586,\"cap\":612010314,\"spreadPerc\":0.1,\"shareTxForMovement\":50833,\"shareTxUntilMovement\":50833,\"totalShares\":64700000,\"maxShares\":12900000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":14259.057361932119,\"lastPrice\":14280.494880404138,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":16.239268629846123,\"otlkMagForecast\":36.32880745000098,\"cap\":413186816,\"spreadPerc\":0.4,\"shareTxForMovement\":81096,\"shareTxUntilMovement\":81096,\"totalShares\":87600000,\"maxShares\":17500000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":104553.16187756292,\"lastPrice\":104686.98454936287,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":true,\"otlkMag\":12.282699835368314,\"otlkMagForecast\":61.335112637345546,\"cap\":418523810,\"spreadPerc\":0.5,\"shareTxForMovement\":69748,\"shareTxUntilMovement\":69748,\"totalShares\":53100000,\"maxShares\":10600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":112419.34193719168,\"lastPrice\":112189.13196238414,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.01,\"b\":false,\"otlkMag\":14.090831838449429,\"otlkMagForecast\":36.8516007468256,\"cap\":407771150,\"spreadPerc\":0.7,\"shareTxForMovement\":42410,\"shareTxUntilMovement\":42410,\"totalShares\":26000000,\"maxShares\":5200000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":19830.332040269925,\"lastPrice\":19862.562904361963,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":10.32452344162822,\"otlkMagForecast\":58.80619685059734,\"cap\":33941640,\"spreadPerc\":0.7,\"shareTxForMovement\":49610,\"shareTxUntilMovement\":49610,\"totalShares\":117900000,\"maxShares\":23600000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":20929.044658668507,\"lastPrice\":20877.29755018145,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.22,\"b\":true,\"otlkMag\":15.561340529514183,\"otlkMagForecast\":65.44596879254772,\"cap\":674884676,\"spreadPerc\":0.2,\"shareTxForMovement\":44807,\"shareTxUntilMovement\":44807,\"totalShares\":58600000,\"maxShares\":11700000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":10986.475668203173,\"lastPrice\":10967.758112872625,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.84,\"b\":true,\"otlkMag\":6.177446745528744,\"otlkMagForecast\":57.0782585166804,\"cap\":367061897,\"spreadPerc\":0.4,\"shareTxForMovement\":55066,\"shareTxUntilMovement\":55066,\"totalShares\":60000000,\"maxShares\":12000000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":43440.51951205014,\"lastPrice\":43378.82765742679,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":10.97358015851165,\"otlkMagForecast\":59.76100457397189,\"cap\":184601307,\"spreadPerc\":0.6,\"shareTxForMovement\":40256,\"shareTxUntilMovement\":40256,\"totalShares\":49300000,\"maxShares\":9900000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":6980.6436061110535,\"lastPrice\":6972.427538984211,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":7.8334838716915245,\"otlkMagForecast\":59.815030381357886,\"cap\":91650453,\"spreadPerc\":0.2,\"shareTxForMovement\":91747,\"shareTxUntilMovement\":91747,\"totalShares\":62100000,\"maxShares\":12400000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":13531.66316256672,\"lastPrice\":13551.182339601102,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":false,\"otlkMag\":5.214614788219585,\"otlkMagForecast\":44.709738182922216,\"cap\":157840461,\"spreadPerc\":1,\"shareTxForMovement\":80095,\"shareTxUntilMovement\":80095,\"totalShares\":92600000,\"maxShares\":18500000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":9607.792701537699,\"lastPrice\":9619.89498412294,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":false,\"otlkMag\":8.355930221588322,\"otlkMagForecast\":42.50526021095546,\"cap\":272221876,\"spreadPerc\":0.5,\"shareTxForMovement\":96160,\"shareTxUntilMovement\":96160,\"totalShares\":48300000,\"maxShares\":9700000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":32009.78468614167,\"lastPrice\":32047.503907779563,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":false,\"otlkMag\":10.000040329926886,\"otlkMagForecast\":40.29913452971443,\"cap\":241932287,\"spreadPerc\":0.2,\"shareTxForMovement\":88928,\"shareTxUntilMovement\":88928,\"totalShares\":44800000,\"maxShares\":9000000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":7281.990549378919,\"lastPrice\":7290.71934044704,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":false,\"otlkMag\":7.157781878548192,\"otlkMagForecast\":43.76560167793677,\"cap\":196472339,\"spreadPerc\":0.8,\"shareTxForMovement\":75165,\"shareTxUntilMovement\":75165,\"totalShares\":48700000,\"maxShares\":9700000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":4904.80299192339,\"lastPrice\":4911.977729818797,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":true,\"otlkMag\":4.460231510112264,\"otlkMagForecast\":52.9440763578164,\"cap\":156078287,\"spreadPerc\":0.4,\"shareTxForMovement\":119559,\"shareTxUntilMovement\":119559,\"totalShares\":88700000,\"maxShares\":17700000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":18932.268759219533,\"lastPrice\":18903.464636780067,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":true,\"otlkMag\":6.97928973501372,\"otlkMagForecast\":58.32119471642477,\"cap\":477963945,\"spreadPerc\":0.5,\"shareTxForMovement\":54424,\"shareTxUntilMovement\":54424,\"totalShares\":32900000,\"maxShares\":6600000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":33949.26963416765,\"lastPrice\":33991.34348339533,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":false,\"otlkMag\":10.419821726767552,\"otlkMagForecast\":39.647706540120346,\"cap\":516866209,\"spreadPerc\":0.6,\"shareTxForMovement\":73848,\"shareTxUntilMovement\":73848,\"totalShares\":29600000,\"maxShares\":5900000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":22343.60116988118,\"lastPrice\":22309.154386262373,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":5.843954585401781,\"otlkMagForecast\":46.08401563273471,\"cap\":45156761,\"spreadPerc\":0.7,\"shareTxForMovement\":98128,\"shareTxUntilMovement\":98128,\"totalShares\":22300000,\"maxShares\":4500000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":20825.056127001084,\"lastPrice\":20717.722902573467,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.55,\"b\":true,\"otlkMag\":8.966513697499428,\"otlkMagForecast\":56.483386037104154,\"cap\":18361364,\"spreadPerc\":0.7,\"shareTxForMovement\":16996,\"shareTxUntilMovement\":16996,\"totalShares\":60200000,\"maxShares\":12000000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":6288.5608625770265,\"lastPrice\":6303.381307218232,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.16,\"b\":true,\"otlkMag\":1.3324100293175796,\"otlkMagForecast\":50.89464112026852,\"cap\":14282117,\"spreadPerc\":1,\"shareTxForMovement\":44578,\"shareTxUntilMovement\":44578,\"totalShares\":39700000,\"maxShares\":7900000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4945.410022006454,\"lastPrice\":4951.9408408477475,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":1.24347508221781,\"otlkMagForecast\":48.626498964170466,\"cap\":100160852,\"spreadPerc\":0.9,\"shareTxForMovement\":70680,\"shareTxUntilMovement\":70680,\"totalShares\":29600000,\"maxShares\":5900000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":759.6503587601711,\"lastPrice\":756.5914502939245,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.99,\"b\":false,\"otlkMag\":10.857755465392996,\"otlkMagForecast\":37.24385886925517,\"cap\":119457532,\"spreadPerc\":1.6,\"shareTxForMovement\":52388,\"shareTxUntilMovement\":52388,\"totalShares\":31800000,\"maxShares\":6400000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":3449.468885589279,\"lastPrice\":3438.8492722477918,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.52,\"b\":true,\"otlkMag\":5.663516602701972,\"otlkMagForecast\":55.062711933039466,\"cap\":83697090,\"spreadPerc\":0.7,\"shareTxForMovement\":57948,\"shareTxUntilMovement\":57948,\"totalShares\":49400000,\"maxShares\":9900000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":11259.73944799248,\"lastPrice\":11282.157939807228,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.98,\"b\":false,\"otlkMag\":5.46043233014921,\"otlkMagForecast\":44.47088431380096,\"cap\":84733147,\"spreadPerc\":0.5,\"shareTxForMovement\":83500,\"shareTxUntilMovement\":83500,\"totalShares\":34400000,\"maxShares\":6900000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":19742.056942452447,\"lastPrice\":19892.4665727249,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.75,\"b\":true,\"otlkMag\":1.6343922012989798,\"otlkMagForecast\":49.89692876750814,\"cap\":14288708,\"spreadPerc\":1.3,\"shareTxForMovement\":30450,\"shareTxUntilMovement\":30450,\"totalShares\":26700000,\"maxShares\":5300000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":6040.015647414072,\"lastPrice\":6052.777783719473,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.04,\"b\":false,\"otlkMag\":5.993459971575866,\"otlkMagForecast\":45.707657671604615,\"cap\":51834886,\"spreadPerc\":0.4,\"shareTxForMovement\":60874,\"shareTxUntilMovement\":60874,\"totalShares\":9000000,\"maxShares\":1800000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":3514.355351938982,\"lastPrice\":3519.7817449017916,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":1.8498165813206184,\"otlkMagForecast\":48.71346217796626,\"cap\":80504247,\"spreadPerc\":1,\"shareTxForMovement\":80885,\"shareTxUntilMovement\":80885,\"totalShares\":11300000,\"maxShares\":2300000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1853.0258517598443,\"lastPrice\":1848.0697038996984,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.32,\"b\":true,\"otlkMag\":5.329122896030903,\"otlkMagForecast\":51.845226664473415,\"cap\":56141878,\"spreadPerc\":0.7,\"shareTxForMovement\":42875,\"shareTxUntilMovement\":42875,\"totalShares\":11700000,\"maxShares\":2300000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":926.4036004753181,\"lastPrice\":922.1134569846184,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.29,\"b\":false,\"otlkMag\":8.046458984166867,\"otlkMagForecast\":40.86693040240901,\"cap\":20704704,\"spreadPerc\":1,\"shareTxForMovement\":31103,\"shareTxUntilMovement\":31103,\"totalShares\":30100000,\"maxShares\":6000000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":3689.887413240514,\"lastPrice\":3679.4219223736022,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.4,\"b\":true,\"otlkMag\":16.43555709052801,\"otlkMagForecast\":65.3334543297578,\"cap\":6639259,\"spreadPerc\":0.6,\"shareTxForMovement\":47571,\"shareTxUntilMovement\":47571,\"totalShares\":72300000,\"maxShares\":14500000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":87084.25469514549,\"lastPrice\":87208.1028826314,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":9.864780646989953,\"otlkMagForecast\":56.949625310322894,\"cap\":441463846,\"spreadPerc\":0.7,\"shareTxForMovement\":114474,\"shareTxUntilMovement\":114474,\"totalShares\":14400000,\"maxShares\":2900000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":7614.707415672888,\"lastPrice\":7624.763260272207,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":9.568017640114066,\"otlkMagForecast\":40.355513234069974,\"cap\":301792468,\"spreadPerc\":0.3,\"shareTxForMovement\":203903,\"shareTxUntilMovement\":203903,\"totalShares\":26800000,\"maxShares\":5400000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":355078,\"lastUpdate\":1673437701046,\"ticksUntilCycle\":13}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"de\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#E0E0BC\",\"primary\":\"#CCCCAE\",\"primarydark\":\"#B8B89C\",\"successlight\":\"#00F000\",\"success\":\"#00D200\",\"successdark\":\"#00B400\",\"errorlight\":\"#F00000\",\"error\":\"#C80000\",\"errordark\":\"#A00000\",\"secondarylight\":\"#B4AEAE\",\"secondary\":\"#969090\",\"secondarydark\":\"#787272\",\"warninglight\":\"#F0F000\",\"warning\":\"#C8C800\",\"warningdark\":\"#A0A000\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#1E1E1E\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#1E1E1E\",\"backgroundsecondary\":\"#252525\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":14,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\"}","VersionSave":"29","AllGangsSave":"","LastExportBonus":"1673437702575","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"storedCycles\":0}}"}}